{"version":3,"file":"index.js","sources":["../node_modules/commander/lib/error.js","../node_modules/commander/lib/argument.js","../node_modules/commander/lib/help.js","../node_modules/commander/lib/option.js","../node_modules/commander/lib/suggestSimilar.js","../node_modules/commander/lib/command.js","../node_modules/commander/index.js","../node_modules/commander/esm.mjs","../node_modules/resolve-from/index.js","../node_modules/callsites/index.js","../node_modules/parent-module/index.js","../node_modules/import-fresh/index.js","../node_modules/is-arrayish/index.js","../node_modules/error-ex/index.js","../node_modules/json-parse-even-better-errors/index.js","../node_modules/lines-and-columns/build/index.js","../node_modules/picocolors/picocolors.browser.js","../node_modules/js-tokens/index.js","../node_modules/@babel/helper-validator-identifier/lib/identifier.js","../node_modules/@babel/helper-validator-identifier/lib/keyword.js","../node_modules/@babel/helper-validator-identifier/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/parse-json/index.js","../node_modules/js-yaml/lib/common.js","../node_modules/js-yaml/lib/exception.js","../node_modules/js-yaml/lib/snippet.js","../node_modules/js-yaml/lib/type.js","../node_modules/js-yaml/lib/schema.js","../node_modules/js-yaml/lib/type/str.js","../node_modules/js-yaml/lib/type/seq.js","../node_modules/js-yaml/lib/type/map.js","../node_modules/js-yaml/lib/schema/failsafe.js","../node_modules/js-yaml/lib/type/null.js","../node_modules/js-yaml/lib/type/bool.js","../node_modules/js-yaml/lib/type/int.js","../node_modules/js-yaml/lib/type/float.js","../node_modules/js-yaml/lib/schema/json.js","../node_modules/js-yaml/lib/schema/core.js","../node_modules/js-yaml/lib/type/timestamp.js","../node_modules/js-yaml/lib/type/merge.js","../node_modules/js-yaml/lib/type/binary.js","../node_modules/js-yaml/lib/type/omap.js","../node_modules/js-yaml/lib/type/pairs.js","../node_modules/js-yaml/lib/type/set.js","../node_modules/js-yaml/lib/schema/default.js","../node_modules/js-yaml/lib/loader.js","../node_modules/js-yaml/lib/dumper.js","../node_modules/js-yaml/index.js","../node_modules/cosmiconfig/dist/loaders.js","../node_modules/cosmiconfig/dist/defaults.js","../node_modules/env-paths/index.js","../node_modules/cosmiconfig/dist/util.js","../node_modules/cosmiconfig/dist/ExplorerBase.js","../node_modules/cosmiconfig/dist/merge.js","../node_modules/cosmiconfig/dist/Explorer.js","../node_modules/cosmiconfig/dist/ExplorerSync.js","../node_modules/cosmiconfig/dist/index.js","../src/utils/logger.ts","../src/utils/read-config.ts","../src/utils/populate-metadata.ts","../src/utils/constants.ts","../src/utils/read-files.ts","../src/streams/stream-directory-reader.ts","../__vite-browser-external:stream","../__vite-browser-external:string_decoder","../node_modules/sax/lib/sax.js","../node_modules/svg-pathdata/dist/SVGPathDataEncoder.js","../node_modules/svg-pathdata/dist/mathUtils.js","../node_modules/svg-pathdata/dist/SVGPathDataTransformer.js","../node_modules/svg-pathdata/dist/TransformableSVG.js","../node_modules/svg-pathdata/dist/SVGPathDataParser.js","../node_modules/svg-pathdata/dist/SVGPathData.js","../src/svg-helpers/svg-rect-to-path.ts","../src/svg-helpers/svg-line-to-path.ts","../src/svg-helpers/svg-circle-to-path.ts","../src/streams/stream-prepare-transformer.ts","../src/utils/slugify.ts","../src/utils/coders.ts","../src/streams/stream-svg-font-transformer.ts","../src/generators/font-svg/font-svg.ts","../src/svg-to-ttf/lib/sfnt.ts","../src/svg-to-ttf/lib/ucs2.ts","../node_modules/microbuffer/index.js","../src/svg-to-ttf/lib/math.ts","../src/svg-to-ttf/lib/ttf/utils.ts","../src/svg-to-ttf/lib/ttf/tables/gsub.ts","../src/svg-to-ttf/lib/ttf/tables/os2.ts","../src/svg-to-ttf/lib/ttf/tables/cmap.ts","../src/svg-to-ttf/lib/ttf/tables/glyf.ts","../src/svg-to-ttf/lib/ttf/tables/head.ts","../src/svg-to-ttf/lib/ttf/tables/hhea.ts","../src/svg-to-ttf/lib/ttf/tables/hmtx.ts","../src/svg-to-ttf/lib/ttf/tables/loca.ts","../src/svg-to-ttf/lib/ttf/tables/maxp.ts","../src/svg-to-ttf/lib/str.ts","../src/svg-to-ttf/lib/ttf/tables/name.ts","../src/svg-to-ttf/lib/ttf/tables/post.ts","../src/svg-to-ttf/lib/ttf.ts","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/errors.js","../node_modules/@xmldom/xmldom/lib/grammar.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/index.js","../src/svg-to-ttf/lib/svg.ts","../src/svg-to-ttf/lib/ttf/cubic-quad.ts","../src/utils/round.ts","../src/svg-helpers/svg-path-to-contour.ts","../src/svg-to-ttf/index.ts","../src/generators/font-ttf/font-ttf.ts","../node_modules/ttf2eot/index.js","../src/generators/font-eot/font-eot.ts","../node_modules/pako/lib/utils/common.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/utils/strings.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/deflate.js","../node_modules/ttf2woff/index.js","../src/generators/font-woff/font-woff.ts","../node_modules/wawoff2/build/compress_binding.js","../node_modules/wawoff2/compress.js","../node_modules/wawoff2/build/decompress_binding.js","../node_modules/wawoff2/decompress.js","../node_modules/wawoff2/index.js","../src/generators/font-woff2/font-woff2.ts","../src/generators/style-css/style-css.ts","../src/default-config.ts","../src/cli/generate.ts","../src/generators/index-html/index-html.ts","../src/generators/logo-svg/logo-svg.ts","../src/server/router.ts","../src/server/watcher.ts","../src/server/server.ts","../src/server/scan-available-port.ts","../src/cli/demo.ts","../src/index.ts"],"sourcesContent":["/**\n * CommanderError class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\n","const { InvalidArgumentError } = require('./error.js');\n\nclass Argument {\n  /**\n   * Initialize a new command argument with the given name and description.\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   */\n\n  constructor(name, description) {\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n\n    switch (name[0]) {\n      case '<': // e.g. <required>\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[': // e.g. [optional]\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n\n  /**\n   * Return argument name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    return this._name;\n  }\n\n  /**\n   * @package\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Argument}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI command arguments into argument values.\n   *\n   * @param {Function} [fn]\n   * @return {Argument}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Only allow argument value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Argument}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(\n          `Allowed choices are ${this.argChoices.join(', ')}.`,\n        );\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Make argument required.\n   *\n   * @returns {Argument}\n   */\n  argRequired() {\n    this.required = true;\n    return this;\n  }\n\n  /**\n   * Make argument optional.\n   *\n   * @returns {Argument}\n   */\n  argOptional() {\n    this.required = false;\n    return this;\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Argument} arg\n * @return {string}\n * @private\n */\n\nfunction humanReadableArgName(arg) {\n  const nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n\n  return arg.required ? '<' + nameOutput + '>' : '[' + nameOutput + ']';\n}\n\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;\n","const { humanReadableArgName } = require('./argument.js');\n\n/**\n * TypeScript import types for JSDoc, used by Visual Studio Code IntelliSense and `npm run typescript-checkJS`\n * https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html#import-types\n * @typedef { import(\"./argument.js\").Argument } Argument\n * @typedef { import(\"./command.js\").Command } Command\n * @typedef { import(\"./option.js\").Option } Option\n */\n\n// Although this is a class, methods are static in style to allow override using subclass or just functions.\nclass Help {\n  constructor() {\n    this.helpWidth = undefined;\n    this.sortSubcommands = false;\n    this.sortOptions = false;\n    this.showGlobalOptions = false;\n  }\n\n  /**\n   * Get an array of the visible subcommands. Includes a placeholder for the implicit help command, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Command[]}\n   */\n\n  visibleCommands(cmd) {\n    const visibleCommands = cmd.commands.filter((cmd) => !cmd._hidden);\n    const helpCommand = cmd._getHelpCommand();\n    if (helpCommand && !helpCommand._hidden) {\n      visibleCommands.push(helpCommand);\n    }\n    if (this.sortSubcommands) {\n      visibleCommands.sort((a, b) => {\n        // @ts-ignore: because overloaded return type\n        return a.name().localeCompare(b.name());\n      });\n    }\n    return visibleCommands;\n  }\n\n  /**\n   * Compare options for sort.\n   *\n   * @param {Option} a\n   * @param {Option} b\n   * @returns {number}\n   */\n  compareOptions(a, b) {\n    const getSortKey = (option) => {\n      // WYSIWYG for order displayed in help. Short used for comparison if present. No special handling for negated.\n      return option.short\n        ? option.short.replace(/^-/, '')\n        : option.long.replace(/^--/, '');\n    };\n    return getSortKey(a).localeCompare(getSortKey(b));\n  }\n\n  /**\n   * Get an array of the visible options. Includes a placeholder for the implicit help option, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleOptions(cmd) {\n    const visibleOptions = cmd.options.filter((option) => !option.hidden);\n    // Built-in help option.\n    const helpOption = cmd._getHelpOption();\n    if (helpOption && !helpOption.hidden) {\n      // Automatically hide conflicting flags. Bit dubious but a historical behaviour that is convenient for single-command programs.\n      const removeShort = helpOption.short && cmd._findOption(helpOption.short);\n      const removeLong = helpOption.long && cmd._findOption(helpOption.long);\n      if (!removeShort && !removeLong) {\n        visibleOptions.push(helpOption); // no changes needed\n      } else if (helpOption.long && !removeLong) {\n        visibleOptions.push(\n          cmd.createOption(helpOption.long, helpOption.description),\n        );\n      } else if (helpOption.short && !removeShort) {\n        visibleOptions.push(\n          cmd.createOption(helpOption.short, helpOption.description),\n        );\n      }\n    }\n    if (this.sortOptions) {\n      visibleOptions.sort(this.compareOptions);\n    }\n    return visibleOptions;\n  }\n\n  /**\n   * Get an array of the visible global options. (Not including help.)\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleGlobalOptions(cmd) {\n    if (!this.showGlobalOptions) return [];\n\n    const globalOptions = [];\n    for (\n      let ancestorCmd = cmd.parent;\n      ancestorCmd;\n      ancestorCmd = ancestorCmd.parent\n    ) {\n      const visibleOptions = ancestorCmd.options.filter(\n        (option) => !option.hidden,\n      );\n      globalOptions.push(...visibleOptions);\n    }\n    if (this.sortOptions) {\n      globalOptions.sort(this.compareOptions);\n    }\n    return globalOptions;\n  }\n\n  /**\n   * Get an array of the arguments if any have a description.\n   *\n   * @param {Command} cmd\n   * @returns {Argument[]}\n   */\n\n  visibleArguments(cmd) {\n    // Side effect! Apply the legacy descriptions before the arguments are displayed.\n    if (cmd._argsDescription) {\n      cmd.registeredArguments.forEach((argument) => {\n        argument.description =\n          argument.description || cmd._argsDescription[argument.name()] || '';\n      });\n    }\n\n    // If there are any arguments with a description then return all the arguments.\n    if (cmd.registeredArguments.find((argument) => argument.description)) {\n      return cmd.registeredArguments;\n    }\n    return [];\n  }\n\n  /**\n   * Get the command term to show in the list of subcommands.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandTerm(cmd) {\n    // Legacy. Ignores custom usage string, and nested commands.\n    const args = cmd.registeredArguments\n      .map((arg) => humanReadableArgName(arg))\n      .join(' ');\n    return (\n      cmd._name +\n      (cmd._aliases[0] ? '|' + cmd._aliases[0] : '') +\n      (cmd.options.length ? ' [options]' : '') + // simplistic check for non-help option\n      (args ? ' ' + args : '')\n    );\n  }\n\n  /**\n   * Get the option term to show in the list of options.\n   *\n   * @param {Option} option\n   * @returns {string}\n   */\n\n  optionTerm(option) {\n    return option.flags;\n  }\n\n  /**\n   * Get the argument term to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @returns {string}\n   */\n\n  argumentTerm(argument) {\n    return argument.name();\n  }\n\n  /**\n   * Get the longest command term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestSubcommandTermLength(cmd, helper) {\n    return helper.visibleCommands(cmd).reduce((max, command) => {\n      return Math.max(max, helper.subcommandTerm(command).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestOptionTermLength(cmd, helper) {\n    return helper.visibleOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest global option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestGlobalOptionTermLength(cmd, helper) {\n    return helper.visibleGlobalOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest argument term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestArgumentTermLength(cmd, helper) {\n    return helper.visibleArguments(cmd).reduce((max, argument) => {\n      return Math.max(max, helper.argumentTerm(argument).length);\n    }, 0);\n  }\n\n  /**\n   * Get the command usage to be displayed at the top of the built-in help.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandUsage(cmd) {\n    // Usage\n    let cmdName = cmd._name;\n    if (cmd._aliases[0]) {\n      cmdName = cmdName + '|' + cmd._aliases[0];\n    }\n    let ancestorCmdNames = '';\n    for (\n      let ancestorCmd = cmd.parent;\n      ancestorCmd;\n      ancestorCmd = ancestorCmd.parent\n    ) {\n      ancestorCmdNames = ancestorCmd.name() + ' ' + ancestorCmdNames;\n    }\n    return ancestorCmdNames + cmdName + ' ' + cmd.usage();\n  }\n\n  /**\n   * Get the description for the command.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandDescription(cmd) {\n    // @ts-ignore: because overloaded return type\n    return cmd.description();\n  }\n\n  /**\n   * Get the subcommand summary to show in the list of subcommands.\n   * (Fallback to description for backwards compatibility.)\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandDescription(cmd) {\n    // @ts-ignore: because overloaded return type\n    return cmd.summary() || cmd.description();\n  }\n\n  /**\n   * Get the option description to show in the list of options.\n   *\n   * @param {Option} option\n   * @return {string}\n   */\n\n  optionDescription(option) {\n    const extraInfo = [];\n\n    if (option.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${option.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`,\n      );\n    }\n    if (option.defaultValue !== undefined) {\n      // default for boolean and negated more for programmer than end user,\n      // but show true/false for boolean option as may be for hand-rolled env or config processing.\n      const showDefault =\n        option.required ||\n        option.optional ||\n        (option.isBoolean() && typeof option.defaultValue === 'boolean');\n      if (showDefault) {\n        extraInfo.push(\n          `default: ${option.defaultValueDescription || JSON.stringify(option.defaultValue)}`,\n        );\n      }\n    }\n    // preset for boolean and negated are more for programmer than end user\n    if (option.presetArg !== undefined && option.optional) {\n      extraInfo.push(`preset: ${JSON.stringify(option.presetArg)}`);\n    }\n    if (option.envVar !== undefined) {\n      extraInfo.push(`env: ${option.envVar}`);\n    }\n    if (extraInfo.length > 0) {\n      return `${option.description} (${extraInfo.join(', ')})`;\n    }\n\n    return option.description;\n  }\n\n  /**\n   * Get the argument description to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @return {string}\n   */\n\n  argumentDescription(argument) {\n    const extraInfo = [];\n    if (argument.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${argument.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`,\n      );\n    }\n    if (argument.defaultValue !== undefined) {\n      extraInfo.push(\n        `default: ${argument.defaultValueDescription || JSON.stringify(argument.defaultValue)}`,\n      );\n    }\n    if (extraInfo.length > 0) {\n      const extraDescripton = `(${extraInfo.join(', ')})`;\n      if (argument.description) {\n        return `${argument.description} ${extraDescripton}`;\n      }\n      return extraDescripton;\n    }\n    return argument.description;\n  }\n\n  /**\n   * Generate the built-in help text.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {string}\n   */\n\n  formatHelp(cmd, helper) {\n    const termWidth = helper.padWidth(cmd, helper);\n    const helpWidth = helper.helpWidth || 80;\n    const itemIndentWidth = 2;\n    const itemSeparatorWidth = 2; // between term and description\n    function formatItem(term, description) {\n      if (description) {\n        const fullText = `${term.padEnd(termWidth + itemSeparatorWidth)}${description}`;\n        return helper.wrap(\n          fullText,\n          helpWidth - itemIndentWidth,\n          termWidth + itemSeparatorWidth,\n        );\n      }\n      return term;\n    }\n    function formatList(textArray) {\n      return textArray.join('\\n').replace(/^/gm, ' '.repeat(itemIndentWidth));\n    }\n\n    // Usage\n    let output = [`Usage: ${helper.commandUsage(cmd)}`, ''];\n\n    // Description\n    const commandDescription = helper.commandDescription(cmd);\n    if (commandDescription.length > 0) {\n      output = output.concat([\n        helper.wrap(commandDescription, helpWidth, 0),\n        '',\n      ]);\n    }\n\n    // Arguments\n    const argumentList = helper.visibleArguments(cmd).map((argument) => {\n      return formatItem(\n        helper.argumentTerm(argument),\n        helper.argumentDescription(argument),\n      );\n    });\n    if (argumentList.length > 0) {\n      output = output.concat(['Arguments:', formatList(argumentList), '']);\n    }\n\n    // Options\n    const optionList = helper.visibleOptions(cmd).map((option) => {\n      return formatItem(\n        helper.optionTerm(option),\n        helper.optionDescription(option),\n      );\n    });\n    if (optionList.length > 0) {\n      output = output.concat(['Options:', formatList(optionList), '']);\n    }\n\n    if (this.showGlobalOptions) {\n      const globalOptionList = helper\n        .visibleGlobalOptions(cmd)\n        .map((option) => {\n          return formatItem(\n            helper.optionTerm(option),\n            helper.optionDescription(option),\n          );\n        });\n      if (globalOptionList.length > 0) {\n        output = output.concat([\n          'Global Options:',\n          formatList(globalOptionList),\n          '',\n        ]);\n      }\n    }\n\n    // Commands\n    const commandList = helper.visibleCommands(cmd).map((cmd) => {\n      return formatItem(\n        helper.subcommandTerm(cmd),\n        helper.subcommandDescription(cmd),\n      );\n    });\n    if (commandList.length > 0) {\n      output = output.concat(['Commands:', formatList(commandList), '']);\n    }\n\n    return output.join('\\n');\n  }\n\n  /**\n   * Calculate the pad width from the maximum term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  padWidth(cmd, helper) {\n    return Math.max(\n      helper.longestOptionTermLength(cmd, helper),\n      helper.longestGlobalOptionTermLength(cmd, helper),\n      helper.longestSubcommandTermLength(cmd, helper),\n      helper.longestArgumentTermLength(cmd, helper),\n    );\n  }\n\n  /**\n   * Wrap the given string to width characters per line, with lines after the first indented.\n   * Do not wrap if insufficient room for wrapping (minColumnWidth), or string is manually formatted.\n   *\n   * @param {string} str\n   * @param {number} width\n   * @param {number} indent\n   * @param {number} [minColumnWidth=40]\n   * @return {string}\n   *\n   */\n\n  wrap(str, width, indent, minColumnWidth = 40) {\n    // Full \\s characters, minus the linefeeds.\n    const indents =\n      ' \\\\f\\\\t\\\\v\\u00a0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff';\n    // Detect manually wrapped and indented strings by searching for line break followed by spaces.\n    const manualIndent = new RegExp(`[\\\\n][${indents}]+`);\n    if (str.match(manualIndent)) return str;\n    // Do not wrap if not enough room for a wrapped column of text (as could end up with a word per line).\n    const columnWidth = width - indent;\n    if (columnWidth < minColumnWidth) return str;\n\n    const leadingStr = str.slice(0, indent);\n    const columnText = str.slice(indent).replace('\\r\\n', '\\n');\n    const indentString = ' '.repeat(indent);\n    const zeroWidthSpace = '\\u200B';\n    const breaks = `\\\\s${zeroWidthSpace}`;\n    // Match line end (so empty lines don't collapse),\n    // or as much text as will fit in column, or excess text up to first break.\n    const regex = new RegExp(\n      `\\n|.{1,${columnWidth - 1}}([${breaks}]|$)|[^${breaks}]+?([${breaks}]|$)`,\n      'g',\n    );\n    const lines = columnText.match(regex) || [];\n    return (\n      leadingStr +\n      lines\n        .map((line, i) => {\n          if (line === '\\n') return ''; // preserve empty lines\n          return (i > 0 ? indentString : '') + line.trimEnd();\n        })\n        .join('\\n')\n    );\n  }\n}\n\nexports.Help = Help;\n","const { InvalidArgumentError } = require('./error.js');\n\nclass Option {\n  /**\n   * Initialize a new `Option` with the given `flags` and `description`.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   */\n\n  constructor(flags, description) {\n    this.flags = flags;\n    this.description = description || '';\n\n    this.required = flags.includes('<'); // A value must be supplied when the option is specified.\n    this.optional = flags.includes('['); // A value is optional when the option is specified.\n    // variadic test ignores <value,...> et al which might be used to describe custom splitting of single argument\n    this.variadic = /\\w\\.\\.\\.[>\\]]$/.test(flags); // The option can take multiple values.\n    this.mandatory = false; // The option must have a value after parsing, which usually means it must be specified on command line.\n    const optionFlags = splitOptionFlags(flags);\n    this.short = optionFlags.shortFlag;\n    this.long = optionFlags.longFlag;\n    this.negate = false;\n    if (this.long) {\n      this.negate = this.long.startsWith('--no-');\n    }\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.presetArg = undefined;\n    this.envVar = undefined;\n    this.parseArg = undefined;\n    this.hidden = false;\n    this.argChoices = undefined;\n    this.conflictsWith = [];\n    this.implied = undefined;\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Option}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Preset to use when option used without option-argument, especially optional but also boolean and negated.\n   * The custom processing (parseArg) is called.\n   *\n   * @example\n   * new Option('--color').default('GREYSCALE').preset('RGB');\n   * new Option('--donate [amount]').preset('20').argParser(parseFloat);\n   *\n   * @param {*} arg\n   * @return {Option}\n   */\n\n  preset(arg) {\n    this.presetArg = arg;\n    return this;\n  }\n\n  /**\n   * Add option name(s) that conflict with this option.\n   * An error will be displayed if conflicting options are found during parsing.\n   *\n   * @example\n   * new Option('--rgb').conflicts('cmyk');\n   * new Option('--js').conflicts(['ts', 'jsx']);\n   *\n   * @param {(string | string[])} names\n   * @return {Option}\n   */\n\n  conflicts(names) {\n    this.conflictsWith = this.conflictsWith.concat(names);\n    return this;\n  }\n\n  /**\n   * Specify implied option values for when this option is set and the implied options are not.\n   *\n   * The custom processing (parseArg) is not called on the implied values.\n   *\n   * @example\n   * program\n   *   .addOption(new Option('--log', 'write logging information to file'))\n   *   .addOption(new Option('--trace', 'log extra details').implies({ log: 'trace.txt' }));\n   *\n   * @param {object} impliedOptionValues\n   * @return {Option}\n   */\n  implies(impliedOptionValues) {\n    let newImplied = impliedOptionValues;\n    if (typeof impliedOptionValues === 'string') {\n      // string is not documented, but easy mistake and we can do what user probably intended.\n      newImplied = { [impliedOptionValues]: true };\n    }\n    this.implied = Object.assign(this.implied || {}, newImplied);\n    return this;\n  }\n\n  /**\n   * Set environment variable to check for option value.\n   *\n   * An environment variable is only used if when processed the current option value is\n   * undefined, or the source of the current value is 'default' or 'config' or 'env'.\n   *\n   * @param {string} name\n   * @return {Option}\n   */\n\n  env(name) {\n    this.envVar = name;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI option arguments into option values.\n   *\n   * @param {Function} [fn]\n   * @return {Option}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Whether the option is mandatory and must have a value after parsing.\n   *\n   * @param {boolean} [mandatory=true]\n   * @return {Option}\n   */\n\n  makeOptionMandatory(mandatory = true) {\n    this.mandatory = !!mandatory;\n    return this;\n  }\n\n  /**\n   * Hide option in help.\n   *\n   * @param {boolean} [hide=true]\n   * @return {Option}\n   */\n\n  hideHelp(hide = true) {\n    this.hidden = !!hide;\n    return this;\n  }\n\n  /**\n   * @package\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Only allow option value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Option}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(\n          `Allowed choices are ${this.argChoices.join(', ')}.`,\n        );\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Return option name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    if (this.long) {\n      return this.long.replace(/^--/, '');\n    }\n    return this.short.replace(/^-/, '');\n  }\n\n  /**\n   * Return option name, in a camelcase format that can be used\n   * as a object attribute key.\n   *\n   * @return {string}\n   */\n\n  attributeName() {\n    return camelcase(this.name().replace(/^no-/, ''));\n  }\n\n  /**\n   * Check if `arg` matches the short or long flag.\n   *\n   * @param {string} arg\n   * @return {boolean}\n   * @package\n   */\n\n  is(arg) {\n    return this.short === arg || this.long === arg;\n  }\n\n  /**\n   * Return whether a boolean option.\n   *\n   * Options are one of boolean, negated, required argument, or optional argument.\n   *\n   * @return {boolean}\n   * @package\n   */\n\n  isBoolean() {\n    return !this.required && !this.optional && !this.negate;\n  }\n}\n\n/**\n * This class is to make it easier to work with dual options, without changing the existing\n * implementation. We support separate dual options for separate positive and negative options,\n * like `--build` and `--no-build`, which share a single option value. This works nicely for some\n * use cases, but is tricky for others where we want separate behaviours despite\n * the single shared option value.\n */\nclass DualOptions {\n  /**\n   * @param {Option[]} options\n   */\n  constructor(options) {\n    this.positiveOptions = new Map();\n    this.negativeOptions = new Map();\n    this.dualOptions = new Set();\n    options.forEach((option) => {\n      if (option.negate) {\n        this.negativeOptions.set(option.attributeName(), option);\n      } else {\n        this.positiveOptions.set(option.attributeName(), option);\n      }\n    });\n    this.negativeOptions.forEach((value, key) => {\n      if (this.positiveOptions.has(key)) {\n        this.dualOptions.add(key);\n      }\n    });\n  }\n\n  /**\n   * Did the value come from the option, and not from possible matching dual option?\n   *\n   * @param {*} value\n   * @param {Option} option\n   * @returns {boolean}\n   */\n  valueFromOption(value, option) {\n    const optionKey = option.attributeName();\n    if (!this.dualOptions.has(optionKey)) return true;\n\n    // Use the value to deduce if (probably) came from the option.\n    const preset = this.negativeOptions.get(optionKey).presetArg;\n    const negativeValue = preset !== undefined ? preset : false;\n    return option.negate === (negativeValue === value);\n  }\n}\n\n/**\n * Convert string from kebab-case to camelCase.\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction camelcase(str) {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Split the short and long flag out of something like '-m,--mixed <value>'\n *\n * @private\n */\n\nfunction splitOptionFlags(flags) {\n  let shortFlag;\n  let longFlag;\n  // Use original very loose parsing to maintain backwards compatibility for now,\n  // which allowed for example unintended `-sw, --short-word` [sic].\n  const flagParts = flags.split(/[ |,]+/);\n  if (flagParts.length > 1 && !/^[[<]/.test(flagParts[1]))\n    shortFlag = flagParts.shift();\n  longFlag = flagParts.shift();\n  // Add support for lone short flag without significantly changing parsing!\n  if (!shortFlag && /^-[^-]$/.test(longFlag)) {\n    shortFlag = longFlag;\n    longFlag = undefined;\n  }\n  return { shortFlag, longFlag };\n}\n\nexports.Option = Option;\nexports.DualOptions = DualOptions;\n","const maxDistance = 3;\n\nfunction editDistance(a, b) {\n  // https://en.wikipedia.org/wiki/Damerau–Levenshtein_distance\n  // Calculating optimal string alignment distance, no substring is edited more than once.\n  // (Simple implementation.)\n\n  // Quick early exit, return worst case.\n  if (Math.abs(a.length - b.length) > maxDistance)\n    return Math.max(a.length, b.length);\n\n  // distance between prefix substrings of a and b\n  const d = [];\n\n  // pure deletions turn a into empty string\n  for (let i = 0; i <= a.length; i++) {\n    d[i] = [i];\n  }\n  // pure insertions turn empty string into b\n  for (let j = 0; j <= b.length; j++) {\n    d[0][j] = j;\n  }\n\n  // fill matrix\n  for (let j = 1; j <= b.length; j++) {\n    for (let i = 1; i <= a.length; i++) {\n      let cost = 1;\n      if (a[i - 1] === b[j - 1]) {\n        cost = 0;\n      } else {\n        cost = 1;\n      }\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1, // deletion\n        d[i][j - 1] + 1, // insertion\n        d[i - 1][j - 1] + cost, // substitution\n      );\n      // transposition\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n      }\n    }\n  }\n\n  return d[a.length][b.length];\n}\n\n/**\n * Find close matches, restricted to same number of edits.\n *\n * @param {string} word\n * @param {string[]} candidates\n * @returns {string}\n */\n\nfunction suggestSimilar(word, candidates) {\n  if (!candidates || candidates.length === 0) return '';\n  // remove possible duplicates\n  candidates = Array.from(new Set(candidates));\n\n  const searchingOptions = word.startsWith('--');\n  if (searchingOptions) {\n    word = word.slice(2);\n    candidates = candidates.map((candidate) => candidate.slice(2));\n  }\n\n  let similar = [];\n  let bestDistance = maxDistance;\n  const minSimilarity = 0.4;\n  candidates.forEach((candidate) => {\n    if (candidate.length <= 1) return; // no one character guesses\n\n    const distance = editDistance(word, candidate);\n    const length = Math.max(word.length, candidate.length);\n    const similarity = (length - distance) / length;\n    if (similarity > minSimilarity) {\n      if (distance < bestDistance) {\n        // better edit distance, throw away previous worse matches\n        bestDistance = distance;\n        similar = [candidate];\n      } else if (distance === bestDistance) {\n        similar.push(candidate);\n      }\n    }\n  });\n\n  similar.sort((a, b) => a.localeCompare(b));\n  if (searchingOptions) {\n    similar = similar.map((candidate) => `--${candidate}`);\n  }\n\n  if (similar.length > 1) {\n    return `\\n(Did you mean one of ${similar.join(', ')}?)`;\n  }\n  if (similar.length === 1) {\n    return `\\n(Did you mean ${similar[0]}?)`;\n  }\n  return '';\n}\n\nexports.suggestSimilar = suggestSimilar;\n","const EventEmitter = require('node:events').EventEmitter;\nconst childProcess = require('node:child_process');\nconst path = require('node:path');\nconst fs = require('node:fs');\nconst process = require('node:process');\n\nconst { Argument, humanReadableArgName } = require('./argument.js');\nconst { CommanderError } = require('./error.js');\nconst { Help } = require('./help.js');\nconst { Option, DualOptions } = require('./option.js');\nconst { suggestSimilar } = require('./suggestSimilar');\n\nclass Command extends EventEmitter {\n  /**\n   * Initialize a new `Command`.\n   *\n   * @param {string} [name]\n   */\n\n  constructor(name) {\n    super();\n    /** @type {Command[]} */\n    this.commands = [];\n    /** @type {Option[]} */\n    this.options = [];\n    this.parent = null;\n    this._allowUnknownOption = false;\n    this._allowExcessArguments = true;\n    /** @type {Argument[]} */\n    this.registeredArguments = [];\n    this._args = this.registeredArguments; // deprecated old name\n    /** @type {string[]} */\n    this.args = []; // cli args with options removed\n    this.rawArgs = [];\n    this.processedArgs = []; // like .args but after custom processing and collecting variadic\n    this._scriptPath = null;\n    this._name = name || '';\n    this._optionValues = {};\n    this._optionValueSources = {}; // default, env, cli etc\n    this._storeOptionsAsProperties = false;\n    this._actionHandler = null;\n    this._executableHandler = false;\n    this._executableFile = null; // custom name for executable\n    this._executableDir = null; // custom search directory for subcommands\n    this._defaultCommandName = null;\n    this._exitCallback = null;\n    this._aliases = [];\n    this._combineFlagAndOptionalValue = true;\n    this._description = '';\n    this._summary = '';\n    this._argsDescription = undefined; // legacy\n    this._enablePositionalOptions = false;\n    this._passThroughOptions = false;\n    this._lifeCycleHooks = {}; // a hash of arrays\n    /** @type {(boolean | string)} */\n    this._showHelpAfterError = false;\n    this._showSuggestionAfterError = true;\n\n    // see .configureOutput() for docs\n    this._outputConfiguration = {\n      writeOut: (str) => process.stdout.write(str),\n      writeErr: (str) => process.stderr.write(str),\n      getOutHelpWidth: () =>\n        process.stdout.isTTY ? process.stdout.columns : undefined,\n      getErrHelpWidth: () =>\n        process.stderr.isTTY ? process.stderr.columns : undefined,\n      outputError: (str, write) => write(str),\n    };\n\n    this._hidden = false;\n    /** @type {(Option | null | undefined)} */\n    this._helpOption = undefined; // Lazy created on demand. May be null if help option is disabled.\n    this._addImplicitHelpCommand = undefined; // undecided whether true or false yet, not inherited\n    /** @type {Command} */\n    this._helpCommand = undefined; // lazy initialised, inherited\n    this._helpConfiguration = {};\n  }\n\n  /**\n   * Copy settings that are useful to have in common across root command and subcommands.\n   *\n   * (Used internally when adding a command using `.command()` so subcommands inherit parent settings.)\n   *\n   * @param {Command} sourceCommand\n   * @return {Command} `this` command for chaining\n   */\n  copyInheritedSettings(sourceCommand) {\n    this._outputConfiguration = sourceCommand._outputConfiguration;\n    this._helpOption = sourceCommand._helpOption;\n    this._helpCommand = sourceCommand._helpCommand;\n    this._helpConfiguration = sourceCommand._helpConfiguration;\n    this._exitCallback = sourceCommand._exitCallback;\n    this._storeOptionsAsProperties = sourceCommand._storeOptionsAsProperties;\n    this._combineFlagAndOptionalValue =\n      sourceCommand._combineFlagAndOptionalValue;\n    this._allowExcessArguments = sourceCommand._allowExcessArguments;\n    this._enablePositionalOptions = sourceCommand._enablePositionalOptions;\n    this._showHelpAfterError = sourceCommand._showHelpAfterError;\n    this._showSuggestionAfterError = sourceCommand._showSuggestionAfterError;\n\n    return this;\n  }\n\n  /**\n   * @returns {Command[]}\n   * @private\n   */\n\n  _getCommandAndAncestors() {\n    const result = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    for (let command = this; command; command = command.parent) {\n      result.push(command);\n    }\n    return result;\n  }\n\n  /**\n   * Define a command.\n   *\n   * There are two styles of command: pay attention to where to put the description.\n   *\n   * @example\n   * // Command implemented using action handler (description is supplied separately to `.command`)\n   * program\n   *   .command('clone <source> [destination]')\n   *   .description('clone a repository into a newly created directory')\n   *   .action((source, destination) => {\n   *     console.log('clone command called');\n   *   });\n   *\n   * // Command implemented using separate executable file (description is second parameter to `.command`)\n   * program\n   *   .command('start <service>', 'start named service')\n   *   .command('stop [service]', 'stop named service, or all if no name supplied');\n   *\n   * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n   * @param {(object | string)} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n   * @param {object} [execOpts] - configuration options (for executable)\n   * @return {Command} returns new command for action handler, or `this` for executable command\n   */\n\n  command(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n    let desc = actionOptsOrExecDesc;\n    let opts = execOpts;\n    if (typeof desc === 'object' && desc !== null) {\n      opts = desc;\n      desc = null;\n    }\n    opts = opts || {};\n    const [, name, args] = nameAndArgs.match(/([^ ]+) *(.*)/);\n\n    const cmd = this.createCommand(name);\n    if (desc) {\n      cmd.description(desc);\n      cmd._executableHandler = true;\n    }\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    cmd._hidden = !!(opts.noHelp || opts.hidden); // noHelp is deprecated old name for hidden\n    cmd._executableFile = opts.executableFile || null; // Custom name for executable file, set missing to null to match constructor\n    if (args) cmd.arguments(args);\n    this._registerCommand(cmd);\n    cmd.parent = this;\n    cmd.copyInheritedSettings(this);\n\n    if (desc) return this;\n    return cmd;\n  }\n\n  /**\n   * Factory routine to create a new unattached command.\n   *\n   * See .command() for creating an attached subcommand, which uses this routine to\n   * create the command. You can override createCommand to customise subcommands.\n   *\n   * @param {string} [name]\n   * @return {Command} new command\n   */\n\n  createCommand(name) {\n    return new Command(name);\n  }\n\n  /**\n   * You can customise the help with a subclass of Help by overriding createHelp,\n   * or by overriding Help properties using configureHelp().\n   *\n   * @return {Help}\n   */\n\n  createHelp() {\n    return Object.assign(new Help(), this.configureHelp());\n  }\n\n  /**\n   * You can customise the help by overriding Help properties using configureHelp(),\n   * or with a subclass of Help by overriding createHelp().\n   *\n   * @param {object} [configuration] - configuration options\n   * @return {(Command | object)} `this` command for chaining, or stored configuration\n   */\n\n  configureHelp(configuration) {\n    if (configuration === undefined) return this._helpConfiguration;\n\n    this._helpConfiguration = configuration;\n    return this;\n  }\n\n  /**\n   * The default output goes to stdout and stderr. You can customise this for special\n   * applications. You can also customise the display of errors by overriding outputError.\n   *\n   * The configuration properties are all functions:\n   *\n   *     // functions to change where being written, stdout and stderr\n   *     writeOut(str)\n   *     writeErr(str)\n   *     // matching functions to specify width for wrapping help\n   *     getOutHelpWidth()\n   *     getErrHelpWidth()\n   *     // functions based on what is being written out\n   *     outputError(str, write) // used for displaying errors, and not used for displaying help\n   *\n   * @param {object} [configuration] - configuration options\n   * @return {(Command | object)} `this` command for chaining, or stored configuration\n   */\n\n  configureOutput(configuration) {\n    if (configuration === undefined) return this._outputConfiguration;\n\n    Object.assign(this._outputConfiguration, configuration);\n    return this;\n  }\n\n  /**\n   * Display the help or a custom message after an error occurs.\n   *\n   * @param {(boolean|string)} [displayHelp]\n   * @return {Command} `this` command for chaining\n   */\n  showHelpAfterError(displayHelp = true) {\n    if (typeof displayHelp !== 'string') displayHelp = !!displayHelp;\n    this._showHelpAfterError = displayHelp;\n    return this;\n  }\n\n  /**\n   * Display suggestion of similar commands for unknown commands, or options for unknown options.\n   *\n   * @param {boolean} [displaySuggestion]\n   * @return {Command} `this` command for chaining\n   */\n  showSuggestionAfterError(displaySuggestion = true) {\n    this._showSuggestionAfterError = !!displaySuggestion;\n    return this;\n  }\n\n  /**\n   * Add a prepared subcommand.\n   *\n   * See .command() for creating an attached subcommand which inherits settings from its parent.\n   *\n   * @param {Command} cmd - new subcommand\n   * @param {object} [opts] - configuration options\n   * @return {Command} `this` command for chaining\n   */\n\n  addCommand(cmd, opts) {\n    if (!cmd._name) {\n      throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`);\n    }\n\n    opts = opts || {};\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    if (opts.noHelp || opts.hidden) cmd._hidden = true; // modifying passed command due to existing implementation\n\n    this._registerCommand(cmd);\n    cmd.parent = this;\n    cmd._checkForBrokenPassThrough();\n\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached argument.\n   *\n   * See .argument() for creating an attached argument, which uses this routine to\n   * create the argument. You can override createArgument to return a custom argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @return {Argument} new argument\n   */\n\n  createArgument(name, description) {\n    return new Argument(name, description);\n  }\n\n  /**\n   * Define argument syntax for command.\n   *\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @example\n   * program.argument('<input-file>');\n   * program.argument('[output-file]');\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @param {(Function|*)} [fn] - custom argument processing function\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n  argument(name, description, fn, defaultValue) {\n    const argument = this.createArgument(name, description);\n    if (typeof fn === 'function') {\n      argument.default(defaultValue).argParser(fn);\n    } else {\n      argument.default(fn);\n    }\n    this.addArgument(argument);\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding multiple at once (without descriptions).\n   *\n   * See also .argument().\n   *\n   * @example\n   * program.arguments('<cmd> [env]');\n   *\n   * @param {string} names\n   * @return {Command} `this` command for chaining\n   */\n\n  arguments(names) {\n    names\n      .trim()\n      .split(/ +/)\n      .forEach((detail) => {\n        this.argument(detail);\n      });\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding a prepared argument.\n   *\n   * @param {Argument} argument\n   * @return {Command} `this` command for chaining\n   */\n  addArgument(argument) {\n    const previousArgument = this.registeredArguments.slice(-1)[0];\n    if (previousArgument && previousArgument.variadic) {\n      throw new Error(\n        `only the last argument can be variadic '${previousArgument.name()}'`,\n      );\n    }\n    if (\n      argument.required &&\n      argument.defaultValue !== undefined &&\n      argument.parseArg === undefined\n    ) {\n      throw new Error(\n        `a default value for a required argument is never used: '${argument.name()}'`,\n      );\n    }\n    this.registeredArguments.push(argument);\n    return this;\n  }\n\n  /**\n   * Customise or override default help command. By default a help command is automatically added if your command has subcommands.\n   *\n   * @example\n   *    program.helpCommand('help [cmd]');\n   *    program.helpCommand('help [cmd]', 'show help');\n   *    program.helpCommand(false); // suppress default help command\n   *    program.helpCommand(true); // add help command even if no subcommands\n   *\n   * @param {string|boolean} enableOrNameAndArgs - enable with custom name and/or arguments, or boolean to override whether added\n   * @param {string} [description] - custom description\n   * @return {Command} `this` command for chaining\n   */\n\n  helpCommand(enableOrNameAndArgs, description) {\n    if (typeof enableOrNameAndArgs === 'boolean') {\n      this._addImplicitHelpCommand = enableOrNameAndArgs;\n      return this;\n    }\n\n    enableOrNameAndArgs = enableOrNameAndArgs ?? 'help [command]';\n    const [, helpName, helpArgs] = enableOrNameAndArgs.match(/([^ ]+) *(.*)/);\n    const helpDescription = description ?? 'display help for command';\n\n    const helpCommand = this.createCommand(helpName);\n    helpCommand.helpOption(false);\n    if (helpArgs) helpCommand.arguments(helpArgs);\n    if (helpDescription) helpCommand.description(helpDescription);\n\n    this._addImplicitHelpCommand = true;\n    this._helpCommand = helpCommand;\n\n    return this;\n  }\n\n  /**\n   * Add prepared custom help command.\n   *\n   * @param {(Command|string|boolean)} helpCommand - custom help command, or deprecated enableOrNameAndArgs as for `.helpCommand()`\n   * @param {string} [deprecatedDescription] - deprecated custom description used with custom name only\n   * @return {Command} `this` command for chaining\n   */\n  addHelpCommand(helpCommand, deprecatedDescription) {\n    // If not passed an object, call through to helpCommand for backwards compatibility,\n    // as addHelpCommand was originally used like helpCommand is now.\n    if (typeof helpCommand !== 'object') {\n      this.helpCommand(helpCommand, deprecatedDescription);\n      return this;\n    }\n\n    this._addImplicitHelpCommand = true;\n    this._helpCommand = helpCommand;\n    return this;\n  }\n\n  /**\n   * Lazy create help command.\n   *\n   * @return {(Command|null)}\n   * @package\n   */\n  _getHelpCommand() {\n    const hasImplicitHelpCommand =\n      this._addImplicitHelpCommand ??\n      (this.commands.length &&\n        !this._actionHandler &&\n        !this._findCommand('help'));\n\n    if (hasImplicitHelpCommand) {\n      if (this._helpCommand === undefined) {\n        this.helpCommand(undefined, undefined); // use default name and description\n      }\n      return this._helpCommand;\n    }\n    return null;\n  }\n\n  /**\n   * Add hook for life cycle event.\n   *\n   * @param {string} event\n   * @param {Function} listener\n   * @return {Command} `this` command for chaining\n   */\n\n  hook(event, listener) {\n    const allowedValues = ['preSubcommand', 'preAction', 'postAction'];\n    if (!allowedValues.includes(event)) {\n      throw new Error(`Unexpected value for event passed to hook : '${event}'.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    if (this._lifeCycleHooks[event]) {\n      this._lifeCycleHooks[event].push(listener);\n    } else {\n      this._lifeCycleHooks[event] = [listener];\n    }\n    return this;\n  }\n\n  /**\n   * Register callback to use as replacement for calling process.exit.\n   *\n   * @param {Function} [fn] optional callback which will be passed a CommanderError, defaults to throwing\n   * @return {Command} `this` command for chaining\n   */\n\n  exitOverride(fn) {\n    if (fn) {\n      this._exitCallback = fn;\n    } else {\n      this._exitCallback = (err) => {\n        if (err.code !== 'commander.executeSubCommandAsync') {\n          throw err;\n        } else {\n          // Async callback from spawn events, not useful to throw.\n        }\n      };\n    }\n    return this;\n  }\n\n  /**\n   * Call process.exit, and _exitCallback if defined.\n   *\n   * @param {number} exitCode exit code for using with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @return never\n   * @private\n   */\n\n  _exit(exitCode, code, message) {\n    if (this._exitCallback) {\n      this._exitCallback(new CommanderError(exitCode, code, message));\n      // Expecting this line is not reached.\n    }\n    process.exit(exitCode);\n  }\n\n  /**\n   * Register callback `fn` for the command.\n   *\n   * @example\n   * program\n   *   .command('serve')\n   *   .description('start service')\n   *   .action(function() {\n   *      // do work here\n   *   });\n   *\n   * @param {Function} fn\n   * @return {Command} `this` command for chaining\n   */\n\n  action(fn) {\n    const listener = (args) => {\n      // The .action callback takes an extra parameter which is the command or options.\n      const expectedArgsCount = this.registeredArguments.length;\n      const actionArgs = args.slice(0, expectedArgsCount);\n      if (this._storeOptionsAsProperties) {\n        actionArgs[expectedArgsCount] = this; // backwards compatible \"options\"\n      } else {\n        actionArgs[expectedArgsCount] = this.opts();\n      }\n      actionArgs.push(this);\n\n      return fn.apply(this, actionArgs);\n    };\n    this._actionHandler = listener;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached option.\n   *\n   * See .option() for creating an attached option, which uses this routine to\n   * create the option. You can override createOption to return a custom option.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @return {Option} new option\n   */\n\n  createOption(flags, description) {\n    return new Option(flags, description);\n  }\n\n  /**\n   * Wrap parseArgs to catch 'commander.invalidArgument'.\n   *\n   * @param {(Option | Argument)} target\n   * @param {string} value\n   * @param {*} previous\n   * @param {string} invalidArgumentMessage\n   * @private\n   */\n\n  _callParseArg(target, value, previous, invalidArgumentMessage) {\n    try {\n      return target.parseArg(value, previous);\n    } catch (err) {\n      if (err.code === 'commander.invalidArgument') {\n        const message = `${invalidArgumentMessage} ${err.message}`;\n        this.error(message, { exitCode: err.exitCode, code: err.code });\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Check for option flag conflicts.\n   * Register option if no conflicts found, or throw on conflict.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  _registerOption(option) {\n    const matchingOption =\n      (option.short && this._findOption(option.short)) ||\n      (option.long && this._findOption(option.long));\n    if (matchingOption) {\n      const matchingFlag =\n        option.long && this._findOption(option.long)\n          ? option.long\n          : option.short;\n      throw new Error(`Cannot add option '${option.flags}'${this._name && ` to command '${this._name}'`} due to conflicting flag '${matchingFlag}'\n-  already used by option '${matchingOption.flags}'`);\n    }\n\n    this.options.push(option);\n  }\n\n  /**\n   * Check for command name and alias conflicts with existing commands.\n   * Register command if no conflicts found, or throw on conflict.\n   *\n   * @param {Command} command\n   * @private\n   */\n\n  _registerCommand(command) {\n    const knownBy = (cmd) => {\n      return [cmd.name()].concat(cmd.aliases());\n    };\n\n    const alreadyUsed = knownBy(command).find((name) =>\n      this._findCommand(name),\n    );\n    if (alreadyUsed) {\n      const existingCmd = knownBy(this._findCommand(alreadyUsed)).join('|');\n      const newCmd = knownBy(command).join('|');\n      throw new Error(\n        `cannot add command '${newCmd}' as already have command '${existingCmd}'`,\n      );\n    }\n\n    this.commands.push(command);\n  }\n\n  /**\n   * Add an option.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addOption(option) {\n    this._registerOption(option);\n\n    const oname = option.name();\n    const name = option.attributeName();\n\n    // store default value\n    if (option.negate) {\n      // --no-foo is special and defaults foo to true, unless a --foo option is already defined\n      const positiveLongFlag = option.long.replace(/^--no-/, '--');\n      if (!this._findOption(positiveLongFlag)) {\n        this.setOptionValueWithSource(\n          name,\n          option.defaultValue === undefined ? true : option.defaultValue,\n          'default',\n        );\n      }\n    } else if (option.defaultValue !== undefined) {\n      this.setOptionValueWithSource(name, option.defaultValue, 'default');\n    }\n\n    // handler for cli and env supplied values\n    const handleOptionValue = (val, invalidValueMessage, valueSource) => {\n      // val is null for optional option used without an optional-argument.\n      // val is undefined for boolean and negated option.\n      if (val == null && option.presetArg !== undefined) {\n        val = option.presetArg;\n      }\n\n      // custom processing\n      const oldValue = this.getOptionValue(name);\n      if (val !== null && option.parseArg) {\n        val = this._callParseArg(option, val, oldValue, invalidValueMessage);\n      } else if (val !== null && option.variadic) {\n        val = option._concatValue(val, oldValue);\n      }\n\n      // Fill-in appropriate missing values. Long winded but easy to follow.\n      if (val == null) {\n        if (option.negate) {\n          val = false;\n        } else if (option.isBoolean() || option.optional) {\n          val = true;\n        } else {\n          val = ''; // not normal, parseArg might have failed or be a mock function for testing\n        }\n      }\n      this.setOptionValueWithSource(name, val, valueSource);\n    };\n\n    this.on('option:' + oname, (val) => {\n      const invalidValueMessage = `error: option '${option.flags}' argument '${val}' is invalid.`;\n      handleOptionValue(val, invalidValueMessage, 'cli');\n    });\n\n    if (option.envVar) {\n      this.on('optionEnv:' + oname, (val) => {\n        const invalidValueMessage = `error: option '${option.flags}' value '${val}' from env '${option.envVar}' is invalid.`;\n        handleOptionValue(val, invalidValueMessage, 'env');\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Internal implementation shared by .option() and .requiredOption()\n   *\n   * @return {Command} `this` command for chaining\n   * @private\n   */\n  _optionEx(config, flags, description, fn, defaultValue) {\n    if (typeof flags === 'object' && flags instanceof Option) {\n      throw new Error(\n        'To add an Option object use addOption() instead of option() or requiredOption()',\n      );\n    }\n    const option = this.createOption(flags, description);\n    option.makeOptionMandatory(!!config.mandatory);\n    if (typeof fn === 'function') {\n      option.default(defaultValue).argParser(fn);\n    } else if (fn instanceof RegExp) {\n      // deprecated\n      const regex = fn;\n      fn = (val, def) => {\n        const m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n      option.default(defaultValue).argParser(fn);\n    } else {\n      option.default(fn);\n    }\n\n    return this.addOption(option);\n  }\n\n  /**\n   * Define option with `flags`, `description`, and optional argument parsing function or `defaultValue` or both.\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space. A required\n   * option-argument is indicated by `<>` and an optional option-argument by `[]`.\n   *\n   * See the README for more details, and see also addOption() and requiredOption().\n   *\n   * @example\n   * program\n   *     .option('-p, --pepper', 'add pepper')\n   *     .option('-p, --pizza-type <TYPE>', 'type of pizza') // required option-argument\n   *     .option('-c, --cheese [CHEESE]', 'add extra cheese', 'mozzarella') // optional option-argument with default\n   *     .option('-t, --tip <VALUE>', 'add tip to purchase cost', parseFloat) // custom parse function\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {(Function|*)} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  option(flags, description, parseArg, defaultValue) {\n    return this._optionEx({}, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n   * Add a required option which must have a value after parsing. This usually means\n   * the option must be specified on the command line. (Otherwise the same as .option().)\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {(Function|*)} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  requiredOption(flags, description, parseArg, defaultValue) {\n    return this._optionEx(\n      { mandatory: true },\n      flags,\n      description,\n      parseArg,\n      defaultValue,\n    );\n  }\n\n  /**\n   * Alter parsing of short flags with optional values.\n   *\n   * @example\n   * // for `.option('-f,--flag [value]'):\n   * program.combineFlagAndOptionalValue(true);  // `-f80` is treated like `--flag=80`, this is the default behaviour\n   * program.combineFlagAndOptionalValue(false) // `-fb` is treated like `-f -b`\n   *\n   * @param {boolean} [combine] - if `true` or omitted, an optional value can be specified directly after the flag.\n   * @return {Command} `this` command for chaining\n   */\n  combineFlagAndOptionalValue(combine = true) {\n    this._combineFlagAndOptionalValue = !!combine;\n    return this;\n  }\n\n  /**\n   * Allow unknown options on the command line.\n   *\n   * @param {boolean} [allowUnknown] - if `true` or omitted, no error will be thrown for unknown options.\n   * @return {Command} `this` command for chaining\n   */\n  allowUnknownOption(allowUnknown = true) {\n    this._allowUnknownOption = !!allowUnknown;\n    return this;\n  }\n\n  /**\n   * Allow excess command-arguments on the command line. Pass false to make excess arguments an error.\n   *\n   * @param {boolean} [allowExcess] - if `true` or omitted, no error will be thrown for excess arguments.\n   * @return {Command} `this` command for chaining\n   */\n  allowExcessArguments(allowExcess = true) {\n    this._allowExcessArguments = !!allowExcess;\n    return this;\n  }\n\n  /**\n   * Enable positional options. Positional means global options are specified before subcommands which lets\n   * subcommands reuse the same option names, and also enables subcommands to turn on passThroughOptions.\n   * The default behaviour is non-positional and global options may appear anywhere on the command line.\n   *\n   * @param {boolean} [positional]\n   * @return {Command} `this` command for chaining\n   */\n  enablePositionalOptions(positional = true) {\n    this._enablePositionalOptions = !!positional;\n    return this;\n  }\n\n  /**\n   * Pass through options that come after command-arguments rather than treat them as command-options,\n   * so actual command-options come before command-arguments. Turning this on for a subcommand requires\n   * positional options to have been enabled on the program (parent commands).\n   * The default behaviour is non-positional and options may appear before or after command-arguments.\n   *\n   * @param {boolean} [passThrough] for unknown options.\n   * @return {Command} `this` command for chaining\n   */\n  passThroughOptions(passThrough = true) {\n    this._passThroughOptions = !!passThrough;\n    this._checkForBrokenPassThrough();\n    return this;\n  }\n\n  /**\n   * @private\n   */\n\n  _checkForBrokenPassThrough() {\n    if (\n      this.parent &&\n      this._passThroughOptions &&\n      !this.parent._enablePositionalOptions\n    ) {\n      throw new Error(\n        `passThroughOptions cannot be used for '${this._name}' without turning on enablePositionalOptions for parent command(s)`,\n      );\n    }\n  }\n\n  /**\n   * Whether to store option values as properties on command object,\n   * or store separately (specify false). In both cases the option values can be accessed using .opts().\n   *\n   * @param {boolean} [storeAsProperties=true]\n   * @return {Command} `this` command for chaining\n   */\n\n  storeOptionsAsProperties(storeAsProperties = true) {\n    if (this.options.length) {\n      throw new Error('call .storeOptionsAsProperties() before adding options');\n    }\n    if (Object.keys(this._optionValues).length) {\n      throw new Error(\n        'call .storeOptionsAsProperties() before setting option values',\n      );\n    }\n    this._storeOptionsAsProperties = !!storeAsProperties;\n    return this;\n  }\n\n  /**\n   * Retrieve option value.\n   *\n   * @param {string} key\n   * @return {object} value\n   */\n\n  getOptionValue(key) {\n    if (this._storeOptionsAsProperties) {\n      return this[key];\n    }\n    return this._optionValues[key];\n  }\n\n  /**\n   * Store option value.\n   *\n   * @param {string} key\n   * @param {object} value\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValue(key, value) {\n    return this.setOptionValueWithSource(key, value, undefined);\n  }\n\n  /**\n   * Store option value and where the value came from.\n   *\n   * @param {string} key\n   * @param {object} value\n   * @param {string} source - expected values are default/config/env/cli/implied\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValueWithSource(key, value, source) {\n    if (this._storeOptionsAsProperties) {\n      this[key] = value;\n    } else {\n      this._optionValues[key] = value;\n    }\n    this._optionValueSources[key] = source;\n    return this;\n  }\n\n  /**\n   * Get source of option value.\n   * Expected values are default | config | env | cli | implied\n   *\n   * @param {string} key\n   * @return {string}\n   */\n\n  getOptionValueSource(key) {\n    return this._optionValueSources[key];\n  }\n\n  /**\n   * Get source of option value. See also .optsWithGlobals().\n   * Expected values are default | config | env | cli | implied\n   *\n   * @param {string} key\n   * @return {string}\n   */\n\n  getOptionValueSourceWithGlobals(key) {\n    // global overwrites local, like optsWithGlobals\n    let source;\n    this._getCommandAndAncestors().forEach((cmd) => {\n      if (cmd.getOptionValueSource(key) !== undefined) {\n        source = cmd.getOptionValueSource(key);\n      }\n    });\n    return source;\n  }\n\n  /**\n   * Get user arguments from implied or explicit arguments.\n   * Side-effects: set _scriptPath if args included script. Used for default program name, and subcommand searches.\n   *\n   * @private\n   */\n\n  _prepareUserArgs(argv, parseOptions) {\n    if (argv !== undefined && !Array.isArray(argv)) {\n      throw new Error('first parameter to parse must be array or undefined');\n    }\n    parseOptions = parseOptions || {};\n\n    // auto-detect argument conventions if nothing supplied\n    if (argv === undefined && parseOptions.from === undefined) {\n      if (process.versions?.electron) {\n        parseOptions.from = 'electron';\n      }\n      // check node specific options for scenarios where user CLI args follow executable without scriptname\n      const execArgv = process.execArgv ?? [];\n      if (\n        execArgv.includes('-e') ||\n        execArgv.includes('--eval') ||\n        execArgv.includes('-p') ||\n        execArgv.includes('--print')\n      ) {\n        parseOptions.from = 'eval'; // internal usage, not documented\n      }\n    }\n\n    // default to using process.argv\n    if (argv === undefined) {\n      argv = process.argv;\n    }\n    this.rawArgs = argv.slice();\n\n    // extract the user args and scriptPath\n    let userArgs;\n    switch (parseOptions.from) {\n      case undefined:\n      case 'node':\n        this._scriptPath = argv[1];\n        userArgs = argv.slice(2);\n        break;\n      case 'electron':\n        // @ts-ignore: because defaultApp is an unknown property\n        if (process.defaultApp) {\n          this._scriptPath = argv[1];\n          userArgs = argv.slice(2);\n        } else {\n          userArgs = argv.slice(1);\n        }\n        break;\n      case 'user':\n        userArgs = argv.slice(0);\n        break;\n      case 'eval':\n        userArgs = argv.slice(1);\n        break;\n      default:\n        throw new Error(\n          `unexpected parse option { from: '${parseOptions.from}' }`,\n        );\n    }\n\n    // Find default name for program from arguments.\n    if (!this._name && this._scriptPath)\n      this.nameFromFilename(this._scriptPath);\n    this._name = this._name || 'program';\n\n    return userArgs;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Use parseAsync instead of parse if any of your action handlers are async.\n   *\n   * Call with no parameters to parse `process.argv`. Detects Electron and special node options like `node --eval`. Easy mode!\n   *\n   * Or call with an array of strings to parse, and optionally where the user arguments start by specifying where the arguments are `from`:\n   * - `'node'`: default, `argv[0]` is the application and `argv[1]` is the script being run, with user arguments after that\n   * - `'electron'`: `argv[0]` is the application and `argv[1]` varies depending on whether the electron application is packaged\n   * - `'user'`: just user arguments\n   *\n   * @example\n   * program.parse(); // parse process.argv and auto-detect electron and special node flags\n   * program.parse(process.argv); // assume argv[0] is app and argv[1] is script\n   * program.parse(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv] - optional, defaults to process.argv\n   * @param {object} [parseOptions] - optionally specify style of options with from: node/user/electron\n   * @param {string} [parseOptions.from] - where the args are from: 'node', 'user', 'electron'\n   * @return {Command} `this` command for chaining\n   */\n\n  parse(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Call with no parameters to parse `process.argv`. Detects Electron and special node options like `node --eval`. Easy mode!\n   *\n   * Or call with an array of strings to parse, and optionally where the user arguments start by specifying where the arguments are `from`:\n   * - `'node'`: default, `argv[0]` is the application and `argv[1]` is the script being run, with user arguments after that\n   * - `'electron'`: `argv[0]` is the application and `argv[1]` varies depending on whether the electron application is packaged\n   * - `'user'`: just user arguments\n   *\n   * @example\n   * await program.parseAsync(); // parse process.argv and auto-detect electron and special node flags\n   * await program.parseAsync(process.argv); // assume argv[0] is app and argv[1] is script\n   * await program.parseAsync(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv]\n   * @param {object} [parseOptions]\n   * @param {string} parseOptions.from - where the args are from: 'node', 'user', 'electron'\n   * @return {Promise}\n   */\n\n  async parseAsync(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    await this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Execute a sub-command executable.\n   *\n   * @private\n   */\n\n  _executeSubCommand(subcommand, args) {\n    args = args.slice();\n    let launchWithNode = false; // Use node for source targets so do not need to get permissions correct, and on Windows.\n    const sourceExt = ['.js', '.ts', '.tsx', '.mjs', '.cjs'];\n\n    function findFile(baseDir, baseName) {\n      // Look for specified file\n      const localBin = path.resolve(baseDir, baseName);\n      if (fs.existsSync(localBin)) return localBin;\n\n      // Stop looking if candidate already has an expected extension.\n      if (sourceExt.includes(path.extname(baseName))) return undefined;\n\n      // Try all the extensions.\n      const foundExt = sourceExt.find((ext) =>\n        fs.existsSync(`${localBin}${ext}`),\n      );\n      if (foundExt) return `${localBin}${foundExt}`;\n\n      return undefined;\n    }\n\n    // Not checking for help first. Unlikely to have mandatory and executable, and can't robustly test for help flags in external command.\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // executableFile and executableDir might be full path, or just a name\n    let executableFile =\n      subcommand._executableFile || `${this._name}-${subcommand._name}`;\n    let executableDir = this._executableDir || '';\n    if (this._scriptPath) {\n      let resolvedScriptPath; // resolve possible symlink for installed npm binary\n      try {\n        resolvedScriptPath = fs.realpathSync(this._scriptPath);\n      } catch (err) {\n        resolvedScriptPath = this._scriptPath;\n      }\n      executableDir = path.resolve(\n        path.dirname(resolvedScriptPath),\n        executableDir,\n      );\n    }\n\n    // Look for a local file in preference to a command in PATH.\n    if (executableDir) {\n      let localFile = findFile(executableDir, executableFile);\n\n      // Legacy search using prefix of script name instead of command name\n      if (!localFile && !subcommand._executableFile && this._scriptPath) {\n        const legacyName = path.basename(\n          this._scriptPath,\n          path.extname(this._scriptPath),\n        );\n        if (legacyName !== this._name) {\n          localFile = findFile(\n            executableDir,\n            `${legacyName}-${subcommand._name}`,\n          );\n        }\n      }\n      executableFile = localFile || executableFile;\n    }\n\n    launchWithNode = sourceExt.includes(path.extname(executableFile));\n\n    let proc;\n    if (process.platform !== 'win32') {\n      if (launchWithNode) {\n        args.unshift(executableFile);\n        // add executable arguments to spawn\n        args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n        proc = childProcess.spawn(process.argv[0], args, { stdio: 'inherit' });\n      } else {\n        proc = childProcess.spawn(executableFile, args, { stdio: 'inherit' });\n      }\n    } else {\n      args.unshift(executableFile);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n      proc = childProcess.spawn(process.execPath, args, { stdio: 'inherit' });\n    }\n\n    if (!proc.killed) {\n      // testing mainly to avoid leak warnings during unit tests with mocked spawn\n      const signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n      signals.forEach((signal) => {\n        process.on(signal, () => {\n          if (proc.killed === false && proc.exitCode === null) {\n            // @ts-ignore because signals not typed to known strings\n            proc.kill(signal);\n          }\n        });\n      });\n    }\n\n    // By default terminate process when spawned process terminates.\n    const exitCallback = this._exitCallback;\n    proc.on('close', (code) => {\n      code = code ?? 1; // code is null if spawned process terminated due to a signal\n      if (!exitCallback) {\n        process.exit(code);\n      } else {\n        exitCallback(\n          new CommanderError(\n            code,\n            'commander.executeSubCommandAsync',\n            '(close)',\n          ),\n        );\n      }\n    });\n    proc.on('error', (err) => {\n      // @ts-ignore: because err.code is an unknown property\n      if (err.code === 'ENOENT') {\n        const executableDirMessage = executableDir\n          ? `searched for local subcommand relative to directory '${executableDir}'`\n          : 'no directory for search for local subcommand, use .executableDir() to supply a custom directory';\n        const executableMissing = `'${executableFile}' does not exist\n - if '${subcommand._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${executableDirMessage}`;\n        throw new Error(executableMissing);\n        // @ts-ignore: because err.code is an unknown property\n      } else if (err.code === 'EACCES') {\n        throw new Error(`'${executableFile}' not executable`);\n      }\n      if (!exitCallback) {\n        process.exit(1);\n      } else {\n        const wrappedError = new CommanderError(\n          1,\n          'commander.executeSubCommandAsync',\n          '(error)',\n        );\n        wrappedError.nestedError = err;\n        exitCallback(wrappedError);\n      }\n    });\n\n    // Store the reference to the child process\n    this.runningCommand = proc;\n  }\n\n  /**\n   * @private\n   */\n\n  _dispatchSubcommand(commandName, operands, unknown) {\n    const subCommand = this._findCommand(commandName);\n    if (!subCommand) this.help({ error: true });\n\n    let promiseChain;\n    promiseChain = this._chainOrCallSubCommandHook(\n      promiseChain,\n      subCommand,\n      'preSubcommand',\n    );\n    promiseChain = this._chainOrCall(promiseChain, () => {\n      if (subCommand._executableHandler) {\n        this._executeSubCommand(subCommand, operands.concat(unknown));\n      } else {\n        return subCommand._parseCommand(operands, unknown);\n      }\n    });\n    return promiseChain;\n  }\n\n  /**\n   * Invoke help directly if possible, or dispatch if necessary.\n   * e.g. help foo\n   *\n   * @private\n   */\n\n  _dispatchHelpCommand(subcommandName) {\n    if (!subcommandName) {\n      this.help();\n    }\n    const subCommand = this._findCommand(subcommandName);\n    if (subCommand && !subCommand._executableHandler) {\n      subCommand.help();\n    }\n\n    // Fallback to parsing the help flag to invoke the help.\n    return this._dispatchSubcommand(\n      subcommandName,\n      [],\n      [this._getHelpOption()?.long ?? this._getHelpOption()?.short ?? '--help'],\n    );\n  }\n\n  /**\n   * Check this.args against expected this.registeredArguments.\n   *\n   * @private\n   */\n\n  _checkNumberOfArguments() {\n    // too few\n    this.registeredArguments.forEach((arg, i) => {\n      if (arg.required && this.args[i] == null) {\n        this.missingArgument(arg.name());\n      }\n    });\n    // too many\n    if (\n      this.registeredArguments.length > 0 &&\n      this.registeredArguments[this.registeredArguments.length - 1].variadic\n    ) {\n      return;\n    }\n    if (this.args.length > this.registeredArguments.length) {\n      this._excessArguments(this.args);\n    }\n  }\n\n  /**\n   * Process this.args using this.registeredArguments and save as this.processedArgs!\n   *\n   * @private\n   */\n\n  _processArguments() {\n    const myParseArg = (argument, value, previous) => {\n      // Extra processing for nice error message on parsing failure.\n      let parsedValue = value;\n      if (value !== null && argument.parseArg) {\n        const invalidValueMessage = `error: command-argument value '${value}' is invalid for argument '${argument.name()}'.`;\n        parsedValue = this._callParseArg(\n          argument,\n          value,\n          previous,\n          invalidValueMessage,\n        );\n      }\n      return parsedValue;\n    };\n\n    this._checkNumberOfArguments();\n\n    const processedArgs = [];\n    this.registeredArguments.forEach((declaredArg, index) => {\n      let value = declaredArg.defaultValue;\n      if (declaredArg.variadic) {\n        // Collect together remaining arguments for passing together as an array.\n        if (index < this.args.length) {\n          value = this.args.slice(index);\n          if (declaredArg.parseArg) {\n            value = value.reduce((processed, v) => {\n              return myParseArg(declaredArg, v, processed);\n            }, declaredArg.defaultValue);\n          }\n        } else if (value === undefined) {\n          value = [];\n        }\n      } else if (index < this.args.length) {\n        value = this.args[index];\n        if (declaredArg.parseArg) {\n          value = myParseArg(declaredArg, value, declaredArg.defaultValue);\n        }\n      }\n      processedArgs[index] = value;\n    });\n    this.processedArgs = processedArgs;\n  }\n\n  /**\n   * Once we have a promise we chain, but call synchronously until then.\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {Function} fn\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCall(promise, fn) {\n    // thenable\n    if (promise && promise.then && typeof promise.then === 'function') {\n      // already have a promise, chain callback\n      return promise.then(() => fn());\n    }\n    // callback might return a promise\n    return fn();\n  }\n\n  /**\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {string} event\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCallHooks(promise, event) {\n    let result = promise;\n    const hooks = [];\n    this._getCommandAndAncestors()\n      .reverse()\n      .filter((cmd) => cmd._lifeCycleHooks[event] !== undefined)\n      .forEach((hookedCommand) => {\n        hookedCommand._lifeCycleHooks[event].forEach((callback) => {\n          hooks.push({ hookedCommand, callback });\n        });\n      });\n    if (event === 'postAction') {\n      hooks.reverse();\n    }\n\n    hooks.forEach((hookDetail) => {\n      result = this._chainOrCall(result, () => {\n        return hookDetail.callback(hookDetail.hookedCommand, this);\n      });\n    });\n    return result;\n  }\n\n  /**\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {Command} subCommand\n   * @param {string} event\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCallSubCommandHook(promise, subCommand, event) {\n    let result = promise;\n    if (this._lifeCycleHooks[event] !== undefined) {\n      this._lifeCycleHooks[event].forEach((hook) => {\n        result = this._chainOrCall(result, () => {\n          return hook(this, subCommand);\n        });\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Process arguments in context of this command.\n   * Returns action result, in case it is a promise.\n   *\n   * @private\n   */\n\n  _parseCommand(operands, unknown) {\n    const parsed = this.parseOptions(unknown);\n    this._parseOptionsEnv(); // after cli, so parseArg not called on both cli and env\n    this._parseOptionsImplied();\n    operands = operands.concat(parsed.operands);\n    unknown = parsed.unknown;\n    this.args = operands.concat(unknown);\n\n    if (operands && this._findCommand(operands[0])) {\n      return this._dispatchSubcommand(operands[0], operands.slice(1), unknown);\n    }\n    if (\n      this._getHelpCommand() &&\n      operands[0] === this._getHelpCommand().name()\n    ) {\n      return this._dispatchHelpCommand(operands[1]);\n    }\n    if (this._defaultCommandName) {\n      this._outputHelpIfRequested(unknown); // Run the help for default command from parent rather than passing to default command\n      return this._dispatchSubcommand(\n        this._defaultCommandName,\n        operands,\n        unknown,\n      );\n    }\n    if (\n      this.commands.length &&\n      this.args.length === 0 &&\n      !this._actionHandler &&\n      !this._defaultCommandName\n    ) {\n      // probably missing subcommand and no handler, user needs help (and exit)\n      this.help({ error: true });\n    }\n\n    this._outputHelpIfRequested(parsed.unknown);\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // We do not always call this check to avoid masking a \"better\" error, like unknown command.\n    const checkForUnknownOptions = () => {\n      if (parsed.unknown.length > 0) {\n        this.unknownOption(parsed.unknown[0]);\n      }\n    };\n\n    const commandEvent = `command:${this.name()}`;\n    if (this._actionHandler) {\n      checkForUnknownOptions();\n      this._processArguments();\n\n      let promiseChain;\n      promiseChain = this._chainOrCallHooks(promiseChain, 'preAction');\n      promiseChain = this._chainOrCall(promiseChain, () =>\n        this._actionHandler(this.processedArgs),\n      );\n      if (this.parent) {\n        promiseChain = this._chainOrCall(promiseChain, () => {\n          this.parent.emit(commandEvent, operands, unknown); // legacy\n        });\n      }\n      promiseChain = this._chainOrCallHooks(promiseChain, 'postAction');\n      return promiseChain;\n    }\n    if (this.parent && this.parent.listenerCount(commandEvent)) {\n      checkForUnknownOptions();\n      this._processArguments();\n      this.parent.emit(commandEvent, operands, unknown); // legacy\n    } else if (operands.length) {\n      if (this._findCommand('*')) {\n        // legacy default command\n        return this._dispatchSubcommand('*', operands, unknown);\n      }\n      if (this.listenerCount('command:*')) {\n        // skip option check, emit event for possible misspelling suggestion\n        this.emit('command:*', operands, unknown);\n      } else if (this.commands.length) {\n        this.unknownCommand();\n      } else {\n        checkForUnknownOptions();\n        this._processArguments();\n      }\n    } else if (this.commands.length) {\n      checkForUnknownOptions();\n      // This command has subcommands and nothing hooked up at this level, so display help (and exit).\n      this.help({ error: true });\n    } else {\n      checkForUnknownOptions();\n      this._processArguments();\n      // fall through for caller to handle after calling .parse()\n    }\n  }\n\n  /**\n   * Find matching command.\n   *\n   * @private\n   * @return {Command | undefined}\n   */\n  _findCommand(name) {\n    if (!name) return undefined;\n    return this.commands.find(\n      (cmd) => cmd._name === name || cmd._aliases.includes(name),\n    );\n  }\n\n  /**\n   * Return an option matching `arg` if any.\n   *\n   * @param {string} arg\n   * @return {Option}\n   * @package\n   */\n\n  _findOption(arg) {\n    return this.options.find((option) => option.is(arg));\n  }\n\n  /**\n   * Display an error message if a mandatory option does not have a value.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @private\n   */\n\n  _checkForMissingMandatoryOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd.options.forEach((anOption) => {\n        if (\n          anOption.mandatory &&\n          cmd.getOptionValue(anOption.attributeName()) === undefined\n        ) {\n          cmd.missingMandatoryOptionValue(anOption);\n        }\n      });\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together in this.\n   *\n   * @private\n   */\n  _checkForConflictingLocalOptions() {\n    const definedNonDefaultOptions = this.options.filter((option) => {\n      const optionKey = option.attributeName();\n      if (this.getOptionValue(optionKey) === undefined) {\n        return false;\n      }\n      return this.getOptionValueSource(optionKey) !== 'default';\n    });\n\n    const optionsWithConflicting = definedNonDefaultOptions.filter(\n      (option) => option.conflictsWith.length > 0,\n    );\n\n    optionsWithConflicting.forEach((option) => {\n      const conflictingAndDefined = definedNonDefaultOptions.find((defined) =>\n        option.conflictsWith.includes(defined.attributeName()),\n      );\n      if (conflictingAndDefined) {\n        this._conflictingOption(option, conflictingAndDefined);\n      }\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @private\n   */\n  _checkForConflictingOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd._checkForConflictingLocalOptions();\n    });\n  }\n\n  /**\n   * Parse options from `argv` removing known options,\n   * and return argv split into operands and unknown arguments.\n   *\n   * Examples:\n   *\n   *     argv => operands, unknown\n   *     --known kkk op => [op], []\n   *     op --known kkk => [op], []\n   *     sub --unknown uuu op => [sub], [--unknown uuu op]\n   *     sub -- --unknown uuu op => [sub --unknown uuu op], []\n   *\n   * @param {string[]} argv\n   * @return {{operands: string[], unknown: string[]}}\n   */\n\n  parseOptions(argv) {\n    const operands = []; // operands, not options or values\n    const unknown = []; // first unknown option and remaining unknown args\n    let dest = operands;\n    const args = argv.slice();\n\n    function maybeOption(arg) {\n      return arg.length > 1 && arg[0] === '-';\n    }\n\n    // parse options\n    let activeVariadicOption = null;\n    while (args.length) {\n      const arg = args.shift();\n\n      // literal\n      if (arg === '--') {\n        if (dest === unknown) dest.push(arg);\n        dest.push(...args);\n        break;\n      }\n\n      if (activeVariadicOption && !maybeOption(arg)) {\n        this.emit(`option:${activeVariadicOption.name()}`, arg);\n        continue;\n      }\n      activeVariadicOption = null;\n\n      if (maybeOption(arg)) {\n        const option = this._findOption(arg);\n        // recognised option, call listener to assign value with possible custom processing\n        if (option) {\n          if (option.required) {\n            const value = args.shift();\n            if (value === undefined) this.optionMissingArgument(option);\n            this.emit(`option:${option.name()}`, value);\n          } else if (option.optional) {\n            let value = null;\n            // historical behaviour is optional value is following arg unless an option\n            if (args.length > 0 && !maybeOption(args[0])) {\n              value = args.shift();\n            }\n            this.emit(`option:${option.name()}`, value);\n          } else {\n            // boolean flag\n            this.emit(`option:${option.name()}`);\n          }\n          activeVariadicOption = option.variadic ? option : null;\n          continue;\n        }\n      }\n\n      // Look for combo options following single dash, eat first one if known.\n      if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n        const option = this._findOption(`-${arg[1]}`);\n        if (option) {\n          if (\n            option.required ||\n            (option.optional && this._combineFlagAndOptionalValue)\n          ) {\n            // option with value following in same argument\n            this.emit(`option:${option.name()}`, arg.slice(2));\n          } else {\n            // boolean option, emit and put back remainder of arg for further processing\n            this.emit(`option:${option.name()}`);\n            args.unshift(`-${arg.slice(2)}`);\n          }\n          continue;\n        }\n      }\n\n      // Look for known long flag with value, like --foo=bar\n      if (/^--[^=]+=/.test(arg)) {\n        const index = arg.indexOf('=');\n        const option = this._findOption(arg.slice(0, index));\n        if (option && (option.required || option.optional)) {\n          this.emit(`option:${option.name()}`, arg.slice(index + 1));\n          continue;\n        }\n      }\n\n      // Not a recognised option by this command.\n      // Might be a command-argument, or subcommand option, or unknown option, or help command or option.\n\n      // An unknown option means further arguments also classified as unknown so can be reprocessed by subcommands.\n      if (maybeOption(arg)) {\n        dest = unknown;\n      }\n\n      // If using positionalOptions, stop processing our options at subcommand.\n      if (\n        (this._enablePositionalOptions || this._passThroughOptions) &&\n        operands.length === 0 &&\n        unknown.length === 0\n      ) {\n        if (this._findCommand(arg)) {\n          operands.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        } else if (\n          this._getHelpCommand() &&\n          arg === this._getHelpCommand().name()\n        ) {\n          operands.push(arg);\n          if (args.length > 0) operands.push(...args);\n          break;\n        } else if (this._defaultCommandName) {\n          unknown.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        }\n      }\n\n      // If using passThroughOptions, stop processing options at first command-argument.\n      if (this._passThroughOptions) {\n        dest.push(arg);\n        if (args.length > 0) dest.push(...args);\n        break;\n      }\n\n      // add arg\n      dest.push(arg);\n    }\n\n    return { operands, unknown };\n  }\n\n  /**\n   * Return an object containing local option values as key-value pairs.\n   *\n   * @return {object}\n   */\n  opts() {\n    if (this._storeOptionsAsProperties) {\n      // Preserve original behaviour so backwards compatible when still using properties\n      const result = {};\n      const len = this.options.length;\n\n      for (let i = 0; i < len; i++) {\n        const key = this.options[i].attributeName();\n        result[key] =\n          key === this._versionOptionName ? this._version : this[key];\n      }\n      return result;\n    }\n\n    return this._optionValues;\n  }\n\n  /**\n   * Return an object containing merged local and global option values as key-value pairs.\n   *\n   * @return {object}\n   */\n  optsWithGlobals() {\n    // globals overwrite locals\n    return this._getCommandAndAncestors().reduce(\n      (combinedOptions, cmd) => Object.assign(combinedOptions, cmd.opts()),\n      {},\n    );\n  }\n\n  /**\n   * Display error message and exit (or call exitOverride).\n   *\n   * @param {string} message\n   * @param {object} [errorOptions]\n   * @param {string} [errorOptions.code] - an id string representing the error\n   * @param {number} [errorOptions.exitCode] - used with process.exit\n   */\n  error(message, errorOptions) {\n    // output handling\n    this._outputConfiguration.outputError(\n      `${message}\\n`,\n      this._outputConfiguration.writeErr,\n    );\n    if (typeof this._showHelpAfterError === 'string') {\n      this._outputConfiguration.writeErr(`${this._showHelpAfterError}\\n`);\n    } else if (this._showHelpAfterError) {\n      this._outputConfiguration.writeErr('\\n');\n      this.outputHelp({ error: true });\n    }\n\n    // exit handling\n    const config = errorOptions || {};\n    const exitCode = config.exitCode || 1;\n    const code = config.code || 'commander.error';\n    this._exit(exitCode, code, message);\n  }\n\n  /**\n   * Apply any option related environment variables, if option does\n   * not have a value from cli or client code.\n   *\n   * @private\n   */\n  _parseOptionsEnv() {\n    this.options.forEach((option) => {\n      if (option.envVar && option.envVar in process.env) {\n        const optionKey = option.attributeName();\n        // Priority check. Do not overwrite cli or options from unknown source (client-code).\n        if (\n          this.getOptionValue(optionKey) === undefined ||\n          ['default', 'config', 'env'].includes(\n            this.getOptionValueSource(optionKey),\n          )\n        ) {\n          if (option.required || option.optional) {\n            // option can take a value\n            // keep very simple, optional always takes value\n            this.emit(`optionEnv:${option.name()}`, process.env[option.envVar]);\n          } else {\n            // boolean\n            // keep very simple, only care that envVar defined and not the value\n            this.emit(`optionEnv:${option.name()}`);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Apply any implied option values, if option is undefined or default value.\n   *\n   * @private\n   */\n  _parseOptionsImplied() {\n    const dualHelper = new DualOptions(this.options);\n    const hasCustomOptionValue = (optionKey) => {\n      return (\n        this.getOptionValue(optionKey) !== undefined &&\n        !['default', 'implied'].includes(this.getOptionValueSource(optionKey))\n      );\n    };\n    this.options\n      .filter(\n        (option) =>\n          option.implied !== undefined &&\n          hasCustomOptionValue(option.attributeName()) &&\n          dualHelper.valueFromOption(\n            this.getOptionValue(option.attributeName()),\n            option,\n          ),\n      )\n      .forEach((option) => {\n        Object.keys(option.implied)\n          .filter((impliedKey) => !hasCustomOptionValue(impliedKey))\n          .forEach((impliedKey) => {\n            this.setOptionValueWithSource(\n              impliedKey,\n              option.implied[impliedKey],\n              'implied',\n            );\n          });\n      });\n  }\n\n  /**\n   * Argument `name` is missing.\n   *\n   * @param {string} name\n   * @private\n   */\n\n  missingArgument(name) {\n    const message = `error: missing required argument '${name}'`;\n    this.error(message, { code: 'commander.missingArgument' });\n  }\n\n  /**\n   * `Option` is missing an argument.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  optionMissingArgument(option) {\n    const message = `error: option '${option.flags}' argument missing`;\n    this.error(message, { code: 'commander.optionMissingArgument' });\n  }\n\n  /**\n   * `Option` does not have a value, and is a mandatory option.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  missingMandatoryOptionValue(option) {\n    const message = `error: required option '${option.flags}' not specified`;\n    this.error(message, { code: 'commander.missingMandatoryOptionValue' });\n  }\n\n  /**\n   * `Option` conflicts with another option.\n   *\n   * @param {Option} option\n   * @param {Option} conflictingOption\n   * @private\n   */\n  _conflictingOption(option, conflictingOption) {\n    // The calling code does not know whether a negated option is the source of the\n    // value, so do some work to take an educated guess.\n    const findBestOptionFromValue = (option) => {\n      const optionKey = option.attributeName();\n      const optionValue = this.getOptionValue(optionKey);\n      const negativeOption = this.options.find(\n        (target) => target.negate && optionKey === target.attributeName(),\n      );\n      const positiveOption = this.options.find(\n        (target) => !target.negate && optionKey === target.attributeName(),\n      );\n      if (\n        negativeOption &&\n        ((negativeOption.presetArg === undefined && optionValue === false) ||\n          (negativeOption.presetArg !== undefined &&\n            optionValue === negativeOption.presetArg))\n      ) {\n        return negativeOption;\n      }\n      return positiveOption || option;\n    };\n\n    const getErrorMessage = (option) => {\n      const bestOption = findBestOptionFromValue(option);\n      const optionKey = bestOption.attributeName();\n      const source = this.getOptionValueSource(optionKey);\n      if (source === 'env') {\n        return `environment variable '${bestOption.envVar}'`;\n      }\n      return `option '${bestOption.flags}'`;\n    };\n\n    const message = `error: ${getErrorMessage(option)} cannot be used with ${getErrorMessage(conflictingOption)}`;\n    this.error(message, { code: 'commander.conflictingOption' });\n  }\n\n  /**\n   * Unknown option `flag`.\n   *\n   * @param {string} flag\n   * @private\n   */\n\n  unknownOption(flag) {\n    if (this._allowUnknownOption) return;\n    let suggestion = '';\n\n    if (flag.startsWith('--') && this._showSuggestionAfterError) {\n      // Looping to pick up the global options too\n      let candidateFlags = [];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let command = this;\n      do {\n        const moreFlags = command\n          .createHelp()\n          .visibleOptions(command)\n          .filter((option) => option.long)\n          .map((option) => option.long);\n        candidateFlags = candidateFlags.concat(moreFlags);\n        command = command.parent;\n      } while (command && !command._enablePositionalOptions);\n      suggestion = suggestSimilar(flag, candidateFlags);\n    }\n\n    const message = `error: unknown option '${flag}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownOption' });\n  }\n\n  /**\n   * Excess arguments, more than expected.\n   *\n   * @param {string[]} receivedArgs\n   * @private\n   */\n\n  _excessArguments(receivedArgs) {\n    if (this._allowExcessArguments) return;\n\n    const expected = this.registeredArguments.length;\n    const s = expected === 1 ? '' : 's';\n    const forSubcommand = this.parent ? ` for '${this.name()}'` : '';\n    const message = `error: too many arguments${forSubcommand}. Expected ${expected} argument${s} but got ${receivedArgs.length}.`;\n    this.error(message, { code: 'commander.excessArguments' });\n  }\n\n  /**\n   * Unknown command.\n   *\n   * @private\n   */\n\n  unknownCommand() {\n    const unknownName = this.args[0];\n    let suggestion = '';\n\n    if (this._showSuggestionAfterError) {\n      const candidateNames = [];\n      this.createHelp()\n        .visibleCommands(this)\n        .forEach((command) => {\n          candidateNames.push(command.name());\n          // just visible alias\n          if (command.alias()) candidateNames.push(command.alias());\n        });\n      suggestion = suggestSimilar(unknownName, candidateNames);\n    }\n\n    const message = `error: unknown command '${unknownName}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownCommand' });\n  }\n\n  /**\n   * Get or set the program version.\n   *\n   * This method auto-registers the \"-V, --version\" option which will print the version number.\n   *\n   * You can optionally supply the flags and description to override the defaults.\n   *\n   * @param {string} [str]\n   * @param {string} [flags]\n   * @param {string} [description]\n   * @return {(this | string | undefined)} `this` command for chaining, or version string if no arguments\n   */\n\n  version(str, flags, description) {\n    if (str === undefined) return this._version;\n    this._version = str;\n    flags = flags || '-V, --version';\n    description = description || 'output the version number';\n    const versionOption = this.createOption(flags, description);\n    this._versionOptionName = versionOption.attributeName();\n    this._registerOption(versionOption);\n\n    this.on('option:' + versionOption.name(), () => {\n      this._outputConfiguration.writeOut(`${str}\\n`);\n      this._exit(0, 'commander.version', str);\n    });\n    return this;\n  }\n\n  /**\n   * Set the description.\n   *\n   * @param {string} [str]\n   * @param {object} [argsDescription]\n   * @return {(string|Command)}\n   */\n  description(str, argsDescription) {\n    if (str === undefined && argsDescription === undefined)\n      return this._description;\n    this._description = str;\n    if (argsDescription) {\n      this._argsDescription = argsDescription;\n    }\n    return this;\n  }\n\n  /**\n   * Set the summary. Used when listed as subcommand of parent.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n  summary(str) {\n    if (str === undefined) return this._summary;\n    this._summary = str;\n    return this;\n  }\n\n  /**\n   * Set an alias for the command.\n   *\n   * You may call more than once to add multiple aliases. Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string} [alias]\n   * @return {(string|Command)}\n   */\n\n  alias(alias) {\n    if (alias === undefined) return this._aliases[0]; // just return first, for backwards compatibility\n\n    /** @type {Command} */\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let command = this;\n    if (\n      this.commands.length !== 0 &&\n      this.commands[this.commands.length - 1]._executableHandler\n    ) {\n      // assume adding alias for last added executable subcommand, rather than this\n      command = this.commands[this.commands.length - 1];\n    }\n\n    if (alias === command._name)\n      throw new Error(\"Command alias can't be the same as its name\");\n    const matchingCommand = this.parent?._findCommand(alias);\n    if (matchingCommand) {\n      // c.f. _registerCommand\n      const existingCmd = [matchingCommand.name()]\n        .concat(matchingCommand.aliases())\n        .join('|');\n      throw new Error(\n        `cannot add alias '${alias}' to command '${this.name()}' as already have command '${existingCmd}'`,\n      );\n    }\n\n    command._aliases.push(alias);\n    return this;\n  }\n\n  /**\n   * Set aliases for the command.\n   *\n   * Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string[]} [aliases]\n   * @return {(string[]|Command)}\n   */\n\n  aliases(aliases) {\n    // Getter for the array of aliases is the main reason for having aliases() in addition to alias().\n    if (aliases === undefined) return this._aliases;\n\n    aliases.forEach((alias) => this.alias(alias));\n    return this;\n  }\n\n  /**\n   * Set / get the command usage `str`.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n\n  usage(str) {\n    if (str === undefined) {\n      if (this._usage) return this._usage;\n\n      const args = this.registeredArguments.map((arg) => {\n        return humanReadableArgName(arg);\n      });\n      return []\n        .concat(\n          this.options.length || this._helpOption !== null ? '[options]' : [],\n          this.commands.length ? '[command]' : [],\n          this.registeredArguments.length ? args : [],\n        )\n        .join(' ');\n    }\n\n    this._usage = str;\n    return this;\n  }\n\n  /**\n   * Get or set the name of the command.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n\n  name(str) {\n    if (str === undefined) return this._name;\n    this._name = str;\n    return this;\n  }\n\n  /**\n   * Set the name of the command from script filename, such as process.argv[1],\n   * or require.main.filename, or __filename.\n   *\n   * (Used internally and public although not documented in README.)\n   *\n   * @example\n   * program.nameFromFilename(require.main.filename);\n   *\n   * @param {string} filename\n   * @return {Command}\n   */\n\n  nameFromFilename(filename) {\n    this._name = path.basename(filename, path.extname(filename));\n\n    return this;\n  }\n\n  /**\n   * Get or set the directory for searching for executable subcommands of this command.\n   *\n   * @example\n   * program.executableDir(__dirname);\n   * // or\n   * program.executableDir('subcommands');\n   *\n   * @param {string} [path]\n   * @return {(string|null|Command)}\n   */\n\n  executableDir(path) {\n    if (path === undefined) return this._executableDir;\n    this._executableDir = path;\n    return this;\n  }\n\n  /**\n   * Return program help documentation.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to wrap for stderr instead of stdout\n   * @return {string}\n   */\n\n  helpInformation(contextOptions) {\n    const helper = this.createHelp();\n    if (helper.helpWidth === undefined) {\n      helper.helpWidth =\n        contextOptions && contextOptions.error\n          ? this._outputConfiguration.getErrHelpWidth()\n          : this._outputConfiguration.getOutHelpWidth();\n    }\n    return helper.formatHelp(this, helper);\n  }\n\n  /**\n   * @private\n   */\n\n  _getHelpContext(contextOptions) {\n    contextOptions = contextOptions || {};\n    const context = { error: !!contextOptions.error };\n    let write;\n    if (context.error) {\n      write = (arg) => this._outputConfiguration.writeErr(arg);\n    } else {\n      write = (arg) => this._outputConfiguration.writeOut(arg);\n    }\n    context.write = contextOptions.write || write;\n    context.command = this;\n    return context;\n  }\n\n  /**\n   * Output help information for this command.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean } | Function} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  outputHelp(contextOptions) {\n    let deprecatedCallback;\n    if (typeof contextOptions === 'function') {\n      deprecatedCallback = contextOptions;\n      contextOptions = undefined;\n    }\n    const context = this._getHelpContext(contextOptions);\n\n    this._getCommandAndAncestors()\n      .reverse()\n      .forEach((command) => command.emit('beforeAllHelp', context));\n    this.emit('beforeHelp', context);\n\n    let helpInformation = this.helpInformation(context);\n    if (deprecatedCallback) {\n      helpInformation = deprecatedCallback(helpInformation);\n      if (\n        typeof helpInformation !== 'string' &&\n        !Buffer.isBuffer(helpInformation)\n      ) {\n        throw new Error('outputHelp callback must return a string or a Buffer');\n      }\n    }\n    context.write(helpInformation);\n\n    if (this._getHelpOption()?.long) {\n      this.emit(this._getHelpOption().long); // deprecated\n    }\n    this.emit('afterHelp', context);\n    this._getCommandAndAncestors().forEach((command) =>\n      command.emit('afterAllHelp', context),\n    );\n  }\n\n  /**\n   * You can pass in flags and a description to customise the built-in help option.\n   * Pass in false to disable the built-in help option.\n   *\n   * @example\n   * program.helpOption('-?, --help' 'show help'); // customise\n   * program.helpOption(false); // disable\n   *\n   * @param {(string | boolean)} flags\n   * @param {string} [description]\n   * @return {Command} `this` command for chaining\n   */\n\n  helpOption(flags, description) {\n    // Support disabling built-in help option.\n    if (typeof flags === 'boolean') {\n      if (flags) {\n        this._helpOption = this._helpOption ?? undefined; // preserve existing option\n      } else {\n        this._helpOption = null; // disable\n      }\n      return this;\n    }\n\n    // Customise flags and description.\n    flags = flags ?? '-h, --help';\n    description = description ?? 'display help for command';\n    this._helpOption = this.createOption(flags, description);\n\n    return this;\n  }\n\n  /**\n   * Lazy create help option.\n   * Returns null if has been disabled with .helpOption(false).\n   *\n   * @returns {(Option | null)} the help option\n   * @package\n   */\n  _getHelpOption() {\n    // Lazy create help option on demand.\n    if (this._helpOption === undefined) {\n      this.helpOption(undefined, undefined);\n    }\n    return this._helpOption;\n  }\n\n  /**\n   * Supply your own option to use for the built-in help option.\n   * This is an alternative to using helpOption() to customise the flags and description etc.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addHelpOption(option) {\n    this._helpOption = option;\n    return this;\n  }\n\n  /**\n   * Output help information and exit.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  help(contextOptions) {\n    this.outputHelp(contextOptions);\n    let exitCode = process.exitCode || 0;\n    if (\n      exitCode === 0 &&\n      contextOptions &&\n      typeof contextOptions !== 'function' &&\n      contextOptions.error\n    ) {\n      exitCode = 1;\n    }\n    // message: do not have all displayed text available so only passing placeholder.\n    this._exit(exitCode, 'commander.help', '(outputHelp)');\n  }\n\n  /**\n   * Add additional text to be displayed with the built-in help.\n   *\n   * Position is 'before' or 'after' to affect just this command,\n   * and 'beforeAll' or 'afterAll' to affect this command and all its subcommands.\n   *\n   * @param {string} position - before or after built-in help\n   * @param {(string | Function)} text - string to add, or a function returning a string\n   * @return {Command} `this` command for chaining\n   */\n  addHelpText(position, text) {\n    const allowedValues = ['beforeAll', 'before', 'after', 'afterAll'];\n    if (!allowedValues.includes(position)) {\n      throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    const helpEvent = `${position}Help`;\n    this.on(helpEvent, (context) => {\n      let helpStr;\n      if (typeof text === 'function') {\n        helpStr = text({ error: context.error, command: context.command });\n      } else {\n        helpStr = text;\n      }\n      // Ignore falsy value when nothing to output.\n      if (helpStr) {\n        context.write(`${helpStr}\\n`);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Output help information if help flags specified\n   *\n   * @param {Array} args - array of options to search for help flags\n   * @private\n   */\n\n  _outputHelpIfRequested(args) {\n    const helpOption = this._getHelpOption();\n    const helpRequested = helpOption && args.find((arg) => helpOption.is(arg));\n    if (helpRequested) {\n      this.outputHelp();\n      // (Do not have all displayed text available so only passing placeholder.)\n      this._exit(0, 'commander.helpDisplayed', '(outputHelp)');\n    }\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    if (!arg.startsWith('--inspect')) {\n      return arg;\n    }\n    let debugOption;\n    let debugHost = '127.0.0.1';\n    let debugPort = '9229';\n    let match;\n    if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n      // e.g. --inspect\n      debugOption = match[1];\n    } else if (\n      (match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null\n    ) {\n      debugOption = match[1];\n      if (/^\\d+$/.test(match[3])) {\n        // e.g. --inspect=1234\n        debugPort = match[3];\n      } else {\n        // e.g. --inspect=localhost\n        debugHost = match[3];\n      }\n    } else if (\n      (match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null\n    ) {\n      // e.g. --inspect=localhost:1234\n      debugOption = match[1];\n      debugHost = match[3];\n      debugPort = match[4];\n    }\n\n    if (debugOption && debugPort !== '0') {\n      return `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n    }\n    return arg;\n  });\n}\n\nexports.Command = Command;\n","const { Argument } = require('./lib/argument.js');\nconst { Command } = require('./lib/command.js');\nconst { CommanderError, InvalidArgumentError } = require('./lib/error.js');\nconst { Help } = require('./lib/help.js');\nconst { Option } = require('./lib/option.js');\n\nexports.program = new Command();\n\nexports.createCommand = (name) => new Command(name);\nexports.createOption = (flags, description) => new Option(flags, description);\nexports.createArgument = (name, description) => new Argument(name, description);\n\n/**\n * Expose classes\n */\n\nexports.Command = Command;\nexports.Option = Option;\nexports.Argument = Argument;\nexports.Help = Help;\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\nexports.InvalidOptionArgumentError = InvalidArgumentError; // Deprecated\n","import commander from './index.js';\n\n// wrapper to provide named exports for ESM.\nexport const {\n  program,\n  createCommand,\n  createArgument,\n  createOption,\n  CommanderError,\n  InvalidArgumentError,\n  InvalidOptionArgumentError, // deprecated old name\n  Command,\n  Argument,\n  Option,\n  Help,\n} = commander;\n","'use strict';\nconst path = require('path');\nconst Module = require('module');\nconst fs = require('fs');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n\tif (typeof fromDir !== 'string') {\n\t\tthrow new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n\t}\n\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n\t}\n\n\ttry {\n\t\tfromDir = fs.realpathSync(fromDir);\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\tfromDir = path.resolve(fromDir);\n\t\t} else if (silent) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tconst fromFile = path.join(fromDir, 'noop.js');\n\n\tconst resolveFileName = () => Module._resolveFilename(moduleId, {\n\t\tid: fromFile,\n\t\tfilename: fromFile,\n\t\tpaths: Module._nodeModulePaths(fromDir)\n\t});\n\n\tif (silent) {\n\t\ttry {\n\t\t\treturn resolveFileName();\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);\n","'use strict';\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports.default = callsites;\n","'use strict';\nconst callsites = require('callsites');\n\nmodule.exports = filepath => {\n\tconst stacks = callsites();\n\n\tif (!filepath) {\n\t\treturn stacks[2].getFileName();\n\t}\n\n\tlet seenVal = false;\n\n\t// Skip the first stack as it's this function\n\tstacks.shift();\n\n\tfor (const stack of stacks) {\n\t\tconst parentFilepath = stack.getFileName();\n\n\t\tif (typeof parentFilepath !== 'string') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (parentFilepath === filepath) {\n\t\t\tseenVal = true;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Skip native modules\n\t\tif (parentFilepath === 'module.js') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (seenVal && parentFilepath !== filepath) {\n\t\t\treturn parentFilepath;\n\t\t}\n\t}\n};\n","'use strict';\nconst path = require('path');\nconst resolveFrom = require('resolve-from');\nconst parentModule = require('parent-module');\n\nmodule.exports = moduleId => {\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tconst parentPath = parentModule(__filename);\n\n\tconst cwd = parentPath ? path.dirname(parentPath) : __dirname;\n\tconst filePath = resolveFrom(cwd, moduleId);\n\n\tconst oldModule = require.cache[filePath];\n\t// Delete itself from module parent\n\tif (oldModule && oldModule.parent) {\n\t\tlet i = oldModule.parent.children.length;\n\n\t\twhile (i--) {\n\t\t\tif (oldModule.parent.children[i].id === filePath) {\n\t\t\t\toldModule.parent.children.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete require.cache[filePath]; // Delete module from cache\n\n\tconst parent = require.cache[parentPath]; // If `filePath` and `parentPath` are the same, cache will already be deleted so we won't get a memory leak in next step\n\n\treturn parent === undefined ? require(filePath) : parent.require(filePath); // In case cache doesn't have parent, fall back to normal require\n};\n","'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj) {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && obj.splice instanceof Function);\n};\n","'use strict';\n\nvar util = require('util');\nvar isArrayish = require('is-arrayish');\n\nvar errorEx = function errorEx(name, properties) {\n\tif (!name || name.constructor !== String) {\n\t\tproperties = name || {};\n\t\tname = Error.name;\n\t}\n\n\tvar errorExError = function ErrorEXError(message) {\n\t\tif (!this) {\n\t\t\treturn new ErrorEXError(message);\n\t\t}\n\n\t\tmessage = message instanceof Error\n\t\t\t? message.message\n\t\t\t: (message || this.message);\n\n\t\tError.call(this, message);\n\t\tError.captureStackTrace(this, errorExError);\n\n\t\tthis.name = name;\n\n\t\tObject.defineProperty(this, 'message', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: function () {\n\t\t\t\tvar newMessage = message.split(/\\r?\\n/g);\n\n\t\t\t\tfor (var key in properties) {\n\t\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\t\tif ('message' in modifier) {\n\t\t\t\t\t\tnewMessage = modifier.message(this[key], newMessage) || newMessage;\n\t\t\t\t\t\tif (!isArrayish(newMessage)) {\n\t\t\t\t\t\t\tnewMessage = [newMessage];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn newMessage.join('\\n');\n\t\t\t},\n\t\t\tset: function (v) {\n\t\t\t\tmessage = v;\n\t\t\t}\n\t\t});\n\n\t\tvar overwrittenStack = null;\n\n\t\tvar stackDescriptor = Object.getOwnPropertyDescriptor(this, 'stack');\n\t\tvar stackGetter = stackDescriptor.get;\n\t\tvar stackValue = stackDescriptor.value;\n\t\tdelete stackDescriptor.value;\n\t\tdelete stackDescriptor.writable;\n\n\t\tstackDescriptor.set = function (newstack) {\n\t\t\toverwrittenStack = newstack;\n\t\t};\n\n\t\tstackDescriptor.get = function () {\n\t\t\tvar stack = (overwrittenStack || ((stackGetter)\n\t\t\t\t? stackGetter.call(this)\n\t\t\t\t: stackValue)).split(/\\r?\\n+/g);\n\n\t\t\t// starting in Node 7, the stack builder caches the message.\n\t\t\t// just replace it.\n\t\t\tif (!overwrittenStack) {\n\t\t\t\tstack[0] = this.name + ': ' + this.message;\n\t\t\t}\n\n\t\t\tvar lineCount = 1;\n\t\t\tfor (var key in properties) {\n\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\tif ('line' in modifier) {\n\t\t\t\t\tvar line = modifier.line(this[key]);\n\t\t\t\t\tif (line) {\n\t\t\t\t\t\tstack.splice(lineCount++, 0, '    ' + line);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ('stack' in modifier) {\n\t\t\t\t\tmodifier.stack(this[key], stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stack.join('\\n');\n\t\t};\n\n\t\tObject.defineProperty(this, 'stack', stackDescriptor);\n\t};\n\n\tif (Object.setPrototypeOf) {\n\t\tObject.setPrototypeOf(errorExError.prototype, Error.prototype);\n\t\tObject.setPrototypeOf(errorExError, Error);\n\t} else {\n\t\tutil.inherits(errorExError, Error);\n\t}\n\n\treturn errorExError;\n};\n\nerrorEx.append = function (str, def) {\n\treturn {\n\t\tmessage: function (v, message) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\tmessage[0] += ' ' + str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn message;\n\t\t}\n\t};\n};\n\nerrorEx.line = function (str, def) {\n\treturn {\n\t\tline: function (v) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\treturn str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t};\n};\n\nmodule.exports = errorEx;\n","'use strict'\n\nconst hexify = char => {\n  const h = char.charCodeAt(0).toString(16).toUpperCase()\n  return '0x' + (h.length % 2 ? '0' : '') + h\n}\n\nconst parseError = (e, txt, context) => {\n  if (!txt) {\n    return {\n      message: e.message + ' while parsing empty string',\n      position: 0,\n    }\n  }\n  const badToken = e.message.match(/^Unexpected token (.) .*position\\s+(\\d+)/i)\n  const errIdx = badToken ? +badToken[2]\n    : e.message.match(/^Unexpected end of JSON.*/i) ? txt.length - 1\n    : null\n\n  const msg = badToken ? e.message.replace(/^Unexpected token ./, `Unexpected token ${\n      JSON.stringify(badToken[1])\n    } (${hexify(badToken[1])})`)\n    : e.message\n\n  if (errIdx !== null && errIdx !== undefined) {\n    const start = errIdx <= context ? 0\n      : errIdx - context\n\n    const end = errIdx + context >= txt.length ? txt.length\n      : errIdx + context\n\n    const slice = (start === 0 ? '' : '...') +\n      txt.slice(start, end) +\n      (end === txt.length ? '' : '...')\n\n    const near = txt === slice ? '' : 'near '\n\n    return {\n      message: msg + ` while parsing ${near}${JSON.stringify(slice)}`,\n      position: errIdx,\n    }\n  } else {\n    return {\n      message: msg + ` while parsing '${txt.slice(0, context * 2)}'`,\n      position: 0,\n    }\n  }\n}\n\nclass JSONParseError extends SyntaxError {\n  constructor (er, txt, context, caller) {\n    context = context || 20\n    const metadata = parseError(er, txt, context)\n    super(metadata.message)\n    Object.assign(this, metadata)\n    this.code = 'EJSONPARSE'\n    this.systemError = er\n    Error.captureStackTrace(this, caller || this.constructor)\n  }\n  get name () { return this.constructor.name }\n  set name (n) {}\n  get [Symbol.toStringTag] () { return this.constructor.name }\n}\n\nconst kIndent = Symbol.for('indent')\nconst kNewline = Symbol.for('newline')\n// only respect indentation if we got a line break, otherwise squash it\n// things other than objects and arrays aren't indented, so ignore those\n// Important: in both of these regexps, the $1 capture group is the newline\n// or undefined, and the $2 capture group is the indent, or undefined.\nconst formatRE = /^\\s*[{\\[]((?:\\r?\\n)+)([\\s\\t]*)/\nconst emptyRE = /^(?:\\{\\}|\\[\\])((?:\\r?\\n)+)?$/\n\nconst parseJson = (txt, reviver, context) => {\n  const parseText = stripBOM(txt)\n  context = context || 20\n  try {\n    // get the indentation so that we can save it back nicely\n    // if the file starts with {\" then we have an indent of '', ie, none\n    // otherwise, pick the indentation of the next line after the first \\n\n    // If the pattern doesn't match, then it means no indentation.\n    // JSON.stringify ignores symbols, so this is reasonably safe.\n    // if the string is '{}' or '[]', then use the default 2-space indent.\n    const [, newline = '\\n', indent = '  '] = parseText.match(emptyRE) ||\n      parseText.match(formatRE) ||\n      [, '', '']\n\n    const result = JSON.parse(parseText, reviver)\n    if (result && typeof result === 'object') {\n      result[kNewline] = newline\n      result[kIndent] = indent\n    }\n    return result\n  } catch (e) {\n    if (typeof txt !== 'string' && !Buffer.isBuffer(txt)) {\n      const isEmptyArray = Array.isArray(txt) && txt.length === 0\n      throw Object.assign(new TypeError(\n        `Cannot parse ${isEmptyArray ? 'an empty array' : String(txt)}`\n      ), {\n        code: 'EJSONPARSE',\n        systemError: e,\n      })\n    }\n\n    throw new JSONParseError(e, parseText, context, parseJson)\n  }\n}\n\n// Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n// because the buffer-to-string conversion in `fs.readFileSync()`\n// translates it to FEFF, the UTF-16 BOM.\nconst stripBOM = txt => String(txt).replace(/^\\uFEFF/, '')\n\nmodule.exports = parseJson\nparseJson.JSONParseError = JSONParseError\n\nparseJson.noExceptions = (txt, reviver) => {\n  try {\n    return JSON.parse(stripBOM(txt), reviver)\n  } catch (e) {}\n}\n","\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n","var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x,blackBright:x,redBright:x,greenBright:x,yellowBright:x,blueBright:x,magentaBright:x,cyanBright:x,whiteBright:x,bgBlackBright:x,bgRedBright:x,bgGreenBright:x,bgYellowBright:x,bgBlueBright:x,bgMagentaBright:x,bgCyanBright:x,bgWhiteBright:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n})\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nexports.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0], closed: undefined}\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = \"comment\"\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7]\n  else if (match[ 8]) token.type = \"regex\"\n  else if (match[ 9]) token.type = \"number\"\n  else if (match[10]) token.type = \"name\"\n  else if (match[11]) token.type = \"punctuator\"\n  else if (match[12]) token.type = \"whitespace\"\n  return token\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierName = isIdentifierName;\nexports.isIdentifierStart = isIdentifierStart;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nfunction isIdentifierName(name) {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n\n//# sourceMappingURL=identifier.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isKeyword = isKeyword;\nexports.isReservedWord = isReservedWord;\nexports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nexports.isStrictBindReservedWord = isStrictBindReservedWord;\nexports.isStrictReservedWord = isStrictReservedWord;\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\n//# sourceMappingURL=keyword.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isIdentifierChar\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierChar;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierName;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierStart\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierStart;\n  }\n});\nObject.defineProperty(exports, \"isKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isKeyword;\n  }\n});\nObject.defineProperty(exports, \"isReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindOnlyReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictReservedWord;\n  }\n});\nvar _identifier = require(\"./identifier.js\");\nvar _keyword = require(\"./keyword.js\");\n\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar picocolors = require('picocolors');\nvar jsTokens = require('js-tokens');\nvar helperValidatorIdentifier = require('@babel/helper-validator-identifier');\n\nfunction isColorSupported() {\n  return (typeof process === \"object\" && (process.env.FORCE_COLOR === \"0\" || process.env.FORCE_COLOR === \"false\") ? false : picocolors.isColorSupported\n  );\n}\nconst compose = (f, g) => v => f(g(v));\nfunction buildDefs(colors) {\n  return {\n    keyword: colors.cyan,\n    capitalized: colors.yellow,\n    jsxIdentifier: colors.yellow,\n    punctuator: colors.yellow,\n    number: colors.magenta,\n    string: colors.green,\n    regex: colors.magenta,\n    comment: colors.gray,\n    invalid: compose(compose(colors.white, colors.bgRed), colors.bold),\n    gutter: colors.gray,\n    marker: compose(colors.red, colors.bold),\n    message: compose(colors.red, colors.bold),\n    reset: colors.reset\n  };\n}\nconst defsOn = buildDefs(picocolors.createColors(true));\nconst defsOff = buildDefs(picocolors.createColors(false));\nfunction getDefs(enabled) {\n  return enabled ? defsOn : defsOff;\n}\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\nconst NEWLINE$1 = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if (helperValidatorIdentifier.isKeyword(token.value) || helperValidatorIdentifier.isStrictReservedWord(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) === \"</\")) {\n        return \"jsxIdentifier\";\n      }\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n    return token.type;\n  };\n  tokenize = function* (text) {\n    let match;\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\nfunction highlight(text) {\n  if (text === \"\") return \"\";\n  const defs = getDefs(true);\n  let highlighted = \"\";\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    if (type in defs) {\n      highlighted += value.split(NEWLINE$1).map(str => defs[type](str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n  return highlighted;\n}\n\nlet deprecationWarningShown = false;\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n  if (startLine === -1) {\n    start = 0;\n  }\n  if (endLine === -1) {\n    end = source.length;\n  }\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const shouldHighlight = opts.forceColor || isColorSupported() && opts.highlightCode;\n  const defs = getDefs(shouldHighlight);\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = shouldHighlight ? highlight(rawLines) : rawLines;\n  let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n    if (hasMarker) {\n      let markerLine = \"\";\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", defs.gutter(gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, defs.marker(\"^\").repeat(numberOfMarkers)].join(\"\");\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + defs.message(opts.message);\n        }\n      }\n      return [defs.marker(\">\"), defs.gutter(gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${defs.gutter(gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n  if (shouldHighlight) {\n    return defs.reset(frame);\n  } else {\n    return frame;\n  }\n}\nfunction index (rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}\n\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = index;\nexports.highlight = highlight;\n//# sourceMappingURL=index.js.map\n","'use strict';\nconst errorEx = require('error-ex');\nconst fallback = require('json-parse-even-better-errors');\nconst {default: LinesAndColumns} = require('lines-and-columns');\nconst {codeFrameColumns} = require('@babel/code-frame');\n\nconst JSONError = errorEx('JSONError', {\n\tfileName: errorEx.append('in %s'),\n\tcodeFrame: errorEx.append('\\n\\n%s\\n')\n});\n\nconst parseJson = (string, reviver, filename) => {\n\tif (typeof reviver === 'string') {\n\t\tfilename = reviver;\n\t\treviver = null;\n\t}\n\n\ttry {\n\t\ttry {\n\t\t\treturn JSON.parse(string, reviver);\n\t\t} catch (error) {\n\t\t\tfallback(string, reviver);\n\t\t\tthrow error;\n\t\t}\n\t} catch (error) {\n\t\terror.message = error.message.replace(/\\n/g, '');\n\t\tconst indexMatch = error.message.match(/in JSON at position (\\d+) while parsing/);\n\n\t\tconst jsonError = new JSONError(error);\n\t\tif (filename) {\n\t\t\tjsonError.fileName = filename;\n\t\t}\n\n\t\tif (indexMatch && indexMatch.length > 0) {\n\t\t\tconst lines = new LinesAndColumns(string);\n\t\t\tconst index = Number(indexMatch[1]);\n\t\t\tconst location = lines.locationForIndex(index);\n\n\t\t\tconst codeFrame = codeFrameColumns(\n\t\t\t\tstring,\n\t\t\t\t{start: {line: location.line + 1, column: location.column + 1}},\n\t\t\t\t{highlightCode: true}\n\t\t\t);\n\n\t\t\tjsonError.codeFrame = codeFrame;\n\t\t}\n\n\t\tthrow jsonError;\n\t}\n};\n\nparseJson.JSONError = JSONError;\n\nmodule.exports = parseJson;\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","\"use strict\";\n/* eslint-disable @typescript-eslint/no-require-imports */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadTs = exports.loadTsSync = exports.loadYaml = exports.loadJson = exports.loadJs = exports.loadJsSync = void 0;\nconst fs_1 = require(\"fs\");\nconst promises_1 = require(\"fs/promises\");\nconst path_1 = __importDefault(require(\"path\"));\nconst url_1 = require(\"url\");\nlet importFresh;\nconst loadJsSync = function loadJsSync(filepath) {\n    if (importFresh === undefined) {\n        importFresh = require('import-fresh');\n    }\n    return importFresh(filepath);\n};\nexports.loadJsSync = loadJsSync;\nconst loadJs = async function loadJs(filepath) {\n    try {\n        const { href } = (0, url_1.pathToFileURL)(filepath);\n        return (await import(href)).default;\n    }\n    catch (error) {\n        try {\n            return (0, exports.loadJsSync)(filepath, '');\n        }\n        catch (requireError) {\n            if (requireError.code === 'ERR_REQUIRE_ESM' ||\n                (requireError instanceof SyntaxError &&\n                    requireError\n                        .toString()\n                        .includes('Cannot use import statement outside a module'))) {\n                throw error;\n            }\n            throw requireError;\n        }\n    }\n};\nexports.loadJs = loadJs;\nlet parseJson;\nconst loadJson = function loadJson(filepath, content) {\n    if (parseJson === undefined) {\n        parseJson = require('parse-json');\n    }\n    try {\n        return parseJson(content);\n    }\n    catch (error) {\n        error.message = `JSON Error in ${filepath}:\\n${error.message}`;\n        throw error;\n    }\n};\nexports.loadJson = loadJson;\nlet yaml;\nconst loadYaml = function loadYaml(filepath, content) {\n    if (yaml === undefined) {\n        yaml = require('js-yaml');\n    }\n    try {\n        return yaml.load(content);\n    }\n    catch (error) {\n        error.message = `YAML Error in ${filepath}:\\n${error.message}`;\n        throw error;\n    }\n};\nexports.loadYaml = loadYaml;\nlet typescript;\nconst loadTsSync = function loadTsSync(filepath, content) {\n    /* istanbul ignore next -- @preserve */\n    if (typescript === undefined) {\n        typescript = require('typescript');\n    }\n    const compiledFilepath = `${filepath.slice(0, -2)}cjs`;\n    try {\n        const config = resolveTsConfig(path_1.default.dirname(filepath)) ?? {};\n        config.compilerOptions = {\n            ...config.compilerOptions,\n            module: typescript.ModuleKind.NodeNext,\n            moduleResolution: typescript.ModuleResolutionKind.NodeNext,\n            target: typescript.ScriptTarget.ES2022,\n            noEmit: false,\n        };\n        content = typescript.transpileModule(content, config).outputText;\n        (0, fs_1.writeFileSync)(compiledFilepath, content);\n        return (0, exports.loadJsSync)(compiledFilepath, content).default;\n    }\n    catch (error) {\n        error.message = `TypeScript Error in ${filepath}:\\n${error.message}`;\n        throw error;\n    }\n    finally {\n        if ((0, fs_1.existsSync)(compiledFilepath)) {\n            (0, fs_1.rmSync)(compiledFilepath);\n        }\n    }\n};\nexports.loadTsSync = loadTsSync;\nconst loadTs = async function loadTs(filepath, content) {\n    if (typescript === undefined) {\n        typescript = (await import('typescript')).default;\n    }\n    const compiledFilepath = `${filepath.slice(0, -2)}mjs`;\n    let transpiledContent;\n    try {\n        try {\n            const config = resolveTsConfig(path_1.default.dirname(filepath)) ?? {};\n            config.compilerOptions = {\n                ...config.compilerOptions,\n                module: typescript.ModuleKind.ES2022,\n                moduleResolution: typescript.ModuleResolutionKind.Bundler,\n                target: typescript.ScriptTarget.ES2022,\n                noEmit: false,\n            };\n            transpiledContent = typescript.transpileModule(content, config).outputText;\n            await (0, promises_1.writeFile)(compiledFilepath, transpiledContent);\n        }\n        catch (error) {\n            error.message = `TypeScript Error in ${filepath}:\\n${error.message}`;\n            throw error;\n        }\n        // eslint-disable-next-line @typescript-eslint/return-await\n        return await (0, exports.loadJs)(compiledFilepath, transpiledContent);\n    }\n    finally {\n        if ((0, fs_1.existsSync)(compiledFilepath)) {\n            await (0, promises_1.rm)(compiledFilepath);\n        }\n    }\n};\nexports.loadTs = loadTs;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction resolveTsConfig(directory) {\n    const filePath = typescript.findConfigFile(directory, (fileName) => {\n        return typescript.sys.fileExists(fileName);\n    });\n    if (filePath !== undefined) {\n        const { config, error } = typescript.readConfigFile(filePath, (path) => typescript.sys.readFile(path));\n        if (error) {\n            throw new Error(`Error in ${filePath}: ${error.messageText.toString()}`);\n        }\n        return config;\n    }\n    return;\n}\n//# sourceMappingURL=loaders.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultLoadersSync = exports.defaultLoaders = exports.metaSearchPlaces = exports.globalConfigSearchPlacesSync = exports.globalConfigSearchPlaces = exports.getDefaultSearchPlacesSync = exports.getDefaultSearchPlaces = void 0;\nconst loaders_1 = require(\"./loaders\");\nfunction getDefaultSearchPlaces(moduleName) {\n    return [\n        'package.json',\n        `.${moduleName}rc`,\n        `.${moduleName}rc.json`,\n        `.${moduleName}rc.yaml`,\n        `.${moduleName}rc.yml`,\n        `.${moduleName}rc.js`,\n        `.${moduleName}rc.ts`,\n        `.${moduleName}rc.cjs`,\n        `.${moduleName}rc.mjs`,\n        `.config/${moduleName}rc`,\n        `.config/${moduleName}rc.json`,\n        `.config/${moduleName}rc.yaml`,\n        `.config/${moduleName}rc.yml`,\n        `.config/${moduleName}rc.js`,\n        `.config/${moduleName}rc.ts`,\n        `.config/${moduleName}rc.cjs`,\n        `.config/${moduleName}rc.mjs`,\n        `${moduleName}.config.js`,\n        `${moduleName}.config.ts`,\n        `${moduleName}.config.cjs`,\n        `${moduleName}.config.mjs`,\n    ];\n}\nexports.getDefaultSearchPlaces = getDefaultSearchPlaces;\nfunction getDefaultSearchPlacesSync(moduleName) {\n    return [\n        'package.json',\n        `.${moduleName}rc`,\n        `.${moduleName}rc.json`,\n        `.${moduleName}rc.yaml`,\n        `.${moduleName}rc.yml`,\n        `.${moduleName}rc.js`,\n        `.${moduleName}rc.ts`,\n        `.${moduleName}rc.cjs`,\n        `.config/${moduleName}rc`,\n        `.config/${moduleName}rc.json`,\n        `.config/${moduleName}rc.yaml`,\n        `.config/${moduleName}rc.yml`,\n        `.config/${moduleName}rc.js`,\n        `.config/${moduleName}rc.ts`,\n        `.config/${moduleName}rc.cjs`,\n        `${moduleName}.config.js`,\n        `${moduleName}.config.ts`,\n        `${moduleName}.config.cjs`,\n    ];\n}\nexports.getDefaultSearchPlacesSync = getDefaultSearchPlacesSync;\nexports.globalConfigSearchPlaces = [\n    'config',\n    'config.json',\n    'config.yaml',\n    'config.yml',\n    'config.js',\n    'config.ts',\n    'config.cjs',\n    'config.mjs',\n];\nexports.globalConfigSearchPlacesSync = [\n    'config',\n    'config.json',\n    'config.yaml',\n    'config.yml',\n    'config.js',\n    'config.ts',\n    'config.cjs',\n];\n// this needs to be hardcoded, as this is intended for end users, who can't supply options at this point\nexports.metaSearchPlaces = [\n    'package.json',\n    'package.yaml',\n    '.config/config.json',\n    '.config/config.yaml',\n    '.config/config.yml',\n    '.config/config.js',\n    '.config/config.ts',\n    '.config/config.cjs',\n    '.config/config.mjs',\n];\n// do not allow mutation of default loaders. Make sure it is set inside options\nexports.defaultLoaders = Object.freeze({\n    '.mjs': loaders_1.loadJs,\n    '.cjs': loaders_1.loadJs,\n    '.js': loaders_1.loadJs,\n    '.ts': loaders_1.loadTs,\n    '.json': loaders_1.loadJson,\n    '.yaml': loaders_1.loadYaml,\n    '.yml': loaders_1.loadYaml,\n    noExt: loaders_1.loadYaml,\n});\nexports.defaultLoadersSync = Object.freeze({\n    '.cjs': loaders_1.loadJsSync,\n    '.js': loaders_1.loadJsSync,\n    '.ts': loaders_1.loadTsSync,\n    '.json': loaders_1.loadJson,\n    '.yaml': loaders_1.loadYaml,\n    '.yml': loaders_1.loadYaml,\n    noExt: loaders_1.loadYaml,\n});\n//# sourceMappingURL=defaults.js.map","'use strict';\nconst path = require('path');\nconst os = require('os');\n\nconst homedir = os.homedir();\nconst tmpdir = os.tmpdir();\nconst {env} = process;\n\nconst macos = name => {\n\tconst library = path.join(homedir, 'Library');\n\n\treturn {\n\t\tdata: path.join(library, 'Application Support', name),\n\t\tconfig: path.join(library, 'Preferences', name),\n\t\tcache: path.join(library, 'Caches', name),\n\t\tlog: path.join(library, 'Logs', name),\n\t\ttemp: path.join(tmpdir, name)\n\t};\n};\n\nconst windows = name => {\n\tconst appData = env.APPDATA || path.join(homedir, 'AppData', 'Roaming');\n\tconst localAppData = env.LOCALAPPDATA || path.join(homedir, 'AppData', 'Local');\n\n\treturn {\n\t\t// Data/config/cache/log are invented by me as Windows isn't opinionated about this\n\t\tdata: path.join(localAppData, name, 'Data'),\n\t\tconfig: path.join(appData, name, 'Config'),\n\t\tcache: path.join(localAppData, name, 'Cache'),\n\t\tlog: path.join(localAppData, name, 'Log'),\n\t\ttemp: path.join(tmpdir, name)\n\t};\n};\n\n// https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\nconst linux = name => {\n\tconst username = path.basename(homedir);\n\n\treturn {\n\t\tdata: path.join(env.XDG_DATA_HOME || path.join(homedir, '.local', 'share'), name),\n\t\tconfig: path.join(env.XDG_CONFIG_HOME || path.join(homedir, '.config'), name),\n\t\tcache: path.join(env.XDG_CACHE_HOME || path.join(homedir, '.cache'), name),\n\t\t// https://wiki.debian.org/XDGBaseDirectorySpecification#state\n\t\tlog: path.join(env.XDG_STATE_HOME || path.join(homedir, '.local', 'state'), name),\n\t\ttemp: path.join(tmpdir, username, name)\n\t};\n};\n\nconst envPaths = (name, options) => {\n\tif (typeof name !== 'string') {\n\t\tthrow new TypeError(`Expected string, got ${typeof name}`);\n\t}\n\n\toptions = Object.assign({suffix: 'nodejs'}, options);\n\n\tif (options.suffix) {\n\t\t// Add suffix to prevent possible conflict with native apps\n\t\tname += `-${options.suffix}`;\n\t}\n\n\tif (process.platform === 'darwin') {\n\t\treturn macos(name);\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn windows(name);\n\t}\n\n\treturn linux(name);\n};\n\nmodule.exports = envPaths;\n// TODO: Remove this for the next major release\nmodule.exports.default = envPaths;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDirectorySync = exports.isDirectory = exports.removeUndefinedValuesFromObject = exports.getPropertyByPath = exports.emplace = void 0;\nconst fs_1 = __importStar(require(\"fs\"));\n/**\n * @internal\n */\nfunction emplace(map, key, fn) {\n    const cached = map.get(key);\n    if (cached !== undefined) {\n        return cached;\n    }\n    const result = fn();\n    map.set(key, result);\n    return result;\n}\nexports.emplace = emplace;\n// Resolves property names or property paths defined with period-delimited\n// strings or arrays of strings. Property names that are found on the source\n// object are used directly (even if they include a period).\n// Nested property names that include periods, within a path, are only\n// understood in array paths.\n/**\n * @internal\n */\nfunction getPropertyByPath(source, path) {\n    if (typeof path === 'string' &&\n        Object.prototype.hasOwnProperty.call(source, path)) {\n        return source[path];\n    }\n    const parsedPath = typeof path === 'string' ? path.split('.') : path;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return parsedPath.reduce((previous, key) => {\n        if (previous === undefined) {\n            return previous;\n        }\n        return previous[key];\n    }, source);\n}\nexports.getPropertyByPath = getPropertyByPath;\n/** @internal */\nfunction removeUndefinedValuesFromObject(options) {\n    return Object.fromEntries(Object.entries(options).filter(([, value]) => value !== undefined));\n}\nexports.removeUndefinedValuesFromObject = removeUndefinedValuesFromObject;\n/** @internal */\n/* istanbul ignore next -- @preserve */\nasync function isDirectory(path) {\n    try {\n        const stat = await fs_1.promises.stat(path);\n        return stat.isDirectory();\n    }\n    catch (e) {\n        if (e.code === 'ENOENT') {\n            return false;\n        }\n        throw e;\n    }\n}\nexports.isDirectory = isDirectory;\n/** @internal */\n/* istanbul ignore next -- @preserve */\nfunction isDirectorySync(path) {\n    try {\n        const stat = fs_1.default.statSync(path);\n        return stat.isDirectory();\n    }\n    catch (e) {\n        if (e.code === 'ENOENT') {\n            return false;\n        }\n        throw e;\n    }\n}\nexports.isDirectorySync = isDirectorySync;\n//# sourceMappingURL=util.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getExtensionDescription = exports.ExplorerBase = void 0;\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst os_1 = __importDefault(require(\"os\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst util_js_1 = require(\"./util.js\");\n/**\n * @internal\n */\nclass ExplorerBase {\n    #loadingMetaConfig = false;\n    config;\n    loadCache;\n    searchCache;\n    constructor(options) {\n        this.config = options;\n        if (options.cache) {\n            this.loadCache = new Map();\n            this.searchCache = new Map();\n        }\n        this.#validateConfig();\n    }\n    set loadingMetaConfig(value) {\n        this.#loadingMetaConfig = value;\n    }\n    #validateConfig() {\n        const config = this.config;\n        for (const place of config.searchPlaces) {\n            const extension = path_1.default.extname(place);\n            const loader = this.config.loaders[extension || 'noExt'] ??\n                this.config.loaders['default'];\n            if (loader === undefined) {\n                throw new Error(`Missing loader for ${getExtensionDescription(place)}.`);\n            }\n            if (typeof loader !== 'function') {\n                throw new Error(`Loader for ${getExtensionDescription(place)} is not a function: Received ${typeof loader}.`);\n            }\n        }\n    }\n    clearLoadCache() {\n        if (this.loadCache) {\n            this.loadCache.clear();\n        }\n    }\n    clearSearchCache() {\n        if (this.searchCache) {\n            this.searchCache.clear();\n        }\n    }\n    clearCaches() {\n        this.clearLoadCache();\n        this.clearSearchCache();\n    }\n    toCosmiconfigResult(filepath, config) {\n        if (config === null) {\n            return null;\n        }\n        if (config === undefined) {\n            return { filepath, config: undefined, isEmpty: true };\n        }\n        if (this.config.applyPackagePropertyPathToConfiguration ||\n            this.#loadingMetaConfig) {\n            const packageProp = this.config.packageProp ?? this.config.moduleName;\n            config = (0, util_js_1.getPropertyByPath)(config, packageProp);\n        }\n        if (config === undefined) {\n            return { filepath, config: undefined, isEmpty: true };\n        }\n        return { config, filepath };\n    }\n    validateImports(containingFilePath, imports, importStack) {\n        const fileDirectory = path_1.default.dirname(containingFilePath);\n        for (const importPath of imports) {\n            if (typeof importPath !== 'string') {\n                throw new Error(`${containingFilePath}: Key $import must contain a string or a list of strings`);\n            }\n            const fullPath = path_1.default.resolve(fileDirectory, importPath);\n            if (fullPath === containingFilePath) {\n                throw new Error(`Self-import detected in ${containingFilePath}`);\n            }\n            const idx = importStack.indexOf(fullPath);\n            if (idx !== -1) {\n                throw new Error(`Circular import detected:\n${[...importStack, fullPath]\n                    .map((path, i) => `${i + 1}. ${path}`)\n                    .join('\\n')} (same as ${idx + 1}.)`);\n            }\n        }\n    }\n    getSearchPlacesForDir(dir, globalConfigPlaces) {\n        return (dir.isGlobalConfig ? globalConfigPlaces : this.config.searchPlaces).map((place) => path_1.default.join(dir.path, place));\n    }\n    getGlobalConfigDir() {\n        return (0, env_paths_1.default)(this.config.moduleName, { suffix: '' }).config;\n    }\n    *getGlobalDirs(startDir) {\n        const stopDir = path_1.default.resolve(this.config.stopDir ?? os_1.default.homedir());\n        yield { path: startDir, isGlobalConfig: false };\n        let currentDir = startDir;\n        while (currentDir !== stopDir) {\n            const parentDir = path_1.default.dirname(currentDir);\n            /* istanbul ignore if -- @preserve */\n            if (parentDir === currentDir) {\n                // we're probably at the root of the directory structure\n                break;\n            }\n            yield { path: parentDir, isGlobalConfig: false };\n            currentDir = parentDir;\n        }\n        yield { path: this.getGlobalConfigDir(), isGlobalConfig: true };\n    }\n}\nexports.ExplorerBase = ExplorerBase;\n/**\n * @internal\n */\nfunction getExtensionDescription(extension) {\n    /* istanbul ignore next -- @preserve */\n    return extension ? `extension \"${extension}\"` : 'files without extensions';\n}\nexports.getExtensionDescription = getExtensionDescription;\n//# sourceMappingURL=ExplorerBase.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeAll = exports.hasOwn = void 0;\n/* eslint-disable @typescript-eslint/unbound-method */\nexports.hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\nconst objToString = Function.prototype.call.bind(Object.prototype.toString);\n/* eslint-enable @typescript-eslint/unbound-method */\nfunction isPlainObject(obj) {\n    return objToString(obj) === '[object Object]';\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(target, source, options) {\n    for (const key of Object.keys(source)) {\n        const newValue = source[key];\n        if ((0, exports.hasOwn)(target, key)) {\n            if (Array.isArray(target[key]) && Array.isArray(newValue)) {\n                if (options.mergeArrays) {\n                    target[key].push(...newValue);\n                    continue;\n                }\n            }\n            else if (isPlainObject(target[key]) && isPlainObject(newValue)) {\n                target[key] = merge(target[key], newValue, options);\n                continue;\n            }\n        }\n        target[key] = newValue;\n    }\n    return target;\n}\n/**\n * Merges multiple objects. Doesn't care about cloning non-primitives, as we load all these objects fresh from a file.\n */\nfunction mergeAll(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nobjects, options) {\n    return objects.reduce((target, source) => merge(target, source, options), {});\n}\nexports.mergeAll = mergeAll;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Explorer = void 0;\nconst promises_1 = __importDefault(require(\"fs/promises\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst defaults_1 = require(\"./defaults\");\nconst ExplorerBase_js_1 = require(\"./ExplorerBase.js\");\nconst merge_1 = require(\"./merge\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * @internal\n */\nclass Explorer extends ExplorerBase_js_1.ExplorerBase {\n    async load(filepath) {\n        filepath = path_1.default.resolve(filepath);\n        const load = async () => {\n            return await this.config.transform(await this.#readConfiguration(filepath));\n        };\n        if (this.loadCache) {\n            return await (0, util_js_1.emplace)(this.loadCache, filepath, load);\n        }\n        return await load();\n    }\n    async search(from = '') {\n        if (this.config.metaConfigFilePath) {\n            this.loadingMetaConfig = true;\n            const config = await this.load(this.config.metaConfigFilePath);\n            this.loadingMetaConfig = false;\n            if (config && !config.isEmpty) {\n                return config;\n            }\n        }\n        from = path_1.default.resolve(from);\n        const dirs = this.#getDirs(from);\n        const firstDirIter = await dirs.next();\n        /* istanbul ignore if -- @preserve */\n        if (firstDirIter.done) {\n            // this should never happen\n            throw new Error(`Could not find any folders to iterate through (start from ${from})`);\n        }\n        let currentDir = firstDirIter.value;\n        const search = async () => {\n            /* istanbul ignore if -- @preserve */\n            if (await (0, util_js_1.isDirectory)(currentDir.path)) {\n                for (const filepath of this.getSearchPlacesForDir(currentDir, defaults_1.globalConfigSearchPlaces)) {\n                    try {\n                        const result = await this.#readConfiguration(filepath);\n                        if (result !== null &&\n                            !(result.isEmpty && this.config.ignoreEmptySearchPlaces)) {\n                            return await this.config.transform(result);\n                        }\n                    }\n                    catch (error) {\n                        if (error.code === 'ENOENT' ||\n                            error.code === 'EISDIR' ||\n                            error.code === 'ENOTDIR' ||\n                            error.code === 'EACCES') {\n                            continue;\n                        }\n                        throw error;\n                    }\n                }\n            }\n            const nextDirIter = await dirs.next();\n            if (!nextDirIter.done) {\n                currentDir = nextDirIter.value;\n                if (this.searchCache) {\n                    return await (0, util_js_1.emplace)(this.searchCache, currentDir.path, search);\n                }\n                return await search();\n            }\n            return await this.config.transform(null);\n        };\n        if (this.searchCache) {\n            return await (0, util_js_1.emplace)(this.searchCache, from, search);\n        }\n        return await search();\n    }\n    async #readConfiguration(filepath, importStack = []) {\n        const contents = await promises_1.default.readFile(filepath, { encoding: 'utf-8' });\n        return this.toCosmiconfigResult(filepath, await this.#loadConfigFileWithImports(filepath, contents, importStack));\n    }\n    async #loadConfigFileWithImports(filepath, contents, importStack) {\n        const loadedContent = await this.#loadConfiguration(filepath, contents);\n        if (!loadedContent || !(0, merge_1.hasOwn)(loadedContent, '$import')) {\n            return loadedContent;\n        }\n        const fileDirectory = path_1.default.dirname(filepath);\n        const { $import: imports, ...ownContent } = loadedContent;\n        const importPaths = Array.isArray(imports) ? imports : [imports];\n        const newImportStack = [...importStack, filepath];\n        this.validateImports(filepath, importPaths, newImportStack);\n        const importedConfigs = await Promise.all(importPaths.map(async (importPath) => {\n            const fullPath = path_1.default.resolve(fileDirectory, importPath);\n            const result = await this.#readConfiguration(fullPath, newImportStack);\n            return result?.config;\n        }));\n        return (0, merge_1.mergeAll)([...importedConfigs, ownContent], {\n            mergeArrays: this.config.mergeImportArrays,\n        });\n    }\n    async #loadConfiguration(filepath, contents) {\n        if (contents.trim() === '') {\n            return;\n        }\n        const extension = path_1.default.extname(filepath);\n        const loader = this.config.loaders[extension || 'noExt'] ??\n            this.config.loaders['default'];\n        if (!loader) {\n            throw new Error(`No loader specified for ${(0, ExplorerBase_js_1.getExtensionDescription)(extension)}`);\n        }\n        try {\n            const loadedContents = await loader(filepath, contents);\n            if (path_1.default.basename(filepath, extension) !== 'package') {\n                return loadedContents;\n            }\n            return ((0, util_js_1.getPropertyByPath)(loadedContents, this.config.packageProp ?? this.config.moduleName) ?? null);\n        }\n        catch (error) {\n            error.filepath = filepath;\n            throw error;\n        }\n    }\n    async #fileExists(path) {\n        try {\n            await promises_1.default.stat(path);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async *#getDirs(startDir) {\n        switch (this.config.searchStrategy) {\n            case 'none': {\n                // only check in the passed directory (defaults to working directory)\n                yield { path: startDir, isGlobalConfig: false };\n                return;\n            }\n            case 'project': {\n                let currentDir = startDir;\n                while (true) {\n                    yield { path: currentDir, isGlobalConfig: false };\n                    for (const ext of ['json', 'yaml']) {\n                        const packageFile = path_1.default.join(currentDir, `package.${ext}`);\n                        if (await this.#fileExists(packageFile)) {\n                            break;\n                        }\n                    }\n                    const parentDir = path_1.default.dirname(currentDir);\n                    /* istanbul ignore if -- @preserve */\n                    if (parentDir === currentDir) {\n                        // we're probably at the root of the directory structure\n                        break;\n                    }\n                    currentDir = parentDir;\n                }\n                return;\n            }\n            case 'global': {\n                yield* this.getGlobalDirs(startDir);\n            }\n        }\n    }\n}\nexports.Explorer = Explorer;\n//# sourceMappingURL=Explorer.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExplorerSync = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst defaults_1 = require(\"./defaults\");\nconst ExplorerBase_js_1 = require(\"./ExplorerBase.js\");\nconst merge_1 = require(\"./merge\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * @internal\n */\nclass ExplorerSync extends ExplorerBase_js_1.ExplorerBase {\n    load(filepath) {\n        filepath = path_1.default.resolve(filepath);\n        const load = () => {\n            return this.config.transform(this.#readConfiguration(filepath));\n        };\n        if (this.loadCache) {\n            return (0, util_js_1.emplace)(this.loadCache, filepath, load);\n        }\n        return load();\n    }\n    search(from = '') {\n        if (this.config.metaConfigFilePath) {\n            this.loadingMetaConfig = true;\n            const config = this.load(this.config.metaConfigFilePath);\n            this.loadingMetaConfig = false;\n            if (config && !config.isEmpty) {\n                return config;\n            }\n        }\n        from = path_1.default.resolve(from);\n        const dirs = this.#getDirs(from);\n        const firstDirIter = dirs.next();\n        /* istanbul ignore if -- @preserve */\n        if (firstDirIter.done) {\n            // this should never happen\n            throw new Error(`Could not find any folders to iterate through (start from ${from})`);\n        }\n        let currentDir = firstDirIter.value;\n        const search = () => {\n            /* istanbul ignore if -- @preserve */\n            if ((0, util_js_1.isDirectorySync)(currentDir.path)) {\n                for (const filepath of this.getSearchPlacesForDir(currentDir, defaults_1.globalConfigSearchPlacesSync)) {\n                    try {\n                        const result = this.#readConfiguration(filepath);\n                        if (result !== null &&\n                            !(result.isEmpty && this.config.ignoreEmptySearchPlaces)) {\n                            return this.config.transform(result);\n                        }\n                    }\n                    catch (error) {\n                        if (error.code === 'ENOENT' ||\n                            error.code === 'EISDIR' ||\n                            error.code === 'ENOTDIR' ||\n                            error.code === 'EACCES') {\n                            continue;\n                        }\n                        throw error;\n                    }\n                }\n            }\n            const nextDirIter = dirs.next();\n            if (!nextDirIter.done) {\n                currentDir = nextDirIter.value;\n                if (this.searchCache) {\n                    return (0, util_js_1.emplace)(this.searchCache, currentDir.path, search);\n                }\n                return search();\n            }\n            return this.config.transform(null);\n        };\n        if (this.searchCache) {\n            return (0, util_js_1.emplace)(this.searchCache, from, search);\n        }\n        return search();\n    }\n    #readConfiguration(filepath, importStack = []) {\n        const contents = fs_1.default.readFileSync(filepath, 'utf8');\n        return this.toCosmiconfigResult(filepath, this.#loadConfigFileWithImports(filepath, contents, importStack));\n    }\n    #loadConfigFileWithImports(filepath, contents, importStack) {\n        const loadedContent = this.#loadConfiguration(filepath, contents);\n        if (!loadedContent || !(0, merge_1.hasOwn)(loadedContent, '$import')) {\n            return loadedContent;\n        }\n        const fileDirectory = path_1.default.dirname(filepath);\n        const { $import: imports, ...ownContent } = loadedContent;\n        const importPaths = Array.isArray(imports) ? imports : [imports];\n        const newImportStack = [...importStack, filepath];\n        this.validateImports(filepath, importPaths, newImportStack);\n        const importedConfigs = importPaths.map((importPath) => {\n            const fullPath = path_1.default.resolve(fileDirectory, importPath);\n            const result = this.#readConfiguration(fullPath, newImportStack);\n            return result?.config;\n        });\n        return (0, merge_1.mergeAll)([...importedConfigs, ownContent], {\n            mergeArrays: this.config.mergeImportArrays,\n        });\n    }\n    #loadConfiguration(filepath, contents) {\n        if (contents.trim() === '') {\n            return;\n        }\n        const extension = path_1.default.extname(filepath);\n        const loader = this.config.loaders[extension || 'noExt'] ??\n            this.config.loaders['default'];\n        if (!loader) {\n            throw new Error(`No loader specified for ${(0, ExplorerBase_js_1.getExtensionDescription)(extension)}`);\n        }\n        try {\n            const loadedContents = loader(filepath, contents);\n            if (path_1.default.basename(filepath, extension) !== 'package') {\n                return loadedContents;\n            }\n            return ((0, util_js_1.getPropertyByPath)(loadedContents, this.config.packageProp ?? this.config.moduleName) ?? null);\n        }\n        catch (error) {\n            error.filepath = filepath;\n            throw error;\n        }\n    }\n    #fileExists(path) {\n        try {\n            fs_1.default.statSync(path);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    *#getDirs(startDir) {\n        switch (this.config.searchStrategy) {\n            case 'none': {\n                // there is no next dir\n                yield { path: startDir, isGlobalConfig: false };\n                return;\n            }\n            case 'project': {\n                let currentDir = startDir;\n                while (true) {\n                    yield { path: currentDir, isGlobalConfig: false };\n                    for (const ext of ['json', 'yaml']) {\n                        const packageFile = path_1.default.join(currentDir, `package.${ext}`);\n                        if (this.#fileExists(packageFile)) {\n                            break;\n                        }\n                    }\n                    const parentDir = path_1.default.dirname(currentDir);\n                    /* istanbul ignore if -- @preserve */\n                    if (parentDir === currentDir) {\n                        // we're probably at the root of the directory structure\n                        break;\n                    }\n                    currentDir = parentDir;\n                }\n                return;\n            }\n            case 'global': {\n                yield* this.getGlobalDirs(startDir);\n            }\n        }\n    }\n    /**\n     * @deprecated Use {@link ExplorerSync.prototype.load}.\n     */\n    /* istanbul ignore next */\n    loadSync(filepath) {\n        return this.load(filepath);\n    }\n    /**\n     * @deprecated Use {@link ExplorerSync.prototype.search}.\n     */\n    /* istanbul ignore next */\n    searchSync(from = '') {\n        return this.search(from);\n    }\n}\nexports.ExplorerSync = ExplorerSync;\n//# sourceMappingURL=ExplorerSync.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultLoadersSync = exports.defaultLoaders = exports.globalConfigSearchPlacesSync = exports.globalConfigSearchPlaces = exports.getDefaultSearchPlacesSync = exports.getDefaultSearchPlaces = exports.cosmiconfigSync = exports.cosmiconfig = void 0;\nconst defaults_1 = require(\"./defaults\");\nObject.defineProperty(exports, \"defaultLoaders\", { enumerable: true, get: function () { return defaults_1.defaultLoaders; } });\nObject.defineProperty(exports, \"defaultLoadersSync\", { enumerable: true, get: function () { return defaults_1.defaultLoadersSync; } });\nObject.defineProperty(exports, \"getDefaultSearchPlaces\", { enumerable: true, get: function () { return defaults_1.getDefaultSearchPlaces; } });\nObject.defineProperty(exports, \"getDefaultSearchPlacesSync\", { enumerable: true, get: function () { return defaults_1.getDefaultSearchPlacesSync; } });\nObject.defineProperty(exports, \"globalConfigSearchPlaces\", { enumerable: true, get: function () { return defaults_1.globalConfigSearchPlaces; } });\nObject.defineProperty(exports, \"globalConfigSearchPlacesSync\", { enumerable: true, get: function () { return defaults_1.globalConfigSearchPlacesSync; } });\nconst Explorer_js_1 = require(\"./Explorer.js\");\nconst ExplorerSync_js_1 = require(\"./ExplorerSync.js\");\nconst util_1 = require(\"./util\");\nconst identity = function identity(x) {\n    return x;\n};\nfunction getUserDefinedOptionsFromMetaConfig() {\n    const metaExplorer = new ExplorerSync_js_1.ExplorerSync({\n        moduleName: 'cosmiconfig',\n        stopDir: process.cwd(),\n        searchPlaces: defaults_1.metaSearchPlaces,\n        ignoreEmptySearchPlaces: false,\n        applyPackagePropertyPathToConfiguration: true,\n        loaders: defaults_1.defaultLoaders,\n        transform: identity,\n        cache: true,\n        metaConfigFilePath: null,\n        mergeImportArrays: true,\n        mergeSearchPlaces: true,\n        searchStrategy: 'none',\n    });\n    const metaConfig = metaExplorer.search();\n    if (!metaConfig) {\n        return null;\n    }\n    if (metaConfig.config?.loaders) {\n        throw new Error('Can not specify loaders in meta config file');\n    }\n    if (metaConfig.config?.searchStrategy) {\n        throw new Error('Can not specify searchStrategy in meta config file');\n    }\n    const overrideOptions = {\n        mergeSearchPlaces: true,\n        ...(metaConfig.config ?? {}),\n    };\n    return {\n        config: (0, util_1.removeUndefinedValuesFromObject)(overrideOptions),\n        filepath: metaConfig.filepath,\n    };\n}\nfunction getResolvedSearchPlaces(moduleName, toolDefinedSearchPlaces, userConfiguredOptions) {\n    const userConfiguredSearchPlaces = userConfiguredOptions.searchPlaces?.map((path) => path.replace('{name}', moduleName));\n    if (userConfiguredOptions.mergeSearchPlaces) {\n        return [...(userConfiguredSearchPlaces ?? []), ...toolDefinedSearchPlaces];\n    }\n    return (userConfiguredSearchPlaces ??\n        /* istanbul ignore next */ toolDefinedSearchPlaces);\n}\nfunction mergeOptionsBase(moduleName, defaults, options) {\n    const userDefinedConfig = getUserDefinedOptionsFromMetaConfig();\n    if (!userDefinedConfig) {\n        return {\n            ...defaults,\n            ...(0, util_1.removeUndefinedValuesFromObject)(options),\n            loaders: {\n                ...defaults.loaders,\n                ...options.loaders,\n            },\n        };\n    }\n    const userConfiguredOptions = userDefinedConfig.config;\n    const toolDefinedSearchPlaces = options.searchPlaces ?? defaults.searchPlaces;\n    return {\n        ...defaults,\n        ...(0, util_1.removeUndefinedValuesFromObject)(options),\n        metaConfigFilePath: userDefinedConfig.filepath,\n        ...userConfiguredOptions,\n        searchPlaces: getResolvedSearchPlaces(moduleName, toolDefinedSearchPlaces, userConfiguredOptions),\n        loaders: {\n            ...defaults.loaders,\n            ...options.loaders,\n        },\n    };\n}\nfunction validateOptions(options) {\n    if (options.searchStrategy != null &&\n        options.searchStrategy !== 'global' &&\n        options.stopDir) {\n        throw new Error('Can not supply `stopDir` option with `searchStrategy` other than \"global\"');\n    }\n}\nfunction mergeOptions(moduleName, options) {\n    validateOptions(options);\n    const defaults = {\n        moduleName,\n        searchPlaces: (0, defaults_1.getDefaultSearchPlaces)(moduleName),\n        ignoreEmptySearchPlaces: true,\n        cache: true,\n        transform: identity,\n        loaders: defaults_1.defaultLoaders,\n        metaConfigFilePath: null,\n        mergeImportArrays: true,\n        mergeSearchPlaces: true,\n        searchStrategy: options.stopDir ? 'global' : 'none',\n    };\n    return mergeOptionsBase(moduleName, defaults, options);\n}\nfunction mergeOptionsSync(moduleName, options) {\n    validateOptions(options);\n    const defaults = {\n        moduleName,\n        searchPlaces: (0, defaults_1.getDefaultSearchPlacesSync)(moduleName),\n        ignoreEmptySearchPlaces: true,\n        cache: true,\n        transform: identity,\n        loaders: defaults_1.defaultLoadersSync,\n        metaConfigFilePath: null,\n        mergeImportArrays: true,\n        mergeSearchPlaces: true,\n        searchStrategy: options.stopDir ? 'global' : 'none',\n    };\n    return mergeOptionsBase(moduleName, defaults, options);\n}\nfunction cosmiconfig(moduleName, options = {}) {\n    const normalizedOptions = mergeOptions(moduleName, options);\n    const explorer = new Explorer_js_1.Explorer(normalizedOptions);\n    return {\n        search: explorer.search.bind(explorer),\n        load: explorer.load.bind(explorer),\n        clearLoadCache: explorer.clearLoadCache.bind(explorer),\n        clearSearchCache: explorer.clearSearchCache.bind(explorer),\n        clearCaches: explorer.clearCaches.bind(explorer),\n    };\n}\nexports.cosmiconfig = cosmiconfig;\nfunction cosmiconfigSync(moduleName, options = {}) {\n    const normalizedOptions = mergeOptionsSync(moduleName, options);\n    const explorerSync = new ExplorerSync_js_1.ExplorerSync(normalizedOptions);\n    return {\n        search: explorerSync.search.bind(explorerSync),\n        load: explorerSync.load.bind(explorerSync),\n        clearLoadCache: explorerSync.clearLoadCache.bind(explorerSync),\n        clearSearchCache: explorerSync.clearSearchCache.bind(explorerSync),\n        clearCaches: explorerSync.clearCaches.bind(explorerSync),\n    };\n}\nexports.cosmiconfigSync = cosmiconfigSync;\n//# sourceMappingURL=index.js.map","import path from 'node:path';\n\nexport const Logger = {\n  serverListen(port: number) {\n    console.log('');\n    console.log(`  \\x1b[1;32m${__APP_NAME__.toUpperCase()} v${__APP_VERSION__}\\x1b[0m`);\n    console.log(`  \\x1b[0;37mDemo Server\\x1b[0m http://localhost:${port}`);\n    console.log('');\n  },\n  route(method: string, url: string) {\n    console.log(`\\x1b[0;33m${method}:\\x1b[0m \\x1b[0;37m${url}\\x1b[0m`);\n  },\n  changes(file: string) {\n    console.log(`\\x1b[0;31mCHANGED:\\x1b[0m \\x1b[0;37m${file}\\x1b[0m`);\n  },\n  created(file: string) {\n    file = path.relative(process.cwd(), file);\n    const dirname = path.dirname(file);\n    const basename = path.basename(file);\n    const extname = path.extname(file);\n\n    let color: string;\n    switch (extname) {\n      case '.css':\n        color = '\\x1b[0;35m';\n        break;\n      default:\n        color = '\\x1b[0;32m';\n        break;\n    }\n\n    console.log(`\\x1b[0;37m${dirname}${path.sep}\\x1b[0m${color}${basename}\\x1b[0m`);\n  },\n  done(duration: number, count: number) {\n    console.log(`\\x1b[0;32m✓ built in ${duration}ms\\x1b[0m`);\n    console.log(`\\x1b[0;32m✓ generated ${count} icons\\x1b[0m`);\n  },\n  warn(message: string): void {\n    console.log(`\\x1b[0;93m🛆 ${message}\\x1b[0m`);\n  }\n};","import { cosmiconfig } from 'cosmiconfig';\nimport { Logger } from './logger.ts';\nimport { AppConfig, AppConfigKeys } from '../types/app-config.ts';\n\nconst FIELDS: AppConfigKeys[] = ['input', 'output', 'name', 'fontUrl', 'prefix', 'types', 'port'];\n\nconst Seeker = cosmiconfig(__APP_NAME__, {\n  searchStrategy: 'project',\n});\n\nexport async function searchConfig(cwd: string): Promise<Partial<AppConfig | undefined>> {\n  try {\n    const result = await Seeker.search(cwd);\n    return !result?.isEmpty && result?.config ? result?.config?.default : undefined;\n  } catch(error: any) {\n    Logger.warn(`Config file not found, default config will be used.`);\n    return undefined;\n  }\n}\n\nexport async function loadConfig(path: string): Promise<Partial<AppConfig | undefined>> {\n  try {\n    const result = await Seeker.load(path);\n    return !result?.isEmpty && result?.config ? result?.config?.default : undefined;\n  } catch {\n    Logger.warn(`Config file ${path} not found.`);\n    return undefined;\n  }\n}\n\nexport function mergeConfig(required: AppConfigKeys[], ..._configs: Partial<AppConfig | undefined>[]): Required<AppConfig> {\n  const configs = [..._configs].reverse();\n  const result: Partial<AppConfig> = {};\n\n  for (const key of required) {\n    for (let i = 0; i < configs.length; i++) {\n      const config = configs[i];\n\n      if (config && config?.[key] != null) {\n        result[key] = config![key] as any;\n        break;\n      }\n    }\n    if (result[key] == null && required.indexOf(key) >= 0) {\n      throw new TypeError(`no config property ${key} found.`);\n    }\n  }\n\n  return result as Required<AppConfig>;\n}","import { BufferWithMeta } from '../types/types.ts';\n\nexport function populateMetadata<Meta>(buffer: Buffer, metadata: Meta): BufferWithMeta<Meta> {\n  Object.defineProperty(buffer, 'metadata', {\n    value: Object.freeze({ ...metadata }),\n    enumerable: true,\n    writable: false,\n    configurable: false,\n  });\n  return buffer as BufferWithMeta<Meta>;\n}","export const SYMBOL_SIZE = 512;\nexport const SHAPE_SIZE = 480;\n\nexport const START_UNICODE = 0xea01;\n\nexport const LOGO_ICON =\n`<svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"m399.129 273.496c22.1079-21.0975 57.0143-20.6894 78.6229 0.91917s22.0167 56.5151 0.91917 78.6229l-132.389 131.818c-5.20907 5.21063-12.2746 8.13877-19.6424 8.14036h-40.2851c-15.344 0-27.7828-12.4388-27.7828-27.7828v-40.2573c9e-3 -7.37183 2.94732-14.4379 8.16814-19.6424z\" fill=\"#0073e5\" stroke-width=\"25.4831\"/>\n  <path d=\"m137.045 15.4143c-66.8513 0-121.045 54.1937-121.045 121.045v216.912c0 66.8513 54.1937 121.045 121.045 121.045h99.8682c1.78381 0 3.23635-1.5035 3.23635-3.3128v-36.925c-3e-3 -16.8975 6.70681-33.1042 18.6536-45.0541l122.93-122.93c19.8872-19.9293 47.9775-29.3651 75.8631-25.4831 8.66425 1.22319 17.4304-4.94371 17.4304-13.7354v-90.5159c0-66.8513-54.1937-121.045-121.045-121.045zm-4.98513 135.771c0-13.6476 11.0636-24.7112 24.7112-24.7112h177.46c13.6476 0 24.7112 11.0636 24.7112 24.7112v22.1742c0.0279 23.0212-28.6677 33.5704-43.5576 16.0129-5.46941-6.45787-12.1909-13.5089-20.6256-13.5089h-8.07233c-9.0984 0-16.4741 7.37571-16.4741 16.4741v84.0181c0 8.96193 7.94054 15.947 14.9585 21.5482 18.3498 14.5428 8.02693 44.0747-15.3869 44.019h-47.9069c-23.2624-1e-3 -33.6362-29.2149-15.5846-43.8872 6.85325-5.56826 14.4973-12.4544 14.4973-21.2846v-84.3807c0-9.0984-7.37571-16.4741-16.4741-16.4741h-8.10529c-8.43477 0-15.1562 7.018-20.6256 13.4759-14.8446 17.6924-43.6858 7.08159-43.5247-16.0129z\" clip-rule=\"evenodd\" fill=\"#c64600\" fill-rule=\"evenodd\" stroke-width=\"25.4831\"/>\n  <path d=\"m193.918 140.523c-13.0736 0.01-26.1471 0.0195-39.2207 0.0293-2.39611 0.80565-4.35694 2.56337-5.96841 4.45876-1.57849 1.98331-2.23664 4.50594-2.43462 6.99188-0.35997 3.99233-0.21373 8.00984-0.28506 12.0138 0.0161 4.19558-0.31514 8.44254 0.45625 12.5926 0.32688 2.13452 1.44288 4.20766 3.34286 5.32476 2.44995 1.51631 5.35502 2.59218 8.27056 2.28589 2.66825-0.55452 4.6677-2.58918 6.63699-4.33083 3.64029-3.40632 7.16826-6.94848 11.0615-10.0712 2.74458-2.19045 5.82263-3.95782 9.13562-5.13284 3.43454-1.37054 7.10274-2.11709 10.7988-2.21436 4.2008-0.20843 8.41644-0.15777 12.6147 0.0625 6.77438 0.62639 13.1853 3.82992 18.1122 8.46399 5.29601 5.08783 8.42689 12.3615 8.37842 19.716 0.0284 23.7689-0.0313 47.5389-0.0162 71.3082-0.0284 5.60665 0.0343 11.2181-0.16828 16.8209-0.41474 5.77723-2.33514 11.4826-5.7902 16.1583-2.16774 3.30523-4.89035 6.23665-8.03319 8.63413-2.97141 2.55825-6.41576 4.76917-8.5024 8.17783-2.31941 4.26262-1.62116 10.1426 2.117 13.3881 1.99451 1.87975 4.65403 3.01266 7.39855 3.09246 5.88665 0.30426 11.7869 0.15882 17.6791 0.12407 8.17952-0.15812 16.3611 0.0516 24.5402-0.10271 1.54399-0.0515 2.8765-0.10236 4.42114-0.21629 1.5309-0.11959 3.08628-0.21039 4.62314-0.68268 1.83826-0.49552 3.38964-1.63166 4.79544-2.88948 1.23267-1.10292 1.93703-2.04516 2.46564-3.91802 0.62675-2.22057 0.51726-5.45378-0.4054-7.38341-1.42897-2.98852-4.82902-5.9418-6.76839-7.7659-4.65484-4.06965-8.45751-5.97767-11.7532-11.3208-3.1234-4.95944-4.96535-10.7273-5.20035-16.5894-0.29927-5.71053-0.0762-11.4326-0.0912-17.148 0.11388-21.819-0.0208-43.6387 0.0883-65.4576 0.10697-6.05813 0.76975-12.3737 3.88719-17.7027 1.64766-2.75659 3.68379-5.29802 6.03355-7.48699 3.63711-3.16916 8.1378-5.20656 12.7374-6.54528 5.55298-1.55816 11.4027-1.63966 17.1029-1.01458 4.99676 0.53143 10.0723 1.57729 14.4721 4.10257 2.94064 1.81605 5.54395 4.1173 8.16969 6.3503 2.99377 2.58274 5.76843 5.40187 8.5305 8.22632 1.20914 1.12647 2.42774 2.38818 4.00937 2.95981 2.08313 0.49874 4.26749 0.18619 6.34225-0.19327 2.03101-0.51741 3.56528-2.03915 4.81672-3.63997 0.96788-1.09636 1.58161-2.4632 1.72388-3.91937 0.73497-4.54241 0.62019-9.16571 0.71737-13.7521 0.0147-4.04295 0.10261-8.10151-0.27596-12.1303-0.29954-2.3782-1.08888-4.86362-3.00762-6.43345-1.94871-2.02297-4.68626-3.44015-7.55153-3.23473-46.6688-0.0298-93.3378-0.0297-140.007-6e-3z\" fill=\"#fff8f4\" style=\"paint-order:fill markers stroke\"/>\n</svg>`;","import { SymbolMetadata } from '../types/types.ts';\nimport { readdir } from 'node:fs/promises';\nimport { extname, join } from 'node:path';\nimport { SHAPE_SIZE, START_UNICODE, SYMBOL_SIZE } from './constants.ts';\n\nconst testExpression = /(^|\\/|\\\\)(?:((?:u[0-9a-f]{4,6},?)+)-)(.+)\\.svg$/i;\n\nexport function compareFiles(fileA: string, fileB: string): -1 | 0 | 1 {\n  const hasUnicodeA = testExpression.test(fileA);\n  const hasUnicodeB = testExpression.test(fileB);\n\n  if (hasUnicodeA == hasUnicodeB) {\n    // just compare alphabetically\n    const fileA_ = fileA.slice(0, fileA.lastIndexOf('.'));\n    const fileB_ = fileB.slice(0, fileB.lastIndexOf('.'));\n    return fileA_ < fileB_ ? -1 : 1;\n  } else {\n    // map true to 0, because we want it to be first\n    return ((hasUnicodeA ? 0 : 1) - (hasUnicodeB ? 0 : 1)) as -1 | 0 | 1;\n  }\n}\n\nexport async function readFiles(path: string, ext = 'svg'): Promise<SymbolMetadata[]> {\n  const files = await readdir(path, { encoding: 'utf8' });\n  let index = 0;\n\n  files.sort(compareFiles);\n\n  return files.reduce<SymbolMetadata[]>((acc, filename) => {\n    if (filename.endsWith(`.${ext}`)) {\n      const name = filename.replace(extname(filename), '');\n      const id = `${name}${(0 === index ? '' : '-' + index)}`;\n      const code = START_UNICODE + index;\n      const unicode = `&#x${(code).toString(16).toUpperCase()};`;\n\n      acc.push({\n        id: id,\n        name: name,\n        code: code,\n        unicode: unicode,\n        file: join(path, filename),\n        size: SYMBOL_SIZE,\n        padding: (SYMBOL_SIZE - SHAPE_SIZE) / 2\n      });\n\n      index++;\n    }\n\n    return acc;\n  }, []);\n}","import { readdir } from 'node:fs/promises';\nimport { extname, join } from 'node:path';\nimport { FileMetadata } from '../types/types.ts';\nimport { Readable } from 'node:stream';\nimport fs from 'node:fs';\nimport { populateMetadata } from '../utils/populate-metadata.ts';\nimport { compareFiles } from '../utils/read-files.ts';\n\nexport class StreamDirectoryReader extends Readable {\n\n  private readonly _input: string;\n\n  private _files?: Promise<FileMetadata[]>;\n\n  private _fileIndex = 0;\n\n  constructor(input: string) {\n    super({ objectMode: true });\n    this._input = input;\n  }\n\n  async _getIcons(): Promise<FileMetadata[]> {\n    if (!this._files) {\n      this._files = readdir(this._input, { encoding: 'utf8' })\n        .then(files => files.sort(compareFiles))\n        .then(files => {\n          let index = 0;\n          return files.reduce<FileMetadata[]>((acc, filename) => {\n            if (filename.endsWith(`.svg`)) {\n              acc.push({\n                name: filename.replace(extname(filename), ''),\n                index: index,\n                file: join(this._input, filename),\n              });\n              index++;\n            }\n\n            return acc;\n          }, []);\n        });\n    }\n    return this._files;\n  }\n\n  async _read() {\n    const files = await this._getIcons();\n    const file = files[this._fileIndex];\n    if (!file) {\n      return this.push(null);\n    }\n\n    fs.readFile(file.file, (error, buffer: Buffer) => {\n      if (error) {\n        return this.destroy(error);\n      }\n\n      this.push(populateMetadata(buffer, file));\n      this._fileIndex++;\n    });\n  }\n}","export default new Proxy({}, {\n  get(_, key) {\n    throw new Error(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code.  See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n  }\n})","export default new Proxy({}, {\n  get(_, key) {\n    throw new Error(`Module \"string_decoder\" has been externalized for browser compatibility. Cannot access \"string_decoder.${key}\" in client code.  See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n  }\n})",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // disallow unquoted attribute values if not otherwise configured\n    // and strict mode is true\n    if (parser.opt.unquotedAttributeValues === undefined) {\n      parser.opt.unquotedAttributeValues = !strict;\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n  if (!Stream) Stream = function () {}\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n            continue;\n          }\n\n          if (parser.doctype && parser.doctype !== true && parser.sgmlDecl) {\n            parser.state = S.DOCTYPE_DTD\n            parser.doctype += '<!' + parser.sgmlDecl + c\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          if (c === ']') {\n            parser.doctype += c\n            parser.state = S.DOCTYPE\n          } else if (c === '<') {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else if (isQuote(c)) {\n            parser.doctype += c\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          } else {\n            parser.doctype += c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else if (parser.doctype && parser.doctype !== true) {\n            parser.state = S.DOCTYPE_DTD\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            if (!parser.opt.unquotedAttributeValues) {\n              error(parser, 'Unquoted attribute value')\n            }\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            var parsedEntity = parseEntity(parser)\n            if (parser.opt.unparsedEntities && !Object.values(sax.XML_ENTITIES).includes(parsedEntity)) {\n              parser.entity = ''\n              parser.state = returnState\n              parser.write(parsedEntity)\n            } else {\n              parser[buffer] += parsedEntity\n              parser.entity = ''\n              parser.state = returnState\n            }\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default: /* istanbul ignore next */ {\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n        }\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","import { SVGPathData } from './SVGPathData.js';\n// Encode SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n// Private consts : Char groups\nconst WSP = ' ';\nexport function encodeSVGPath(commands) {\n    let str = '';\n    if (!Array.isArray(commands)) {\n        commands = [commands];\n    }\n    for (let i = 0; i < commands.length; i++) {\n        const command = commands[i];\n        if (command.type === SVGPathData.CLOSE_PATH) {\n            str += 'z';\n        }\n        else if (command.type === SVGPathData.HORIZ_LINE_TO) {\n            str += (command.relative ? 'h' : 'H') + command.x;\n        }\n        else if (command.type === SVGPathData.VERT_LINE_TO) {\n            str += (command.relative ? 'v' : 'V') + command.y;\n        }\n        else if (command.type === SVGPathData.MOVE_TO) {\n            str += (command.relative ? 'm' : 'M') + command.x + WSP + command.y;\n        }\n        else if (command.type === SVGPathData.LINE_TO) {\n            str += (command.relative ? 'l' : 'L') + command.x + WSP + command.y;\n        }\n        else if (command.type === SVGPathData.CURVE_TO) {\n            str +=\n                (command.relative ? 'c' : 'C') +\n                    command.x1 +\n                    WSP +\n                    command.y1 +\n                    WSP +\n                    command.x2 +\n                    WSP +\n                    command.y2 +\n                    WSP +\n                    command.x +\n                    WSP +\n                    command.y;\n        }\n        else if (command.type === SVGPathData.SMOOTH_CURVE_TO) {\n            str +=\n                (command.relative ? 's' : 'S') +\n                    command.x2 +\n                    WSP +\n                    command.y2 +\n                    WSP +\n                    command.x +\n                    WSP +\n                    command.y;\n        }\n        else if (command.type === SVGPathData.QUAD_TO) {\n            str +=\n                (command.relative ? 'q' : 'Q') +\n                    command.x1 +\n                    WSP +\n                    command.y1 +\n                    WSP +\n                    command.x +\n                    WSP +\n                    command.y;\n        }\n        else if (command.type === SVGPathData.SMOOTH_QUAD_TO) {\n            str += (command.relative ? 't' : 'T') + command.x + WSP + command.y;\n        }\n        else if (command.type === SVGPathData.ARC) {\n            str +=\n                (command.relative ? 'a' : 'A') +\n                    command.rX +\n                    WSP +\n                    command.rY +\n                    WSP +\n                    command.xRot +\n                    WSP +\n                    +command.lArcFlag +\n                    WSP +\n                    +command.sweepFlag +\n                    WSP +\n                    command.x +\n                    WSP +\n                    command.y;\n        }\n        else {\n            // Unknown command\n            throw new Error(`Unexpected command type \"${command?.type}\" at index ${i}.`);\n        }\n    }\n    return str;\n}\n//# sourceMappingURL=SVGPathDataEncoder.js.map","import { SVGPathData } from './SVGPathData.js';\nexport function rotate([x, y], rad) {\n    return [\n        x * Math.cos(rad) - y * Math.sin(rad),\n        x * Math.sin(rad) + y * Math.cos(rad),\n    ];\n}\nconst DEBUG_CHECK_NUMBERS = true;\nexport function assertNumbers(...numbers) {\n    if (DEBUG_CHECK_NUMBERS) {\n        for (let i = 0; i < numbers.length; i++) {\n            if ('number' !== typeof numbers[i]) {\n                throw new Error(`assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`);\n            }\n        }\n    }\n    return true;\n}\nconst PI = Math.PI;\n/**\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n * Fixes rX and rY.\n * Ensures lArcFlag and sweepFlag are 0 or 1\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\n */\nexport function annotateArcCommand(c, x1, y1) {\n    c.lArcFlag = 0 === c.lArcFlag ? 0 : 1;\n    c.sweepFlag = 0 === c.sweepFlag ? 0 : 1;\n    // tslint:disable-next-line\n    let { rX, rY } = c;\n    const { x, y } = c;\n    rX = Math.abs(c.rX);\n    rY = Math.abs(c.rY);\n    const [x1_, y1_] = rotate([(x1 - x) / 2, (y1 - y) / 2], (-c.xRot / 180) * PI);\n    const testValue = Math.pow(x1_, 2) / Math.pow(rX, 2) + Math.pow(y1_, 2) / Math.pow(rY, 2);\n    if (1 < testValue) {\n        rX *= Math.sqrt(testValue);\n        rY *= Math.sqrt(testValue);\n    }\n    c.rX = rX;\n    c.rY = rY;\n    const c_ScaleTemp = Math.pow(rX, 2) * Math.pow(y1_, 2) + Math.pow(rY, 2) * Math.pow(x1_, 2);\n    const c_Scale = (c.lArcFlag !== c.sweepFlag ? 1 : -1) *\n        Math.sqrt(Math.max(0, (Math.pow(rX, 2) * Math.pow(rY, 2) - c_ScaleTemp) / c_ScaleTemp));\n    const cx_ = ((rX * y1_) / rY) * c_Scale;\n    const cy_ = ((-rY * x1_) / rX) * c_Scale;\n    const cRot = rotate([cx_, cy_], (c.xRot / 180) * PI);\n    c.cX = cRot[0] + (x1 + x) / 2;\n    c.cY = cRot[1] + (y1 + y) / 2;\n    c.phi1 = Math.atan2((y1_ - cy_) / rY, (x1_ - cx_) / rX);\n    c.phi2 = Math.atan2((-y1_ - cy_) / rY, (-x1_ - cx_) / rX);\n    if (0 === c.sweepFlag && c.phi2 > c.phi1) {\n        c.phi2 -= 2 * PI;\n    }\n    if (1 === c.sweepFlag && c.phi2 < c.phi1) {\n        c.phi2 += 2 * PI;\n    }\n    c.phi1 *= 180 / PI;\n    c.phi2 *= 180 / PI;\n}\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n */\nexport function intersectionUnitCircleLine(a, b, c) {\n    assertNumbers(a, b, c);\n    // cf. pqFormula\n    const termSqr = a * a + b * b - c * c;\n    if (0 > termSqr) {\n        return [];\n    }\n    else if (0 === termSqr) {\n        return [[(a * c) / (a * a + b * b), (b * c) / (a * a + b * b)]];\n    }\n    const term = Math.sqrt(termSqr);\n    return [\n        [\n            (a * c + b * term) / (a * a + b * b),\n            (b * c - a * term) / (a * a + b * b),\n        ],\n        [\n            (a * c - b * term) / (a * a + b * b),\n            (b * c + a * term) / (a * a + b * b),\n        ],\n    ];\n}\nexport const DEG = Math.PI / 180;\nexport function lerp(a, b, t) {\n    return (1 - t) * a + t * b;\n}\nexport function arcAt(c, x1, x2, phiDeg) {\n    return (c + Math.cos((phiDeg / 180) * PI) * x1 + Math.sin((phiDeg / 180) * PI) * x2);\n}\nexport function bezierRoot(x0, x1, x2, x3) {\n    const EPS = 1e-6;\n    const x01 = x1 - x0;\n    const x12 = x2 - x1;\n    const x23 = x3 - x2;\n    const a = 3 * x01 + 3 * x23 - 6 * x12;\n    const b = (x12 - x01) * 6;\n    const c = 3 * x01;\n    // solve a * t² + b * t + c = 0\n    if (Math.abs(a) < EPS) {\n        // equivalent to b * t + c =>\n        return [-c / b];\n    }\n    return pqFormula(b / a, c / a, EPS);\n}\nexport function bezierAt(x0, x1, x2, x3, t) {\n    // console.log(x0, y0, x1, y1, x2, y2, x3, y3, t)\n    const s = 1 - t;\n    const c0 = s * s * s;\n    const c1 = 3 * s * s * t;\n    const c2 = 3 * s * t * t;\n    const c3 = t * t * t;\n    return x0 * c0 + x1 * c1 + x2 * c2 + x3 * c3;\n}\nfunction pqFormula(p, q, PRECISION = 1e-6) {\n    // 4 times the discriminant:in\n    const discriminantX4 = (p * p) / 4 - q;\n    if (discriminantX4 < -PRECISION) {\n        return [];\n    }\n    else if (discriminantX4 <= PRECISION) {\n        return [-p / 2];\n    }\n    const root = Math.sqrt(discriminantX4);\n    return [-(p / 2) - root, -(p / 2) + root];\n}\nexport function a2c(arc, x0, y0) {\n    if (!arc.cX) {\n        annotateArcCommand(arc, x0, y0);\n    }\n    const phiMin = Math.min(arc.phi1, arc.phi2), phiMax = Math.max(arc.phi1, arc.phi2), deltaPhi = phiMax - phiMin;\n    const partCount = Math.ceil(deltaPhi / 90);\n    const result = new Array(partCount);\n    let prevX = x0, prevY = y0;\n    for (let i = 0; i < partCount; i++) {\n        const phiStart = lerp(arc.phi1, arc.phi2, i / partCount);\n        const phiEnd = lerp(arc.phi1, arc.phi2, (i + 1) / partCount);\n        const deltaPhi = phiEnd - phiStart;\n        const f = (4 / 3) * Math.tan((deltaPhi * DEG) / 4);\n        // x1/y1, x2/y2 and x/y coordinates on the unit circle for phiStart/phiEnd\n        const [x1, y1] = [\n            Math.cos(phiStart * DEG) - f * Math.sin(phiStart * DEG),\n            Math.sin(phiStart * DEG) + f * Math.cos(phiStart * DEG),\n        ];\n        const [x, y] = [Math.cos(phiEnd * DEG), Math.sin(phiEnd * DEG)];\n        const [x2, y2] = [\n            x + f * Math.sin(phiEnd * DEG),\n            y - f * Math.cos(phiEnd * DEG),\n        ];\n        const command = {\n            relative: arc.relative,\n            type: SVGPathData.CURVE_TO,\n        };\n        const transform = (x, y) => {\n            const [xTemp, yTemp] = rotate([x * arc.rX, y * arc.rY], arc.xRot);\n            return [arc.cX + xTemp, arc.cY + yTemp];\n        };\n        [command.x1, command.y1] = transform(x1, y1);\n        [command.x2, command.y2] = transform(x2, y2);\n        [command.x, command.y] = transform(x, y);\n        if (arc.relative) {\n            command.x1 -= prevX;\n            command.y1 -= prevY;\n            command.x2 -= prevX;\n            command.y2 -= prevY;\n            command.x -= prevX;\n            command.y -= prevY;\n        }\n        [prevX, prevY] = [command.x, command.y];\n        result[i] = command;\n    }\n    return result;\n}\n//# sourceMappingURL=mathUtils.js.map","/* eslint @typescript-eslint/no-explicit-any:0 */\n// Transform SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\nimport { a2c, annotateArcCommand, arcAt, assertNumbers, bezierAt, bezierRoot, intersectionUnitCircleLine, } from './mathUtils.js';\nimport { SVGPathData } from './SVGPathData.js';\n// Predefined transforming functions\n// Rounds commands values\nfunction ROUND(roundVal = 1e13) {\n    assertNumbers(roundVal);\n    function rf(val) {\n        return Math.round(val * roundVal) / roundVal;\n    }\n    return function round(command) {\n        if ('x1' in command && 'undefined' !== typeof command.x1) {\n            command.x1 = rf(command.x1);\n        }\n        if ('y1' in command && 'undefined' !== typeof command.y1) {\n            command.y1 = rf(command.y1);\n        }\n        if ('x2' in command && 'undefined' !== typeof command.x2) {\n            command.x2 = rf(command.x2);\n        }\n        if ('y2' in command && 'undefined' !== typeof command.y2) {\n            command.y2 = rf(command.y2);\n        }\n        if ('x' in command && 'undefined' !== typeof command.x) {\n            command.x = rf(command.x);\n        }\n        if ('y' in command && 'undefined' !== typeof command.y) {\n            command.y = rf(command.y);\n        }\n        if ('rX' in command && 'undefined' !== typeof command.rX) {\n            command.rX = rf(command.rX);\n        }\n        if ('rY' in command && 'undefined' !== typeof command.rY) {\n            command.rY = rf(command.rY);\n        }\n        return command;\n    };\n}\n// Relative to absolute commands\nfunction TO_ABS() {\n    return INFO((command, prevX, prevY) => {\n        if (command.relative) {\n            // x1/y1 values\n            if ('undefined' !== typeof command.x1) {\n                command.x1 += prevX;\n            }\n            if ('undefined' !== typeof command.y1) {\n                command.y1 += prevY;\n            }\n            // x2/y2 values\n            if ('undefined' !== typeof command.x2) {\n                command.x2 += prevX;\n            }\n            if ('undefined' !== typeof command.y2) {\n                command.y2 += prevY;\n            }\n            // Finally x/y values\n            if ('undefined' !== typeof command.x) {\n                command.x += prevX;\n            }\n            if ('undefined' !== typeof command.y) {\n                command.y += prevY;\n            }\n            command.relative = false;\n        }\n        return command;\n    });\n}\n// Absolute to relative commands\nfunction TO_REL() {\n    return INFO((command, prevX, prevY) => {\n        if (!command.relative) {\n            // x1/y1 values\n            if ('undefined' !== typeof command.x1) {\n                command.x1 -= prevX;\n            }\n            if ('undefined' !== typeof command.y1) {\n                command.y1 -= prevY;\n            }\n            // x2/y2 values\n            if ('undefined' !== typeof command.x2) {\n                command.x2 -= prevX;\n            }\n            if ('undefined' !== typeof command.y2) {\n                command.y2 -= prevY;\n            }\n            // Finally x/y values\n            if ('undefined' !== typeof command.x) {\n                command.x -= prevX;\n            }\n            if ('undefined' !== typeof command.y) {\n                command.y -= prevY;\n            }\n            command.relative = true;\n        }\n        return command;\n    });\n}\n// Convert H, V, Z and A with rX = 0 to L\nfunction NORMALIZE_HVZ(normalizeZ = true, normalizeH = true, normalizeV = true) {\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n        if (isNaN(pathStartX) && !(command.type & SVGPathData.MOVE_TO)) {\n            throw new Error('path must start with moveto');\n        }\n        if (normalizeH && command.type & SVGPathData.HORIZ_LINE_TO) {\n            command.type = SVGPathData.LINE_TO;\n            command.y = command.relative ? 0 : prevY;\n        }\n        if (normalizeV && command.type & SVGPathData.VERT_LINE_TO) {\n            command.type = SVGPathData.LINE_TO;\n            command.x = command.relative ? 0 : prevX;\n        }\n        if (normalizeZ && command.type & SVGPathData.CLOSE_PATH) {\n            command.type = SVGPathData.LINE_TO;\n            command.x = command.relative ? pathStartX - prevX : pathStartX;\n            command.y = command.relative ? pathStartY - prevY : pathStartY;\n        }\n        if (command.type & SVGPathData.ARC &&\n            (0 === command.rX || 0 === command.rY)) {\n            command.type = SVGPathData.LINE_TO;\n            delete command.rX;\n            delete command.rY;\n            delete command.xRot;\n            delete command.lArcFlag;\n            delete command.sweepFlag;\n        }\n        return command;\n    });\n}\n/*\n * Transforms smooth curves and quads to normal curves and quads (SsTt to CcQq)\n */\nfunction NORMALIZE_ST() {\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n    return INFO((command, prevX, prevY) => {\n        if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n            command.type = SVGPathData.CURVE_TO;\n            prevCurveC2X = isNaN(prevCurveC2X) ? prevX : prevCurveC2X;\n            prevCurveC2Y = isNaN(prevCurveC2Y) ? prevY : prevCurveC2Y;\n            command.x1 = command.relative\n                ? prevX - prevCurveC2X\n                : 2 * prevX - prevCurveC2X;\n            command.y1 = command.relative\n                ? prevY - prevCurveC2Y\n                : 2 * prevY - prevCurveC2Y;\n        }\n        if (command.type & SVGPathData.CURVE_TO) {\n            prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n            prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n        }\n        else {\n            prevCurveC2X = NaN;\n            prevCurveC2Y = NaN;\n        }\n        if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n            command.type = SVGPathData.QUAD_TO;\n            prevQuadCX = isNaN(prevQuadCX) ? prevX : prevQuadCX;\n            prevQuadCY = isNaN(prevQuadCY) ? prevY : prevQuadCY;\n            command.x1 = command.relative\n                ? prevX - prevQuadCX\n                : 2 * prevX - prevQuadCX;\n            command.y1 = command.relative\n                ? prevY - prevQuadCY\n                : 2 * prevY - prevQuadCY;\n        }\n        if (command.type & SVGPathData.QUAD_TO) {\n            prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n            prevQuadCY = command.relative ? prevY + command.y1 : command.y1;\n        }\n        else {\n            prevQuadCX = NaN;\n            prevQuadCY = NaN;\n        }\n        return command;\n    });\n}\n/*\n * A quadratic bézier curve can be represented by a cubic bézier curve which has\n * the same end points as the quadratic and both control points in place of the\n * quadratic\"s one.\n *\n * This transformer replaces QqTt commands with Cc commands respectively.\n * This is useful for reading path data into a system which only has a\n * representation for cubic curves.\n */\nfunction QT_TO_C() {\n    let prevQuadX1 = NaN;\n    let prevQuadY1 = NaN;\n    return INFO((command, prevX, prevY) => {\n        if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n            command.type = SVGPathData.QUAD_TO;\n            prevQuadX1 = isNaN(prevQuadX1) ? prevX : prevQuadX1;\n            prevQuadY1 = isNaN(prevQuadY1) ? prevY : prevQuadY1;\n            command.x1 = command.relative\n                ? prevX - prevQuadX1\n                : 2 * prevX - prevQuadX1;\n            command.y1 = command.relative\n                ? prevY - prevQuadY1\n                : 2 * prevY - prevQuadY1;\n        }\n        if (command.type & SVGPathData.QUAD_TO) {\n            prevQuadX1 = command.relative ? prevX + command.x1 : command.x1;\n            prevQuadY1 = command.relative ? prevY + command.y1 : command.y1;\n            const x1 = command.x1;\n            const y1 = command.y1;\n            command.type = SVGPathData.CURVE_TO;\n            command.x1 = ((command.relative ? 0 : prevX) + x1 * 2) / 3;\n            command.y1 = ((command.relative ? 0 : prevY) + y1 * 2) / 3;\n            command.x2 = (command.x + x1 * 2) / 3;\n            command.y2 = (command.y + y1 * 2) / 3;\n        }\n        else {\n            prevQuadX1 = NaN;\n            prevQuadY1 = NaN;\n        }\n        return command;\n    });\n}\nfunction INFO(f) {\n    let prevXAbs = 0;\n    let prevYAbs = 0;\n    let pathStartXAbs = NaN;\n    let pathStartYAbs = NaN;\n    return function transform(command) {\n        if (isNaN(pathStartXAbs) && !(command.type & SVGPathData.MOVE_TO)) {\n            throw new Error('path must start with moveto');\n        }\n        const result = f(command, prevXAbs, prevYAbs, pathStartXAbs, pathStartYAbs);\n        if (command.type & SVGPathData.CLOSE_PATH) {\n            prevXAbs = pathStartXAbs;\n            prevYAbs = pathStartYAbs;\n        }\n        if ('x' in command && 'undefined' !== typeof command.x) {\n            prevXAbs = command.relative ? prevXAbs + command.x : command.x;\n        }\n        if ('y' in command && 'undefined' !== typeof command.y) {\n            prevYAbs = command.relative ? prevYAbs + command.y : command.y;\n        }\n        if (command.type & SVGPathData.MOVE_TO) {\n            pathStartXAbs = prevXAbs;\n            pathStartYAbs = prevYAbs;\n        }\n        return result;\n    };\n}\n/*\n * remove 0-length segments\n */\nfunction SANITIZE(EPS = 0) {\n    assertNumbers(EPS);\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n        const abs = Math.abs;\n        let skip = false;\n        let x1Rel = 0;\n        let y1Rel = 0;\n        if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n            x1Rel = isNaN(prevCurveC2X) ? 0 : prevX - prevCurveC2X;\n            y1Rel = isNaN(prevCurveC2Y) ? 0 : prevY - prevCurveC2Y;\n        }\n        if (command.type & (SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO)) {\n            prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n            prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n        }\n        else {\n            prevCurveC2X = NaN;\n            prevCurveC2Y = NaN;\n        }\n        if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n            prevQuadCX = isNaN(prevQuadCX) ? prevX : 2 * prevX - prevQuadCX;\n            prevQuadCY = isNaN(prevQuadCY) ? prevY : 2 * prevY - prevQuadCY;\n        }\n        else if (command.type & SVGPathData.QUAD_TO) {\n            prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n            prevQuadCY = command.relative ? prevY + command.y1 : command.y2;\n        }\n        else {\n            prevQuadCX = NaN;\n            prevQuadCY = NaN;\n        }\n        if (command.type & SVGPathData.LINE_COMMANDS ||\n            (command.type & SVGPathData.ARC &&\n                (0 === command.rX || 0 === command.rY || !command.lArcFlag)) ||\n            command.type & SVGPathData.CURVE_TO ||\n            command.type & SVGPathData.SMOOTH_CURVE_TO ||\n            command.type & SVGPathData.QUAD_TO ||\n            command.type & SVGPathData.SMOOTH_QUAD_TO) {\n            const xRel = 'undefined' === typeof command.x\n                ? 0\n                : command.relative\n                    ? command.x\n                    : command.x - prevX;\n            const yRel = 'undefined' === typeof command.y\n                ? 0\n                : command.relative\n                    ? command.y\n                    : command.y - prevY;\n            x1Rel = !isNaN(prevQuadCX)\n                ? prevQuadCX - prevX\n                : 'undefined' === typeof command.x1\n                    ? x1Rel\n                    : command.relative\n                        ? command.x\n                        : command.x1 - prevX;\n            y1Rel = !isNaN(prevQuadCY)\n                ? prevQuadCY - prevY\n                : 'undefined' === typeof command.y1\n                    ? y1Rel\n                    : command.relative\n                        ? command.y\n                        : command.y1 - prevY;\n            const x2Rel = 'undefined' === typeof command.x2\n                ? 0\n                : command.relative\n                    ? command.x\n                    : command.x2 - prevX;\n            const y2Rel = 'undefined' === typeof command.y2\n                ? 0\n                : command.relative\n                    ? command.y\n                    : command.y2 - prevY;\n            if (abs(xRel) <= EPS &&\n                abs(yRel) <= EPS &&\n                abs(x1Rel) <= EPS &&\n                abs(y1Rel) <= EPS &&\n                abs(x2Rel) <= EPS &&\n                abs(y2Rel) <= EPS) {\n                skip = true;\n            }\n        }\n        if (command.type & SVGPathData.CLOSE_PATH) {\n            if (abs(prevX - pathStartX) <= EPS && abs(prevY - pathStartY) <= EPS) {\n                skip = true;\n            }\n        }\n        return skip ? [] : command;\n    });\n}\n// SVG Transforms : http://www.w3.org/TR/SVGTiny12/coords.html#TransformList\n// Matrix : http://apike.ca/prog_svg_transform.html\n// a c e\n// b d f\nfunction MATRIX(a, b, c, d, e, f) {\n    assertNumbers(a, b, c, d, e, f);\n    return INFO((command, prevX, prevY, pathStartX) => {\n        const origX1 = command.x1;\n        const origX2 = command.x2;\n        // if isNaN(pathStartX), then this is the first command, which is ALWAYS an\n        // absolute MOVE_TO, regardless what the relative flag says\n        const comRel = command.relative && !isNaN(pathStartX);\n        const x = 'undefined' !== typeof command.x ? command.x : comRel ? 0 : prevX;\n        const y = 'undefined' !== typeof command.y ? command.y : comRel ? 0 : prevY;\n        if (command.type & SVGPathData.HORIZ_LINE_TO && 0 !== b) {\n            command.type = SVGPathData.LINE_TO;\n            command.y = command.relative ? 0 : prevY;\n        }\n        if (command.type & SVGPathData.VERT_LINE_TO && 0 !== c) {\n            command.type = SVGPathData.LINE_TO;\n            command.x = command.relative ? 0 : prevX;\n        }\n        if ('undefined' !== typeof command.x) {\n            command.x = command.x * a + y * c + (comRel ? 0 : e);\n        }\n        if ('undefined' !== typeof command.y) {\n            command.y = x * b + command.y * d + (comRel ? 0 : f);\n        }\n        if ('undefined' !== typeof command.x1) {\n            command.x1 = command.x1 * a + command.y1 * c + (comRel ? 0 : e);\n        }\n        if ('undefined' !== typeof command.y1) {\n            command.y1 = origX1 * b + command.y1 * d + (comRel ? 0 : f);\n        }\n        if ('undefined' !== typeof command.x2) {\n            command.x2 = command.x2 * a + command.y2 * c + (comRel ? 0 : e);\n        }\n        if ('undefined' !== typeof command.y2) {\n            command.y2 = origX2 * b + command.y2 * d + (comRel ? 0 : f);\n        }\n        function sqr(x) {\n            return x * x;\n        }\n        const det = a * d - b * c;\n        if ('undefined' !== typeof command.xRot) {\n            // Skip if this is a pure translation\n            if (1 !== a || 0 !== b || 0 !== c || 1 !== d) {\n                // Special case for singular matrix\n                if (0 === det) {\n                    // In the singular case, the arc is compressed to a line. The actual geometric image of the original\n                    // curve under this transform possibly extends beyond the starting and/or ending points of the segment, but\n                    // for simplicity we ignore this detail and just replace this command with a single line segment.\n                    delete command.rX;\n                    delete command.rY;\n                    delete command.xRot;\n                    delete command.lArcFlag;\n                    delete command.sweepFlag;\n                    command.type = SVGPathData.LINE_TO;\n                }\n                else {\n                    // Convert to radians\n                    const xRot = (command.xRot * Math.PI) / 180;\n                    // Convert rotated ellipse to general conic form\n                    // x0^2/rX^2 + y0^2/rY^2 - 1 = 0\n                    // x0 = x*cos(xRot) + y*sin(xRot)\n                    // y0 = -x*sin(xRot) + y*cos(xRot)\n                    // --> A*x^2 + B*x*y + C*y^2 - 1 = 0, where\n                    const sinRot = Math.sin(xRot);\n                    const cosRot = Math.cos(xRot);\n                    const xCurve = 1 / sqr(command.rX);\n                    const yCurve = 1 / sqr(command.rY);\n                    const A = sqr(cosRot) * xCurve + sqr(sinRot) * yCurve;\n                    const B = 2 * sinRot * cosRot * (xCurve - yCurve);\n                    const C = sqr(sinRot) * xCurve + sqr(cosRot) * yCurve;\n                    // Apply matrix to A*x^2 + B*x*y + C*y^2 - 1 = 0\n                    // x1 = a*x + c*y\n                    // y1 = b*x + d*y\n                    //      (we can ignore e and f, since pure translations don\"t affect the shape of the ellipse)\n                    // --> A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 = 0, where\n                    const A1 = A * d * d - B * b * d + C * b * b;\n                    const B1 = B * (a * d + b * c) - 2 * (A * c * d + C * a * b);\n                    const C1 = A * c * c - B * a * c + C * a * a;\n                    // Unapply newXRot to get back to axis-aligned ellipse equation\n                    // x1 = x2*cos(newXRot) - y2*sin(newXRot)\n                    // y1 = x2*sin(newXRot) + y2*cos(newXRot)\n                    // A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 =\n                    //   x2^2*(A1*cos(newXRot)^2 + B1*sin(newXRot)*cos(newXRot) + C1*sin(newXRot)^2)\n                    //   + x2*y2*(2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2))\n                    //   + y2^2*(A1*sin(newXRot)^2 - B1*sin(newXRot)*cos(newXRot) + C1*cos(newXRot)^2)\n                    //   (which must have the same zeroes as)\n                    // x2^2/newRX^2 + y2^2/newRY^2 - 1\n                    //   (so we have)\n                    // 2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2) = 0\n                    // (A1 - C1)*sin(2*newXRot) = B1*cos(2*newXRot)\n                    // 2*newXRot = atan2(B1, A1 - C1)\n                    const newXRot = ((Math.atan2(B1, A1 - C1) + Math.PI) % Math.PI) / 2;\n                    // For any integer n, (atan2(B1, A1 - C1) + n*pi)/2 is a solution to the above; incrementing n just swaps\n                    // the x and y radii computed below (since that\"s what rotating an ellipse by pi/2 does).  Choosing the\n                    // rotation between 0 and pi/2 eliminates the ambiguity and leads to more predictable output.\n                    // Finally, we get newRX and newRY from the same-zeroes relationship that gave us newXRot\n                    const newSinRot = Math.sin(newXRot);\n                    const newCosRot = Math.cos(newXRot);\n                    command.rX =\n                        Math.abs(det) /\n                            Math.sqrt(A1 * sqr(newCosRot) +\n                                B1 * newSinRot * newCosRot +\n                                C1 * sqr(newSinRot));\n                    command.rY =\n                        Math.abs(det) /\n                            Math.sqrt(A1 * sqr(newSinRot) -\n                                B1 * newSinRot * newCosRot +\n                                C1 * sqr(newCosRot));\n                    command.xRot = (newXRot * 180) / Math.PI;\n                }\n            }\n        }\n        // sweepFlag needs to be inverted when mirroring shapes\n        // see http://www.itk.ilstu.edu/faculty/javila/SVG/SVG_drawing1/elliptical_curve.htm\n        // m 65,10 a 50,25 0 1 0 50,25\n        // M 65,60 A 50,25 0 1 1 115,35\n        if ('undefined' !== typeof command.sweepFlag && 0 > det) {\n            command.sweepFlag = +!command.sweepFlag;\n        }\n        return command;\n    });\n}\nfunction ROTATE(a, x = 0, y = 0) {\n    assertNumbers(a, x, y);\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n    return MATRIX(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);\n}\nfunction TRANSLATE(dX, dY = 0) {\n    assertNumbers(dX, dY);\n    return MATRIX(1, 0, 0, 1, dX, dY);\n}\nfunction SCALE(dX, dY = dX) {\n    assertNumbers(dX, dY);\n    return MATRIX(dX, 0, 0, dY, 0, 0);\n}\nfunction SKEW_X(a) {\n    assertNumbers(a);\n    return MATRIX(1, 0, Math.atan(a), 1, 0, 0);\n}\nfunction SKEW_Y(a) {\n    assertNumbers(a);\n    return MATRIX(1, Math.atan(a), 0, 1, 0, 0);\n}\nfunction X_AXIS_SYMMETRY(xOffset = 0) {\n    assertNumbers(xOffset);\n    return MATRIX(-1, 0, 0, 1, xOffset, 0);\n}\nfunction Y_AXIS_SYMMETRY(yOffset = 0) {\n    assertNumbers(yOffset);\n    return MATRIX(1, 0, 0, -1, 0, yOffset);\n}\n// Convert arc commands to curve commands\nfunction A_TO_C() {\n    return INFO((command, prevX, prevY) => {\n        if (SVGPathData.ARC === command.type) {\n            return a2c(command, command.relative ? 0 : prevX, command.relative ? 0 : prevY);\n        }\n        return command;\n    });\n}\n// @see annotateArcCommand\nfunction ANNOTATE_ARCS() {\n    return INFO((c, x1, y1) => {\n        if (c.relative) {\n            x1 = 0;\n            y1 = 0;\n        }\n        if (SVGPathData.ARC === c.type) {\n            annotateArcCommand(c, x1, y1);\n        }\n        return c;\n    });\n}\nfunction CLONE() {\n    return (c) => {\n        return { ...c };\n    };\n}\n// @see annotateArcCommand\nfunction CALCULATE_BOUNDS() {\n    const clone = CLONE();\n    const toAbs = TO_ABS();\n    const qtToC = QT_TO_C();\n    const normST = NORMALIZE_ST();\n    const f = INFO((command, prevXAbs, prevYAbs) => {\n        const c = normST(qtToC(toAbs(clone(command))));\n        function fixX(absX) {\n            if (absX > f.maxX) {\n                f.maxX = absX;\n            }\n            if (absX < f.minX) {\n                f.minX = absX;\n            }\n        }\n        function fixY(absY) {\n            if (absY > f.maxY) {\n                f.maxY = absY;\n            }\n            if (absY < f.minY) {\n                f.minY = absY;\n            }\n        }\n        if (c.type & SVGPathData.DRAWING_COMMANDS) {\n            fixX(prevXAbs);\n            fixY(prevYAbs);\n        }\n        if (c.type & SVGPathData.HORIZ_LINE_TO) {\n            fixX(c.x);\n        }\n        if (c.type & SVGPathData.VERT_LINE_TO) {\n            fixY(c.y);\n        }\n        if (c.type & SVGPathData.LINE_TO) {\n            fixX(c.x);\n            fixY(c.y);\n        }\n        if (c.type & SVGPathData.CURVE_TO) {\n            // add start and end points\n            fixX(c.x);\n            fixY(c.y);\n            const xDerivRoots = bezierRoot(prevXAbs, c.x1, c.x2, c.x);\n            for (const derivRoot of xDerivRoots) {\n                if (0 < derivRoot && 1 > derivRoot) {\n                    fixX(bezierAt(prevXAbs, c.x1, c.x2, c.x, derivRoot));\n                }\n            }\n            const yDerivRoots = bezierRoot(prevYAbs, c.y1, c.y2, c.y);\n            for (const derivRoot of yDerivRoots) {\n                if (0 < derivRoot && 1 > derivRoot) {\n                    fixY(bezierAt(prevYAbs, c.y1, c.y2, c.y, derivRoot));\n                }\n            }\n        }\n        if (c.type & SVGPathData.ARC) {\n            // add start and end points\n            fixX(c.x);\n            fixY(c.y);\n            annotateArcCommand(c, prevXAbs, prevYAbs);\n            // p = cos(phi) * xv + sin(phi) * yv\n            // dp = -sin(phi) * xv + cos(phi) * yv = 0\n            const xRotRad = (c.xRot / 180) * Math.PI;\n            // points on ellipse for phi = 0° and phi = 90°\n            const x0 = Math.cos(xRotRad) * c.rX;\n            const y0 = Math.sin(xRotRad) * c.rX;\n            const x90 = -Math.sin(xRotRad) * c.rY;\n            const y90 = Math.cos(xRotRad) * c.rY;\n            // annotateArcCommand returns phi1 and phi2 such that -180° < phi1 < 180° and phi2 is smaller or greater\n            // depending on the sweep flag. Calculate phiMin, phiMax such that -180° < phiMin < 180° and phiMin < phiMax\n            const [phiMin, phiMax] = c.phi1 < c.phi2\n                ? [c.phi1, c.phi2]\n                : -180 > c.phi2\n                    ? [c.phi2 + 360, c.phi1 + 360]\n                    : [c.phi2, c.phi1];\n            const normalizeXiEta = ([xi, eta]) => {\n                const phiRad = Math.atan2(eta, xi);\n                const phi = (phiRad * 180) / Math.PI;\n                return phi < phiMin ? phi + 360 : phi;\n            };\n            // xi = cos(phi), eta = sin(phi)\n            const xDerivRoots = intersectionUnitCircleLine(x90, -x0, 0).map(normalizeXiEta);\n            for (const derivRoot of xDerivRoots) {\n                if (derivRoot > phiMin && derivRoot < phiMax) {\n                    fixX(arcAt(c.cX, x0, x90, derivRoot));\n                }\n            }\n            const yDerivRoots = intersectionUnitCircleLine(y90, -y0, 0).map(normalizeXiEta);\n            for (const derivRoot of yDerivRoots) {\n                if (derivRoot > phiMin && derivRoot < phiMax) {\n                    fixY(arcAt(c.cY, y0, y90, derivRoot));\n                }\n            }\n        }\n        return command;\n    });\n    f.minX = Infinity;\n    f.maxX = -Infinity;\n    f.minY = Infinity;\n    f.maxY = -Infinity;\n    return f;\n}\nexport const SVGPathDataTransformer = {\n    ROUND,\n    TO_ABS,\n    TO_REL,\n    NORMALIZE_HVZ,\n    NORMALIZE_ST,\n    QT_TO_C,\n    INFO,\n    SANITIZE,\n    MATRIX,\n    ROTATE,\n    TRANSLATE,\n    SCALE,\n    SKEW_X,\n    SKEW_Y,\n    X_AXIS_SYMMETRY,\n    Y_AXIS_SYMMETRY,\n    A_TO_C,\n    ANNOTATE_ARCS,\n    CLONE,\n    CALCULATE_BOUNDS,\n};\n//# sourceMappingURL=SVGPathDataTransformer.js.map","import { SVGPathDataTransformer } from './SVGPathDataTransformer.js';\nexport class TransformableSVG {\n    round(x) {\n        return this.transform(SVGPathDataTransformer.ROUND(x));\n    }\n    toAbs() {\n        return this.transform(SVGPathDataTransformer.TO_ABS());\n    }\n    toRel() {\n        return this.transform(SVGPathDataTransformer.TO_REL());\n    }\n    normalizeHVZ(a, b, c) {\n        return this.transform(SVGPathDataTransformer.NORMALIZE_HVZ(a, b, c));\n    }\n    normalizeST() {\n        return this.transform(SVGPathDataTransformer.NORMALIZE_ST());\n    }\n    qtToC() {\n        return this.transform(SVGPathDataTransformer.QT_TO_C());\n    }\n    aToC() {\n        return this.transform(SVGPathDataTransformer.A_TO_C());\n    }\n    sanitize(eps) {\n        return this.transform(SVGPathDataTransformer.SANITIZE(eps));\n    }\n    translate(x, y) {\n        return this.transform(SVGPathDataTransformer.TRANSLATE(x, y));\n    }\n    scale(x, y) {\n        return this.transform(SVGPathDataTransformer.SCALE(x, y));\n    }\n    rotate(a, x, y) {\n        return this.transform(SVGPathDataTransformer.ROTATE(a, x, y));\n    }\n    matrix(a, b, c, d, e, f) {\n        return this.transform(SVGPathDataTransformer.MATRIX(a, b, c, d, e, f));\n    }\n    skewX(a) {\n        return this.transform(SVGPathDataTransformer.SKEW_X(a));\n    }\n    skewY(a) {\n        return this.transform(SVGPathDataTransformer.SKEW_Y(a));\n    }\n    xSymmetry(xOffset) {\n        return this.transform(SVGPathDataTransformer.X_AXIS_SYMMETRY(xOffset));\n    }\n    ySymmetry(yOffset) {\n        return this.transform(SVGPathDataTransformer.Y_AXIS_SYMMETRY(yOffset));\n    }\n    annotateArcs() {\n        return this.transform(SVGPathDataTransformer.ANNOTATE_ARCS());\n    }\n}\n//# sourceMappingURL=TransformableSVG.js.map","// Parse SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\nimport { COMMAND_ARG_COUNTS, SVGPathData } from './SVGPathData.js';\nimport { TransformableSVG } from './TransformableSVG.js';\n// Private consts : Char groups\nconst isWhiteSpace = (c) => ' ' === c || '\\t' === c || '\\r' === c || '\\n' === c;\nconst isDigit = (c) => '0'.charCodeAt(0) <= c.charCodeAt(0) && c.charCodeAt(0) <= '9'.charCodeAt(0);\nexport class SVGPathDataParser extends TransformableSVG {\n    curNumber = '';\n    curCommandType = -1;\n    curCommandRelative = false;\n    canParseCommandOrComma = true;\n    curNumberHasExp = false;\n    curNumberHasExpDigits = false;\n    curNumberHasDecimal = false;\n    curArgs = [];\n    constructor() {\n        super();\n    }\n    finish(commands = []) {\n        this.parse(' ', commands);\n        // Adding residual command\n        if (0 !== this.curArgs.length || !this.canParseCommandOrComma) {\n            throw new SyntaxError('Unterminated command at the path end.');\n        }\n        return commands;\n    }\n    parse(str, commands = []) {\n        const finishCommand = (command) => {\n            commands.push(command);\n            this.curArgs.length = 0;\n            this.canParseCommandOrComma = true;\n        };\n        for (let i = 0; i < str.length; i++) {\n            const c = str[i];\n            // White spaces parsing\n            const isAArcFlag = this.curCommandType === SVGPathData.ARC &&\n                (this.curArgs.length === 3 || this.curArgs.length === 4) &&\n                this.curNumber.length === 1 &&\n                (this.curNumber === '0' || this.curNumber === '1');\n            const isEndingDigit = isDigit(c) && ((this.curNumber === '0' && c === '0') || isAArcFlag);\n            if (isDigit(c) && !isEndingDigit) {\n                this.curNumber += c;\n                this.curNumberHasExpDigits = this.curNumberHasExp;\n                continue;\n            }\n            if ('e' === c || 'E' === c) {\n                this.curNumber += c;\n                this.curNumberHasExp = true;\n                continue;\n            }\n            if (('-' === c || '+' === c) &&\n                this.curNumberHasExp &&\n                !this.curNumberHasExpDigits) {\n                this.curNumber += c;\n                continue;\n            }\n            // if we already have a \".\", it means we are starting a new number\n            if ('.' === c &&\n                !this.curNumberHasExp &&\n                !this.curNumberHasDecimal &&\n                !isAArcFlag) {\n                this.curNumber += c;\n                this.curNumberHasDecimal = true;\n                continue;\n            }\n            // New number\n            if (this.curNumber && -1 !== this.curCommandType) {\n                const val = Number(this.curNumber);\n                if (isNaN(val)) {\n                    throw new SyntaxError(`Invalid number ending at ${i}`);\n                }\n                if (this.curCommandType === SVGPathData.ARC) {\n                    if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n                        if (0 > val) {\n                            throw new SyntaxError(`Expected positive number, got \"${val}\" at index \"${i}\"`);\n                        }\n                    }\n                    else if (3 === this.curArgs.length || 4 === this.curArgs.length) {\n                        if ('0' !== this.curNumber && '1' !== this.curNumber) {\n                            throw new SyntaxError(`Expected a flag, got \"${this.curNumber}\" at index \"${i}\"`);\n                        }\n                    }\n                }\n                this.curArgs.push(val);\n                if (this.curArgs.length === COMMAND_ARG_COUNTS[this.curCommandType]) {\n                    if (SVGPathData.HORIZ_LINE_TO === this.curCommandType) {\n                        finishCommand({\n                            type: SVGPathData.HORIZ_LINE_TO,\n                            relative: this.curCommandRelative,\n                            x: val,\n                        });\n                    }\n                    else if (SVGPathData.VERT_LINE_TO === this.curCommandType) {\n                        finishCommand({\n                            type: SVGPathData.VERT_LINE_TO,\n                            relative: this.curCommandRelative,\n                            y: val,\n                        });\n                        // Move to / line to / smooth quadratic curve to commands (x, y)\n                    }\n                    else if (this.curCommandType === SVGPathData.MOVE_TO ||\n                        this.curCommandType === SVGPathData.LINE_TO ||\n                        this.curCommandType === SVGPathData.SMOOTH_QUAD_TO) {\n                        finishCommand({\n                            type: this.curCommandType,\n                            relative: this.curCommandRelative,\n                            x: this.curArgs[0],\n                            y: this.curArgs[1],\n                        });\n                        // Switch to line to state\n                        if (SVGPathData.MOVE_TO === this.curCommandType) {\n                            this.curCommandType = SVGPathData.LINE_TO;\n                        }\n                    }\n                    else if (this.curCommandType === SVGPathData.CURVE_TO) {\n                        finishCommand({\n                            type: SVGPathData.CURVE_TO,\n                            relative: this.curCommandRelative,\n                            x1: this.curArgs[0],\n                            y1: this.curArgs[1],\n                            x2: this.curArgs[2],\n                            y2: this.curArgs[3],\n                            x: this.curArgs[4],\n                            y: this.curArgs[5],\n                        });\n                    }\n                    else if (this.curCommandType === SVGPathData.SMOOTH_CURVE_TO) {\n                        finishCommand({\n                            type: SVGPathData.SMOOTH_CURVE_TO,\n                            relative: this.curCommandRelative,\n                            x2: this.curArgs[0],\n                            y2: this.curArgs[1],\n                            x: this.curArgs[2],\n                            y: this.curArgs[3],\n                        });\n                    }\n                    else if (this.curCommandType === SVGPathData.QUAD_TO) {\n                        finishCommand({\n                            type: SVGPathData.QUAD_TO,\n                            relative: this.curCommandRelative,\n                            x1: this.curArgs[0],\n                            y1: this.curArgs[1],\n                            x: this.curArgs[2],\n                            y: this.curArgs[3],\n                        });\n                    }\n                    else if (this.curCommandType === SVGPathData.ARC) {\n                        finishCommand({\n                            type: SVGPathData.ARC,\n                            relative: this.curCommandRelative,\n                            rX: this.curArgs[0],\n                            rY: this.curArgs[1],\n                            xRot: this.curArgs[2],\n                            lArcFlag: this.curArgs[3],\n                            sweepFlag: this.curArgs[4],\n                            x: this.curArgs[5],\n                            y: this.curArgs[6],\n                        });\n                    }\n                }\n                this.curNumber = '';\n                this.curNumberHasExpDigits = false;\n                this.curNumberHasExp = false;\n                this.curNumberHasDecimal = false;\n                this.canParseCommandOrComma = true;\n            }\n            // Continue if a white space or a comma was detected\n            if (isWhiteSpace(c)) {\n                continue;\n            }\n            if (',' === c && this.canParseCommandOrComma) {\n                // L 0,0, H is not valid:\n                this.canParseCommandOrComma = false;\n                continue;\n            }\n            // if a sign is detected, then parse the new number\n            if ('+' === c || '-' === c || '.' === c) {\n                this.curNumber = c;\n                this.curNumberHasDecimal = '.' === c;\n                continue;\n            }\n            // if a 0 is detected, then parse the new number\n            if (isEndingDigit) {\n                this.curNumber = c;\n                this.curNumberHasDecimal = false;\n                continue;\n            }\n            // Adding residual command\n            if (0 !== this.curArgs.length) {\n                throw new SyntaxError(`Unterminated command at index ${i}.`);\n            }\n            if (!this.canParseCommandOrComma) {\n                throw new SyntaxError(`Unexpected character \"${c}\" at index ${i}. Command cannot follow comma`);\n            }\n            this.canParseCommandOrComma = false;\n            // Detecting the next command\n            if ('z' === c || 'Z' === c) {\n                commands.push({\n                    type: SVGPathData.CLOSE_PATH,\n                });\n                this.canParseCommandOrComma = true;\n                this.curCommandType = -1;\n                continue;\n                // Horizontal move to command\n            }\n            else if ('h' === c || 'H' === c) {\n                this.curCommandType = SVGPathData.HORIZ_LINE_TO;\n                this.curCommandRelative = 'h' === c;\n                // Vertical move to command\n            }\n            else if ('v' === c || 'V' === c) {\n                this.curCommandType = SVGPathData.VERT_LINE_TO;\n                this.curCommandRelative = 'v' === c;\n                // Move to command\n            }\n            else if ('m' === c || 'M' === c) {\n                this.curCommandType = SVGPathData.MOVE_TO;\n                this.curCommandRelative = 'm' === c;\n                // Line to command\n            }\n            else if ('l' === c || 'L' === c) {\n                this.curCommandType = SVGPathData.LINE_TO;\n                this.curCommandRelative = 'l' === c;\n                // Curve to command\n            }\n            else if ('c' === c || 'C' === c) {\n                this.curCommandType = SVGPathData.CURVE_TO;\n                this.curCommandRelative = 'c' === c;\n                // Smooth curve to command\n            }\n            else if ('s' === c || 'S' === c) {\n                this.curCommandType = SVGPathData.SMOOTH_CURVE_TO;\n                this.curCommandRelative = 's' === c;\n                // Quadratic bezier curve to command\n            }\n            else if ('q' === c || 'Q' === c) {\n                this.curCommandType = SVGPathData.QUAD_TO;\n                this.curCommandRelative = 'q' === c;\n                // Smooth quadratic bezier curve to command\n            }\n            else if ('t' === c || 'T' === c) {\n                this.curCommandType = SVGPathData.SMOOTH_QUAD_TO;\n                this.curCommandRelative = 't' === c;\n                // Elliptic arc command\n            }\n            else if ('a' === c || 'A' === c) {\n                this.curCommandType = SVGPathData.ARC;\n                this.curCommandRelative = 'a' === c;\n            }\n            else {\n                throw new SyntaxError(`Unexpected character \"${c}\" at index ${i}.`);\n            }\n        }\n        return commands;\n    }\n    /**\n     * Return a wrapper around this parser which applies the transformation on parsed commands.\n     */\n    transform(transform) {\n        const result = Object.create(this, {\n            parse: {\n                value(chunk, commands = []) {\n                    const parsedCommands = Object.getPrototypeOf(this).parse.call(this, chunk);\n                    for (const c of parsedCommands) {\n                        const cT = transform(c);\n                        if (Array.isArray(cT)) {\n                            commands.push(...cT);\n                        }\n                        else {\n                            commands.push(cT);\n                        }\n                    }\n                    return commands;\n                },\n            },\n        });\n        return result;\n    }\n}\n//# sourceMappingURL=SVGPathDataParser.js.map","import { encodeSVGPath } from './SVGPathDataEncoder.js';\nimport { SVGPathDataParser } from './SVGPathDataParser.js';\nimport { SVGPathDataTransformer } from './SVGPathDataTransformer.js';\nimport { TransformableSVG } from './TransformableSVG.js';\nexport class SVGPathData extends TransformableSVG {\n    commands;\n    constructor(content) {\n        super();\n        if ('string' === typeof content) {\n            this.commands = SVGPathData.parse(content);\n        }\n        else {\n            this.commands = content;\n        }\n    }\n    encode() {\n        return SVGPathData.encode(this.commands);\n    }\n    getBounds() {\n        const boundsTransform = SVGPathDataTransformer.CALCULATE_BOUNDS();\n        this.transform(boundsTransform);\n        return boundsTransform;\n    }\n    transform(transformFunction) {\n        const newCommands = [];\n        for (const command of this.commands) {\n            const transformedCommand = transformFunction(command);\n            if (Array.isArray(transformedCommand)) {\n                newCommands.push(...transformedCommand);\n            }\n            else {\n                newCommands.push(transformedCommand);\n            }\n        }\n        this.commands = newCommands;\n        return this;\n    }\n    static encode(commands) {\n        return encodeSVGPath(commands);\n    }\n    static parse(path) {\n        const parser = new SVGPathDataParser();\n        const commands = [];\n        parser.parse(path, commands);\n        parser.finish(commands);\n        return commands;\n    }\n    static CLOSE_PATH = 1;\n    static MOVE_TO = 2;\n    static HORIZ_LINE_TO = 4;\n    static VERT_LINE_TO = 8;\n    static LINE_TO = 16;\n    static CURVE_TO = 32;\n    static SMOOTH_CURVE_TO = 64;\n    static QUAD_TO = 128;\n    static SMOOTH_QUAD_TO = 256;\n    static ARC = 512;\n    static LINE_COMMANDS = SVGPathData.LINE_TO | SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO;\n    static DRAWING_COMMANDS = SVGPathData.HORIZ_LINE_TO |\n        SVGPathData.VERT_LINE_TO |\n        SVGPathData.LINE_TO |\n        SVGPathData.CURVE_TO |\n        SVGPathData.SMOOTH_CURVE_TO |\n        SVGPathData.QUAD_TO |\n        SVGPathData.SMOOTH_QUAD_TO |\n        SVGPathData.ARC;\n}\nexport const COMMAND_ARG_COUNTS = {\n    [SVGPathData.MOVE_TO]: 2,\n    [SVGPathData.LINE_TO]: 2,\n    [SVGPathData.HORIZ_LINE_TO]: 1,\n    [SVGPathData.VERT_LINE_TO]: 1,\n    [SVGPathData.CLOSE_PATH]: 0,\n    [SVGPathData.QUAD_TO]: 4,\n    [SVGPathData.SMOOTH_QUAD_TO]: 2,\n    [SVGPathData.CURVE_TO]: 6,\n    [SVGPathData.SMOOTH_CURVE_TO]: 4,\n    [SVGPathData.ARC]: 7,\n};\n//# sourceMappingURL=SVGPathData.js.map","export interface RectAttributes {\n  x?: string;\n  y?: string;\n  width?: string;\n  height?: string;\n  rx?: string;\n  ry?: string;\n}\n\nexport function svgRectToPath(attributes: RectAttributes): string {\n  const x = attributes.x == null ? 0 : parseFloat(attributes.x);\n  const y = attributes.y == null ? 0 : parseFloat(attributes.y);\n  const width = attributes.width == null ? 0 : parseFloat(attributes.width);\n  const height = attributes.height == null ? 0 : parseFloat(attributes.height);\n\n  const rx = attributes.rx == null ? 0 : parseFloat(attributes.rx);\n  const ry = attributes.ry == null ? 0 : parseFloat(attributes.ry);\n\n  return `M${x + rx} ` +\n    `${y}h${width - rx * 2}${rx || ry ? `a ${rx} ${ry} 0 0 1 ${rx} ${ry}` : ''}` +\n    `v${height - ry * 2}${rx || ry ? `a ${rx} ${ry} 0 0 1 ${rx * -1} ${ry}` : ''}` +\n    `h${(width - rx * 2) * -1}${rx || ry ? `a ${rx} ${ry} 0 0 1 ${rx * -1} ${ry * -1}` : ''}` +\n    `v${(height - ry * 2) * -1}${rx || ry ? `a ${rx} ${ry} 0 0 1 ${rx} ${ry * -1}` : ''}` +\n    'z';\n}","export interface LineAttributes {\n  x1?: string;\n  y1?: string;\n  x2?: string;\n  y2?: string;\n}\n\nexport function svgLineToPath(attributes: LineAttributes): string {\n  const x1 = attributes.x1 && parseFloat(attributes.x1) || 0;\n  const y1 = attributes.y1 && parseFloat(attributes.y1) || 0;\n  const x2 = attributes.x2 && parseFloat(attributes.x2) || 0;\n  const y2 = attributes.y2 && parseFloat(attributes.y2) || 0;\n\n  return `M${x1} ${y1} ${x1 + 1} ${y1 + 1} ${x2 + 1} ${y2 + 1} ${x2} ${y2}Z`;\n}","export interface CircleAttributes {\n  cx?: string;\n  cy?: string;\n  rx?: string;\n  ry?: string;\n  r?: string;\n}\n\nexport function svgCircleToPath(attributes: CircleAttributes): string {\n  const cx = attributes.cx && parseFloat(attributes.cx) || 0;\n  const cy = attributes.cy && parseFloat(attributes.cy) || 0;\n  const r = attributes.r && parseFloat(attributes.r) || 0;\n  const rx = attributes.rx && parseFloat(attributes.rx) || r;\n  const ry = attributes.ry && parseFloat(attributes.ry) || r;\n\n  return `M${cx - rx},${cy}A${rx},${ry} 0,0,0 ${cx + rx},${cy}A${rx},${ry} 0,0,0 ${cx - rx},${cy}`;\n}","import { Transform, TransformCallback } from 'node:stream';\nimport sax from 'sax';\nimport { BufferWithMeta, FileMetadata, SymbolMeta } from '../types/types.ts';\nimport { SVGCommand, SVGPathData, SVGPathDataParser, SVGPathDataTransformer } from 'svg-pathdata';\nimport { START_UNICODE, SYMBOL_SIZE } from '../utils/constants.ts';\nimport { Buffer } from 'node:buffer';\nimport { populateMetadata } from '../utils/populate-metadata.ts';\nimport { svgRectToPath } from '../svg-helpers/svg-rect-to-path.ts';\nimport { svgLineToPath } from '../svg-helpers/svg-line-to-path.ts';\nimport { svgCircleToPath } from '../svg-helpers/svg-circle-to-path.ts';\nimport type { SvgTransformation } from '../types';\n\nexport class StreamPrepareTransformer extends Transform {\n\n  _size = SYMBOL_SIZE;\n\n  _startUnicode = START_UNICODE;\n\n  constructor() {\n    super({ objectMode: true });\n  }\n\n  private _sizeAndPos(pathData: SVGPathData): { x: number; y: number, width: number; height: number } {\n    const { minX, maxX, minY, maxY } = pathData.getBounds();\n    const width = maxX - minX;\n    const height = maxY - minY;\n\n    return {\n      x: minX,\n      y: minY,\n      width: width,\n      height: height,\n    }\n  }\n\n  private _adjustSize(pathData: SVGPathData): SVGPathData {\n    const { width, height } = this._sizeAndPos(pathData);\n    const currentSize = Math.round(Math.max(width, height));\n\n    // If the shape fits into a given square, we do nothing\n    if (currentSize !== this._size) {\n      pathData = pathData.scale(this._size / currentSize);\n    }\n    return pathData;\n  }\n\n  private _adjustAlign(pathData: SVGPathData): SVGPathData {\n    const { x, y, width, height } = this._sizeAndPos(pathData);\n\n    const dX = x - (this._size - width) / 2;\n    const dY = y - (this._size - height) / 2;\n\n    return pathData.translate(-dX, -dY);\n  }\n\n  private _parseTransformAttr(transform?: string): SvgTransformation[] {\n    if (!transform) return [];\n\n    const output: SvgTransformation[] = [];\n\n    const transformations = transform.match(/(rotate|translate|scale|skewX|skewY|matrix)\\s*\\(([^)]*)\\)\\s*/g) || [];\n    for (let i = 0; i < transformations.length; i++) {\n      const transformation = transformations[i];\n      const matched = transformation.match(/[\\w.-]+/g);\n      if (!matched) continue;\n\n      const [transformType, ...data] = matched;\n      switch (transformType) {\n        case 'rotate': {\n          const a = parseFloat(data[0]);\n          const x = data[1] ? parseFloat(data[1]) : undefined;\n          const y = data[2] ? parseFloat(data[2]) : undefined;\n          output.push({\n            attribute: transformation,\n            function: SVGPathDataTransformer.ROTATE(a, x, y),\n          });\n          break;\n        }\n        case 'translate': {\n          const x = parseFloat(data[0]);\n          const y = data[1] ? parseFloat(data[1]) : undefined;\n          output.push({\n            attribute: transformation,\n            function: SVGPathDataTransformer.TRANSLATE(x, y),\n          });\n          break;\n        }\n        case 'skewX': {\n          const a = parseFloat(data[0]);\n          output.push({\n            attribute: transformation,\n            function: SVGPathDataTransformer.SKEW_X(a),\n          });\n          break;\n        }\n        case 'skewY': {\n          const a = parseFloat(data[0]);\n          output.push({\n            attribute: transformation,\n            function: SVGPathDataTransformer.SKEW_Y(a),\n          });\n          break;\n        }\n        case 'matrix': {\n          const rest = data.map(parseFloat) as [number, number, number, number, number, number];\n          output.push({\n            attribute: transformation,\n            function: SVGPathDataTransformer.MATRIX(...rest),\n          });\n          break;\n        }\n      }\n    }\n\n    return output;\n  }\n\n  private _parseViewBoxAttr(viewBox?: string): SvgTransformation[] {\n    if (!viewBox) return [];\n\n    try {\n      const values = viewBox.split(/\\s*,*\\s|\\s,*\\s*|,/);\n\n      const dX = parseFloat(values[0]) || 0;\n      const dY = parseFloat(values[1]) || 0;\n      const width = parseFloat(values[2]);\n      const height = parseFloat(values[3]);\n\n      const output: SvgTransformation[] = [];\n\n      if (dX !== 0 || dY !== 0) {\n        output.push({\n          attribute: `translate(${-dX}, ${-dY})`,\n          function: SVGPathDataTransformer.TRANSLATE(-dX, -dY),\n        });\n      }\n\n      if (width !== this._size || height !== this._size) {\n        output.push({\n          attribute: `scale(${this._size / width}, ${this._size / height})`,\n          function: SVGPathDataTransformer.SCALE(this._size / width, this._size / height),\n        });\n      }\n      return output;\n    } catch (error: any) {\n      console.error(error);\n      return [];\n    }\n  }\n\n  _transform(chunk: BufferWithMeta<FileMetadata>, _encoding: any, callback: TransformCallback) {\n    const parser = sax.parser(true);\n    const parents: (sax.Tag | sax.QualifiedTag)[] = [];\n    const transforms: SvgTransformation[][] = [];\n    const paths: string[] = [];\n\n    function pushTransform(_newTransformations: SvgTransformation[]) {\n      const index = parents.length - 1;\n      transforms[index] = [...(transforms[index] || []), ..._newTransformations];\n    }\n\n    function applyTransformAndPush(path: string) {\n      const svgPathData = new SVGPathData(path).toAbs();\n\n      const transformations = transforms.flat(2);\n      for (let i = 0; i < transformations.length; i++) {\n        const transformation = transformations[i];\n        svgPathData.transform(transformation.function);\n      }\n\n      paths.push(svgPathData.encode());\n    }\n\n    parser.onerror = (error: Error) => {\n      callback(error);\n    }\n\n    parser.onopentag = (tag: sax.Tag | sax.QualifiedTag) => {\n      parents.push(tag);\n\n      pushTransform(this._parseTransformAttr(tag.attributes.transform as string));\n\n      switch (tag.name) {\n        case 'svg':\n          pushTransform(this._parseViewBoxAttr(tag.attributes.viewBox as string));\n          break;\n        case 'path':\n          applyTransformAndPush(tag.attributes.d as string);\n          break;\n        case 'rect':\n          applyTransformAndPush(svgRectToPath(tag.attributes));\n          break;\n        case 'line':\n          applyTransformAndPush(svgLineToPath(tag.attributes));\n          break;\n        case 'polyline':\n        case 'polygon':\n          applyTransformAndPush(`M${tag.attributes.points}`);\n          break;\n        case 'circle':\n        case 'ellipse':\n          applyTransformAndPush(svgCircleToPath(tag.attributes));\n          break;\n        case 'g':\n          break;\n        default:\n          console.warn(`Unsupported tag ${tag.name}`);\n      }\n    }\n\n    parser.onclosetag = () => {\n      parents.pop();\n      transforms.pop();\n    }\n\n    parser.onend = () => {\n      const commands: SVGCommand[] = [];\n      const parser = new SVGPathDataParser();\n\n      for (let i = 0; i < paths.length; i++) {\n        parser.parse(paths[i], commands);\n      }\n      parser.finish(commands);\n\n      let svgPathData = new SVGPathData(commands);\n      svgPathData = this._adjustSize(svgPathData);\n      svgPathData = this._adjustAlign(svgPathData);\n\n      const { x, y, width, height } = this._sizeAndPos(svgPathData);\n\n      const path = svgPathData.round(100).encode();\n\n      const meta: SymbolMeta = {\n        index: chunk.metadata.index,\n        name: chunk.metadata.name,\n        codepoint: this._startUnicode + chunk.metadata.index,\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n      }\n\n      callback(null, populateMetadata(Buffer.from(path), meta));\n    }\n\n    const svg = chunk.toString('utf8');\n    parser.write(svg);\n    parser.end();\n  }\n}","export function slugify(value: string): string {\n  value = value.trim();\n  if (value.includes(' ')) {\n    value = value.toLowerCase().replace(/\\s+/g, '-');\n  } else if (/[A-Z]/.test(value)) {\n    value = value.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  return value;\n}","/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n *\n * @param input The Unicode input string (UCS-2).\n * @returns {number[]} The new array of code points.\n */\nexport function ucs2decode(input: string): number[] {\n  const output: number[] = [];\n  let counter = 0;\n  const length = input.length;\n\n  while (counter < length) {\n    const value = input.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      const extra = input.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) {\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n *\n * @param {number[]} codePoints The array of numeric code points.\n * @returns {string} The new Unicode string (UCS-2).\n */\nexport function ucs2encode(codePoints: number[]): string {\n  return String.fromCodePoint(...codePoints);\n}\n\n/**\n * Encode symbol to represent in HTML page\n * @param codePoints\n */\nexport function encodeHtml(codePoints: number[]): string {\n  return codePoints.map(code => `&#x${(code).toString(16).toUpperCase()};`).join('');\n}\n\n/**\n * Decode HTML to codepoints\n * @param htmlCharacter\n */\nexport function decodeHtml(htmlCharacter: string): number[] {\n  return htmlCharacter\n    .split('&#x')\n    .map((source, index, codes) => {\n      if (index === codes.length - 1) {\n        return null;\n      }\n      return parseInt(source.slice(0, -1), 16);\n    })\n    .filter<number>(code => typeof code === 'number');\n}","import { Transform, TransformCallback } from 'node:stream';\nimport { SVGPathData } from 'svg-pathdata';\nimport { slugify } from '../utils/slugify.ts';\nimport { BufferWithMeta, SymbolMeta } from '../types/types.ts';\nimport { encodeHtml } from '../utils/coders.ts';\n\nexport class StreamSvgFontTransformer extends Transform {\n\n  private readonly _fontName: string;\n\n  private readonly _metadata?: string;\n\n  private _isHeaderRendered = false;\n\n  constructor(fontName: string, metadata?: string) {\n    super({ objectMode: true });\n\n    this._fontName = fontName;\n    this._metadata = metadata;\n  }\n\n  private _header(symbolSize: number): string {\n    const slug = slugify(this._fontName);\n    let output = '<?xml version=\"1.0\" standalone=\"no\"?>\\n';\n    output += '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >\\n';\n    output += '<svg xmlns=\"http://www.w3.org/2000/svg\">\\n';\n\n    if (this._metadata) {\n      output += `<metadata>${this._metadata}</metadata>\\n`;\n    }\n\n    output += '<defs>\\n';\n    output += `  <font id=\"${slug}\" horiz-adv-x=\"${symbolSize}\">\\n`;\n    output += `    <font-face\\n`;\n    output += `        font-family=\"${this._fontName}\"\\n`;\n    output += `        units-per-em=\"${symbolSize}\"\\n`;\n    output += `        ascent=\"-${symbolSize}\"\\n`;\n    output += `        descent=\"0\"\\n`;\n    output += `        font-size=\"16\"\\n`;\n    output += `        widths=\"16\"\\n`;\n    output += `        font-weight=\"400\"\\n`;\n    output += `        font-style=\"Regular\"\\n`;\n    output += `    />\\n`;\n    output += `    <missing-glyph horiz-adv-x=\"0\" />\\n`;\n\n    return output;\n  }\n\n  _transform(chunk: BufferWithMeta<SymbolMeta>, _encoding: BufferEncoding, callback: TransformCallback) {\n    const size = Math.max(chunk.metadata.width, chunk.metadata.height);\n    let output = '';\n    if (!this._isHeaderRendered) {\n      output += this._header(size);\n      this._isHeaderRendered = true;\n    }\n\n    const path = new SVGPathData(chunk.toString('utf8'))\n      .scale(1, -1)\n      .encode();\n\n    output += `    <glyph\\n`;\n    output += `        glyph-name=\"${chunk.metadata.name}\"\\n`;\n    output += `        unicode=\"${encodeHtml([chunk.metadata.codepoint])}\"\\n`;\n    output += `        horiz-adv-x=\"${size}\"\\n`;\n    output += `        d=\"${path}\"\\n`;\n    output += `    />\\n`;\n\n    callback(null, output);\n  }\n\n  _flush(callback: TransformCallback) {\n    let output = '';\n    output += `  </font>\\n`;\n    output += `</defs>\\n`;\n    output += `</svg>\\n`;\n\n    callback(null, output);\n  }\n}","import { Writable } from 'node:stream';\nimport { SymbolMetadata } from '../../types/types.ts';\nimport { StreamDirectoryReader } from '../../streams/stream-directory-reader.ts';\nimport { StreamPrepareTransformer } from '../../streams/stream-prepare-transformer.ts';\nimport { StreamSvgFontTransformer } from '../../streams/stream-svg-font-transformer.ts';\nimport { AppConfig } from '../../types/app-config.ts';\n\nexport async function generateFontSvg(config: Omit<AppConfig, 'output'>, _iconsInfo: SymbolMetadata[]): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    const filesReadStream = new StreamDirectoryReader(config.input);\n    const prepareStream = new StreamPrepareTransformer();\n    const svgFontStream = new StreamSvgFontTransformer(config.name);\n\n    let result = '';\n    const writeStream = new Writable({\n      write(chunk: any, _encoding: BufferEncoding, callback: (error?: (Error | null)) => void) {\n        result += chunk.toString();\n        callback();\n      },\n      final(callback: (error?: (Error | null)) => void) {\n        resolve(result);\n        callback();\n      },\n      destroy(error: Error | null, callback: (error?: (Error | null)) => void) {\n        if (error) {\n          reject(error);\n        }\n        callback(error);\n      }\n    });\n\n    filesReadStream.pipe(prepareStream).pipe(svgFontStream).pipe(writeStream);\n  })\n}\n\n","export interface Ligature {\n  ligature: string;\n  unicode: number[];\n  glyph: Glyph;\n}\n\nexport interface Panose {\n  familyType: number;\n  serifStyle: number;\n  weight: number;\n  proportion: number;\n  contrast: number;\n  strokeVariation: number;\n  armStyle: number;\n  letterform: number;\n  midline: number;\n  xHeight: number;\n}\n\nexport interface LigatureGroup {\n  codePoint: number;\n  ligatures: Ligature[];\n  startGlyph: Glyph;\n}\n\nexport class Font {\n  id: string = '';\n  description: string = '';\n  url: string = '';\n  ascent: number = 850;\n  copyright: string = '';\n  createdDate: Date = new Date();\n  glyphs: Glyph[] = [];\n  missingGlyph?: {\n    d?: string;\n    width?: number;\n    height?: number;\n  }\n  ligatures: Ligature[] = [];\n  codePoints: { [key: number]: Glyph } = {};\n  isFixedPitch: number = 0;\n  italicAngle: number = 0;\n  familyClass: number = 0; // No Classification\n  familyName: string = '';\n  subfamilyName: string = '';\n  fsSelection: number = 0x40 | 0x80;\n  fsType: number = 0;\n  lowestRecPPEM: number = 8;\n  macStyle: number = 0;\n  modifiedDate: Date = new Date();\n  panose: Panose = {\n    familyType: 2,\n    serifStyle: 0,\n    weight: 5,\n    proportion: 3,\n    contrast: 0,\n    strokeVariation: 0,\n    armStyle: 0,\n    letterform: 0,\n    midline: 0,\n    xHeight: 0,\n  };\n  revision: number = 1;\n  sfntNames: SfntName[] = [];\n  stretch: string = 'normal';\n  metadata?: string;\n  underlineThickness: number = 0;\n  unitsPerEm: number = 1000;\n  weightClass: number | string = 400; // normal\n  width: number = 1000;\n  widthClass: number = 5; // Medium (normal)\n  ySubscriptXOffset: number = 0;\n  ySuperscriptXOffset: number = 0;\n  horizOriginX: number = 0;\n  horizOriginY: number = 0;\n  vertOriginX: number = 0;\n  vertOriginY: number = 0;\n  int_descent: number = -150;\n  xHeight: number = 0;\n  height: number = 0;\n  capHeight: number = 0;\n  ttf_glyph_size: number = 0;\n\n  private int_ySubscriptXSize?: number;\n  private int_ySubscriptYSize?: number;\n  private int_ySubscriptYOffset?: number;\n  private int_ySuperscriptXSize?: number;\n  private int_ySuperscriptYSize?: number;\n  private int_ySuperscriptYOffset?: number;\n  private int_yStrikeoutSize?: number;\n  private int_yStrikeoutPosition?: number;\n  private int_lineGap?: number;\n  private int_underlinePosition?: number;\n\n  get descent(): number {\n    return this.int_descent;\n  }\n\n  set descent(value: number) {\n    this.int_descent = parseInt(Math.round(-Math.abs(value)).toString(), 10);\n  }\n\n  get avgCharWidth(): number {\n    if (this.glyphs.length === 0) {\n      return 0;\n    }\n\n    const fullWith = this.glyphs.reduce<number>((acc, cur) => acc + cur.width, 0);\n    const advWidth = fullWith / this.glyphs.length;\n\n    return parseInt(advWidth.toString(), 10);\n  }\n\n  get ySubscriptXSize(): number {\n    return parseInt((this.int_ySubscriptXSize !== undefined ? this.int_ySubscriptXSize : (this.width * 0.6347)).toString(), 10);\n  }\n\n  set ySubscriptXSize(value: number) {\n    this.int_ySubscriptXSize = value;\n  }\n\n  get ySubscriptYSize(): number {\n    return parseInt((this.int_ySubscriptYSize !== undefined ? this.int_ySubscriptYSize : ((this.ascent - this.descent) * 0.7)).toString(), 10);\n  }\n\n  set ySubscriptYSize(value: number) {\n    this.int_ySubscriptYSize = value;\n  }\n\n  get ySubscriptYOffset(): number {\n    return parseInt((this.int_ySubscriptYOffset !== undefined ? this.int_ySubscriptYOffset : ((this.ascent - this.descent) * 0.14)).toString(), 10);\n  }\n\n  set ySubscriptYOffset(value: number) {\n    this.int_ySubscriptYOffset = value;\n  }\n\n  get ySuperscriptXSize(): number {\n    return parseInt((this.int_ySuperscriptXSize !== undefined ? this.int_ySuperscriptXSize : (this.width * 0.6347)).toString(), 10);\n  }\n\n  set ySuperscriptXSize(value: number) {\n    this.int_ySuperscriptXSize = value;\n  }\n\n  get ySuperscriptYSize(): number {\n    return parseInt((this.int_ySuperscriptYSize !== undefined ? this.int_ySuperscriptYSize : ((this.ascent - this.descent) * 0.7)).toString(), 10);\n  }\n\n  set ySuperscriptYSize(value: number) {\n    this.int_ySuperscriptYSize = value;\n  }\n\n  get ySuperscriptYOffset(): number {\n    return parseInt((this.int_ySuperscriptYOffset !== undefined ? this.int_ySuperscriptYOffset : ((this.ascent - this.descent) * 0.48)).toString(), 10);\n  }\n\n  set ySuperscriptYOffset(value: number) {\n    this.int_ySuperscriptYOffset = value;\n  }\n\n  get yStrikeoutSize(): number {\n    return parseInt((this.int_yStrikeoutSize !== undefined ? this.int_yStrikeoutSize : ((this.ascent - this.descent) * 0.049)).toString(), 10);\n  }\n\n  set yStrikeoutSize(value: number) {\n    this.int_yStrikeoutSize = value;\n  }\n\n  get yStrikeoutPosition(): number {\n    return parseInt((this.int_yStrikeoutPosition !== undefined ? this.int_yStrikeoutPosition : ((this.ascent - this.descent) * 0.258)).toString(), 10);\n  }\n\n  set yStrikeoutPosition(value: number) {\n    this.int_yStrikeoutPosition = value;\n  }\n\n  get minLsb(): number {\n    const minValue = Math.min(...this.glyphs.map(g => g.xMin));\n    return parseInt(minValue.toString(), 10);\n  }\n\n  get minRsb(): number {\n    if (!this.glyphs.length) {\n      return parseInt(this.width.toString(), 10);\n    }\n\n    const value = this.glyphs.reduce((minRsb, glyph) => Math.min(minRsb, glyph.width - glyph.xMax), 0)\n\n    return parseInt(value.toString(), 10);\n  }\n\n  get xMin(): number {\n    if (!this.glyphs.length) {\n      return this.width;\n    }\n    return this.glyphs.reduce((xMin, glyph) => Math.min(xMin, glyph.xMin), 0);\n  }\n\n  get yMin(): number {\n    if (!this.glyphs.length) {\n      // noinspection JSSuspiciousNameCombination\n      return this.width;\n    }\n    return this.glyphs.reduce((yMin, glyph) => Math.min(yMin, glyph.yMin), 0);\n  }\n\n  get xMax(): number {\n    if (!this.glyphs.length) {\n      return this.width;\n    }\n    return this.glyphs.reduce((xMax, glyph) => Math.max(xMax, glyph.xMax), 0);\n  }\n\n  get yMax(): number {\n    if (!this.glyphs.length) {\n      // noinspection JSSuspiciousNameCombination\n      return this.width;\n    }\n    return this.glyphs.reduce((yMax, glyph) => Math.max(yMax, glyph.yMax), 0);\n  }\n\n  get avgWidth(): number {\n    const len = this.glyphs.length;\n    if (len === 0) {\n      return this.width;\n    }\n    const sumWidth = this.glyphs.reduce((sumWidth, glyph) => sumWidth + glyph.width, 0);\n    return Math.round(sumWidth / len);\n  }\n\n  get maxWidth(): number {\n    if (!this.glyphs.length) return this.width;\n    return this.glyphs.reduce((maxWidth, glyph) => Math.max(maxWidth, glyph.width), 0);\n  }\n\n  get maxExtent(): number {\n    if (!this.glyphs.length) {\n      return this.width;\n    }\n    return this.glyphs.reduce((maxExtent, glyph) => Math.max(maxExtent, glyph.xMax), 0);\n  }\n\n  get lineGap(): number {\n    return parseInt((this.int_lineGap !== undefined ? this.int_lineGap : ((this.ascent - this.descent) * 0.09)).toString(), 10);\n  }\n\n  set lineGap(value: number) {\n    this.int_lineGap = value;\n  }\n\n  get underlinePosition(): number {\n    return parseInt((this.int_underlinePosition !== undefined ? this.int_underlinePosition : ((this.ascent - this.descent) * 0.01)).toString(), 10);\n  }\n\n  set underlinePosition(value: number) {\n    this.int_underlinePosition = value;\n  }\n}\n\nexport class Glyph {\n  contours: Contour[] = [];\n  d: string = '';\n  id: number = 0;\n  codes: any[] = [];\n  unicode: number[] = [];\n  ligatureCodes: number[] = [];\n  character: string = '';\n  ligature: string = '';\n  height: number = 0;\n  name: string = '';\n  width: number = 0;\n  ttfContours: Point[][] = [];\n  canonical?: Glyph;\n  ttf_x: number[] = [];\n  ttf_y: number[] = [];\n  ttf_flags: number[] = [];\n  ttf_size: number = 0;\n\n  get xMin(): number {\n    let xMin = 0;\n    let hasPoints = false;\n\n    for (let i = 0; i < this.contours.length; i++) {\n      const contour = this.contours[i];\n\n      for (let j = 0; j < contour.points.length; j++) {\n        const point = contour.points[j];\n        xMin = Math.min(xMin, Math.floor(point.x));\n        hasPoints = true;\n      }\n    }\n\n    if (xMin < -32768) {\n      throw new Error('xMin value for glyph ' + (this.name ? ('\"' + this.name + '\"') : JSON.stringify(this.codes)) +\n        ' is out of bounds (actual ' + xMin + ', expected -32768..32767, d=\"' + this.d + '\")');\n    }\n    return hasPoints ? xMin : 0;\n  }\n\n  get xMax(): number {\n    let xMax = 0;\n    let hasPoints = false;\n\n    for (let i = 0; i < this.contours.length; i++) {\n      const contour = this.contours[i];\n\n      for (let j = 0; j < contour.points.length; j++) {\n        const point = contour.points[j];\n        xMax = Math.max(xMax, -Math.floor(-point.x));\n        hasPoints = true;\n      }\n    }\n\n    if (xMax > 32767) {\n      throw new Error('xMax value for glyph ' + (this.name ? ('\"' + this.name + '\"') : JSON.stringify(this.codes)) +\n        ' is out of bounds (actual ' + xMax + ', expected -32768..32767, d=\"' + this.d + '\")');\n    }\n    return hasPoints ? xMax : this.width;\n  }\n\n  get yMin(): number {\n    let yMin = 0;\n    let hasPoints = false;\n\n    for (let i = 0; i < this.contours.length; i++) {\n      const contour = this.contours[i];\n\n      for (let j = 0; j < contour.points.length; j++) {\n        const point = contour.points[j];\n        yMin = Math.min(yMin, Math.floor(point.y));\n        hasPoints = true;\n      }\n    }\n\n    if (yMin < -32768) {\n      throw new Error('yMin value for glyph ' + (this.name ? ('\"' + this.name + '\"') : JSON.stringify(this.codes)) +\n        ' is out of bounds (actual ' + yMin + ', expected -32768..32767, d=\"' + this.d + '\")');\n    }\n    return hasPoints ? yMin : 0;\n  }\n\n  get yMax(): number {\n    let yMax = 0;\n    let hasPoints = false;\n\n    for (let i = 0; i < this.contours.length; i++) {\n      const contour = this.contours[i];\n\n      for (let j = 0; j < contour.points.length; j++) {\n        const point = contour.points[j];\n        yMax = Math.max(yMax, -Math.floor(-point.y));\n        hasPoints = true;\n      }\n    }\n\n    if (yMax > 32767) {\n      throw new Error('yMax value for glyph ' + (this.name ? ('\"' + this.name + '\"') : JSON.stringify(this.codes)) +\n        ' is out of bounds (actual ' + yMax + ', expected -32768..32767, d=\"' + this.d + '\")');\n    }\n    return hasPoints ? yMax : 0;\n  }\n}\n\nexport class Contour {\n  points: Point[] = [];\n}\n\nexport class Point {\n  onCurve: boolean = true;\n  x: number = 0;\n  y: number = 0;\n}\n\nexport class SfntName {\n  id: number = 0;\n  value: string = '';\n}\n\n\n","/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n *\n * @param input The Unicode input string (UCS-2).\n * @returns {number[]} The new array of code points.\n */\nexport function ucs2decode(input: string): number[] {\n  const output: number[] = [];\n  let counter = 0;\n  const length = input.length;\n\n  while (counter < length) {\n    const value = input.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      const extra = input.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) {\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n *\n * @param {number[]} codePoints The array of numeric code points.\n * @returns {string} The new Unicode string (UCS-2).\n */\nexport function ucs2encode(codePoints: number[]): string {\n  return String.fromCodePoint(...codePoints);\n}\n","// Light implementation of binary buffer with helpers for easy access.\n//\n'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined');\n\nfunction createArray(size) {\n  return TYPED_OK ? new Uint8Array(size) : Array(size);\n}\n\n\nfunction MicroBuffer(buffer, start, length) {\n\n  var isInherited = buffer instanceof MicroBuffer;\n\n  this.buffer = isInherited ?\n    buffer.buffer\n  :\n    (typeof buffer === 'number' ? createArray(buffer) : buffer);\n\n  this.start = (start || 0) + (isInherited ? buffer.start : 0);\n  this.length = length || (this.buffer.length - this.start);\n  this.offset = 0;\n\n  this.isTyped = !Array.isArray(this.buffer);\n}\n\n\nMicroBuffer.prototype.getUint8 = function (pos) {\n  return this.buffer[pos + this.start];\n};\n\n\nMicroBuffer.prototype.getUint16 = function (pos, littleEndian) {\n  var val;\n  if (littleEndian) {\n    throw new Error('not implemented');\n  } else {\n    val = this.buffer[pos + 1 + this.start];\n    val += this.buffer[pos + this.start] << 8 >>> 0;\n  }\n  return val;\n};\n\n\nMicroBuffer.prototype.getUint32 = function (pos, littleEndian) {\n  var val;\n  if (littleEndian) {\n    throw new Error('not implemented');\n  } else {\n    val = this.buffer[pos + 1 + this.start] << 16;\n    val |= this.buffer[pos + 2 + this.start] << 8;\n    val |= this.buffer[pos + 3 + this.start];\n    val += this.buffer[pos + this.start] << 24 >>> 0;\n  }\n  return val;\n};\n\n\nMicroBuffer.prototype.setUint8 = function (pos, value) {\n  this.buffer[pos + this.start] = value & 0xFF;\n};\n\n\nMicroBuffer.prototype.setUint16 = function (pos, value, littleEndian) {\n  var offset = pos + this.start;\n  var buf = this.buffer;\n  if (littleEndian) {\n    buf[offset] = value & 0xFF;\n    buf[offset + 1] = (value >>> 8) & 0xFF;\n  } else {\n    buf[offset] = (value >>> 8) & 0xFF;\n    buf[offset + 1] = value & 0xFF;\n  }\n};\n\n\nMicroBuffer.prototype.setUint32 = function (pos, value, littleEndian) {\n  var offset = pos + this.start;\n  var buf = this.buffer;\n  if (littleEndian) {\n    buf[offset] = value & 0xFF;\n    buf[offset + 1] = (value >>> 8) & 0xFF;\n    buf[offset + 2] = (value >>> 16) & 0xFF;\n    buf[offset + 3] = (value >>> 24) & 0xFF;\n  } else {\n    buf[offset] = (value >>> 24) & 0xFF;\n    buf[offset + 1] = (value >>> 16) & 0xFF;\n    buf[offset + 2] = (value >>> 8) & 0xFF;\n    buf[offset + 3] = value & 0xFF;\n  }\n};\n\n\nMicroBuffer.prototype.writeUint8 = function (value) {\n  this.buffer[this.offset + this.start] = value & 0xFF;\n  this.offset++;\n};\n\n\nMicroBuffer.prototype.writeInt8 = function (value) {\n  this.setUint8(this.offset, (value < 0) ? 0xFF + value + 1 : value);\n  this.offset++;\n};\n\n\nMicroBuffer.prototype.writeUint16 = function (value, littleEndian) {\n  this.setUint16(this.offset, value, littleEndian);\n  this.offset += 2;\n};\n\n\nMicroBuffer.prototype.writeInt16 = function (value, littleEndian) {\n  this.setUint16(this.offset, (value < 0) ? 0xFFFF + value + 1 : value, littleEndian);\n  this.offset += 2;\n};\n\n\nMicroBuffer.prototype.writeUint32 = function (value, littleEndian) {\n  this.setUint32(this.offset, value, littleEndian);\n  this.offset += 4;\n};\n\n\nMicroBuffer.prototype.writeInt32 = function (value, littleEndian) {\n  this.setUint32(this.offset, (value < 0) ? 0xFFFFFFFF + value + 1 : value, littleEndian);\n  this.offset += 4;\n};\n\n\n// get current position\n//\nMicroBuffer.prototype.tell = function () {\n  return this.offset;\n};\n\n\n// set current position\n//\nMicroBuffer.prototype.seek = function (pos) {\n  this.offset = pos;\n};\n\n\nMicroBuffer.prototype.fill = function (value) {\n  var index = this.length - 1;\n  while (index >= 0) {\n    this.buffer[index + this.start] = value;\n    index--;\n  }\n};\n\n\nMicroBuffer.prototype.writeUint64 = function (value) {\n  // we canot use bitwise operations for 64bit values because of JavaScript limitations,\n  // instead we should divide it to 2 Int32 numbers\n  // 2^32 = 4294967296\n  var hi = Math.floor(value / 4294967296);\n  var lo = value - hi * 4294967296;\n  this.writeUint32(hi);\n  this.writeUint32(lo);\n};\n\n\nMicroBuffer.prototype.writeBytes = function (data) {\n  var buffer = this.buffer;\n  var offset = this.offset + this.start;\n  if (this.isTyped) {\n    buffer.set(data, offset);\n  } else {\n    for (var i = 0; i < data.length; i++) {\n      buffer[i + offset] = data[i];\n    }\n  }\n  this.offset += data.length;\n};\n\n\nMicroBuffer.prototype.toString = function (offset, length) {\n  // default values if not set\n  offset = (offset || 0);\n  length = length || (this.length - offset);\n\n  // add buffer shift\n  var start = offset + this.start;\n  var end = start + length;\n\n  var string = '';\n  for (var i = start; i < end; i++) {\n    string += String.fromCharCode(this.buffer[i]);\n  }\n  return string;\n};\n\n\nMicroBuffer.prototype.toArray = function () {\n  if (this.isTyped) {\n    return this.buffer.subarray(this.start, this.start + this.length);\n  }\n\n  return this.buffer.slice(this.start, this.start + this.length);\n};\n\n\nmodule.exports = MicroBuffer;\n","export class Point {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(point: Point): Point {\n    return new Point(this.x + point.x, this.y + point.y);\n  }\n\n  sub(point: Point): Point {\n    return new Point(this.x - point.x, this.y - point.y);\n  }\n\n  mul(value: number): Point {\n    return new Point(this.x * value, this.y * value);\n  }\n\n  div(value: number): Point {\n    return new Point(this.x / value, this.y / value);\n  }\n\n  dist(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  sqr(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n}\n\n/*\n * Check if 3 points are in line, and second in the middle.\n * Used to replace quad curves with lines or join lines\n *\n */\nexport function isInLine(p1: Point, m: Point, p2: Point, accuracy: number): boolean {\n  const a = p1.sub(m).sqr();\n  const b = p2.sub(m).sqr();\n  const c = p1.sub(p2).sqr();\n\n  // control point not between anchors\n  if ((a > (b + c)) || (b > (a + c))) {\n    return false;\n  }\n\n  // count distance via scalar multiplication\n  const distance = Math.sqrt(Math.pow((p1.x - m.x) * (p2.y - m.y) - (p2.x - m.x) * (p1.y - m.y), 2) / c);\n\n  return distance < accuracy;\n}\n\n\n","import { Point, isInLine } from '../math.ts';\n\nexport interface PointType {\n  x: number;\n  y: number;\n  onCurve: boolean;\n}\n\nexport function simplify(contours: PointType[][], accuracy: number): PointType[][] {\n  return contours.map((contour: PointType[]) => {\n    let curr: PointType, prev: PointType, next: PointType;\n\n    for (let i = contour.length - 2; i > 1; i--) {\n      prev = contour[i - 1];\n      next = contour[i + 1];\n      curr = contour[i];\n\n      if (prev.onCurve && next.onCurve) {\n        const p = new Point(curr.x, curr.y);\n        const pPrev = new Point(prev.x, prev.y);\n        const pNext = new Point(next.x, next.y);\n        if (isInLine(pPrev, p, pNext, accuracy)) {\n          contour.splice(i, 1);\n        }\n      }\n    }\n    return contour;\n  });\n}\n\nexport function interpolate(contours: PointType[][], accuracy: number): PointType[][] {\n  return contours.map<PointType[]>((contour: PointType[]) => {\n    const resContour: PointType[] = [];\n\n    for (let i = 0; i < contour.length; i++) {\n      const point: PointType = contour[i];\n      if (i === 0 || i === (contour.length - 1)) {\n        resContour.push(point);\n        continue;\n      }\n\n      const prev = contour[i - 1];\n      const next = contour[i + 1];\n\n      if (!prev.onCurve && point.onCurve && !next.onCurve) {\n        const p = new Point(point.x, point.y);\n        const pPrev = new Point(prev.x, prev.y);\n        const pNext = new Point(next.x, next.y);\n        if (pPrev.add(pNext).div(2).sub(p).dist() < accuracy) {\n          continue;\n        }\n      }\n      resContour.push(point);\n    }\n    return resContour;\n  });\n}\n\nexport function roundPoints(contours: PointType[][]): PointType[][] {\n  return contours.map((contour: PointType[]) => {\n    return contour.map((point: PointType) => {\n      return { x: Math.round(point.x), y: Math.round(point.y), onCurve: point.onCurve };\n    });\n  });\n}\n\nexport function removeClosingReturnPoints(contours: PointType[][]): PointType[][] {\n  return contours.map((contour: PointType[]) => {\n    const length = contour.length;\n\n    if (length > 1 &&\n      contour[0].x === contour[length - 1].x &&\n      contour[0].y === contour[length - 1].y) {\n      contour.splice(length - 1);\n    }\n    return contour;\n  });\n}\n\nexport function toRelative(contours: PointType[][]): PointType[][] {\n  let prevPoint = { x: 0, y: 0 };\n  const resContours: PointType[][] = [];\n  let resContour: PointType[];\n\n  for (let i = 0; i < contours.length; i++) {\n    const contour = contours[i];\n\n    resContour = [];\n    resContours.push(resContour);\n    for (let j = 0; j < contour.length; j++) {\n      const point = contour[j];\n      resContour.push({\n        x: point.x - prevPoint.x,\n        y: point.y - prevPoint.y,\n        onCurve: point.onCurve\n      });\n      prevPoint = point;\n    }\n  }\n\n  return resContours;\n}\n\nexport function identifier(string: string, littleEndian?: boolean): number {\n  let result = 0;\n\n  for (let i = 0; i < string.length; i++) {\n    result = result << 8;\n    const index = littleEndian ? string.length - i - 1 : i;\n\n    result += string.charCodeAt(index);\n  }\n\n  return result;\n}\n\n","import { identifier } from '../utils.ts';\nimport ByteBuffer from 'microbuffer';\nimport { Font, Ligature, LigatureGroup } from '../../sfnt.ts';\n\nfunction createScript(): ByteBuffer {\n  /**\n   * +2 Script DefaultLangSys Offset\n   * +2 Script[0] LangSysCount (0)\n   */\n  const scriptRecord = 4;\n  /**\n   * +2 Script DefaultLangSys LookupOrder\n   * +2 Script DefaultLangSys ReqFeatureIndex\n   * +2 Script DefaultLangSys FeatureCount (0?)\n   * +2 Script Optional Feature Index[0]\n   */\n  const langSys = 8;\n\n  const length = scriptRecord + langSys;\n\n  const buffer = new ByteBuffer(length);\n\n  // Script Record\n  // Offset to the start of langSys from the start of scriptRecord\n  buffer.writeUint16(scriptRecord); // DefaultLangSys\n\n  // Number of LangSys entries other than the default (none)\n  buffer.writeUint16(0);\n\n  // LangSys record (DefaultLangSys)\n  // LookupOrder\n  buffer.writeUint16(0);\n  // ReqFeatureIndex -> only one required feature: all ligatures\n  buffer.writeUint16(0);\n  // Number of FeatureIndex values for this language system (excludes the required feature)\n  buffer.writeUint16(1);\n  // FeatureIndex for the first optional feature\n  buffer.writeUint16(0);\n\n  return buffer;\n}\n\nfunction createScriptList(): ByteBuffer {\n  /**\n   * +4 Tag\n   * +2 Offset\n   */\n  const scriptSize = 6;\n\n  // tags should be arranged alphabetically\n  const scripts: [string, ByteBuffer][] = [\n    ['DFLT', createScript()],\n    ['latn', createScript()]\n  ];\n\n  /**\n   * +2 Script count\n   */\n  const header = 2 + scripts.length * scriptSize;\n\n  const sizes = scripts.map((script) => script[1].length);\n  const tableLengths = sizes.reduce((result, count) => result + count, 0);\n\n  const length = header + tableLengths;\n\n  const buffer = new ByteBuffer(length);\n\n  // Script count\n  buffer.writeUint16(scripts.length);\n\n  // Write all ScriptRecords\n  let offset = header;\n\n  scripts.forEach(script => {\n    const name = script[0], table = script[1];\n\n    // Script identifier (DFLT/latn)\n    buffer.writeUint32(identifier(name));\n    // Offset to the ScriptRecord from start of the script list\n    buffer.writeUint16(offset);\n    // Increment offset by script table length\n    offset += table.length;\n  });\n\n  // Write all ScriptTables\n  scripts.forEach(script => {\n    const table = script[1];\n\n    buffer.writeBytes(table.buffer);\n  });\n\n  return buffer;\n}\n\n// Write one feature containing all ligatures\nfunction createFeatureList(): ByteBuffer {\n  /**\n   * +2 FeatureCount\n   * +4 FeatureTag[0]\n   * +2 Feature Offset[0]\n   */\n  const header = 8;\n  /**\n   * +2 FeatureParams[0]\n   * +2 LookupCount[0]\n   * +2 Lookup[0] LookupListIndex[0]\n   */\n  const length = header + 6;\n\n  const buffer = new ByteBuffer(length);\n\n  // FeatureCount\n  buffer.writeUint16(1);\n  // FeatureTag[0]\n  buffer.writeUint32(identifier('liga'));\n  // Feature Offset[0]\n  buffer.writeUint16(header);\n  // FeatureParams[0]\n  buffer.writeUint16(0);\n  // LookupCount[0]\n  buffer.writeUint16(1);\n  // Index into lookup table. Since we only have ligatures, the index is always 0\n  buffer.writeUint16(0);\n\n  return buffer;\n}\n\nfunction createLigatureCoverage(font: Font, ligatureGroups: LigatureGroup[]): ByteBuffer {\n  const glyphCount = ligatureGroups.length;\n\n  /**\n   * +2 CoverageFormat\n   * +2 GlyphCount\n   */\n  const length = 4 + (2 * glyphCount);\n\n  const buffer = new ByteBuffer(length);\n\n  // CoverageFormat\n  buffer.writeUint16(1);\n\n  // Length\n  buffer.writeUint16(glyphCount);\n\n  ligatureGroups.forEach(group => {\n    buffer.writeUint16(group.startGlyph.id);\n  });\n\n  return buffer;\n}\n\nfunction createLigatureTable(font: any, ligature: any): ByteBuffer {\n  const allCodePoints = font.codePoints;\n\n  const unicode = ligature.unicode;\n  /**\n   * +2 LigGlyph\n   * +2 CompCount\n   */\n  const length = 4 + 2 * (unicode.length - 1);\n\n  const buffer = new ByteBuffer(length);\n\n  // LigGlyph\n  let glyph = ligature.glyph;\n\n  buffer.writeUint16(glyph.id);\n\n  // CompCount\n  buffer.writeUint16(unicode.length);\n\n  // Compound glyphs (excluding first as it’s already in the coverage table)\n  for (let i = 1; i < unicode.length; i++) {\n    glyph = allCodePoints[unicode[i]];\n    buffer.writeUint16(glyph.id);\n  }\n\n  return buffer;\n}\n\nfunction createLigatureSet(font: Font, codePoint: number, ligatures: Ligature[]): ByteBuffer {\n  const ligatureTables: ByteBuffer[] = [];\n\n  ligatures.forEach(ligature => {\n    ligatureTables.push(createLigatureTable(font, ligature));\n  });\n\n  const tableLengths = ligatureTables.reduce((acc, l) => acc + l.length, 0);\n\n  /**\n   * +2 LigatureCount\n   */\n  let offset = 2 + 2 * ligatures.length;\n\n  const length = offset + tableLengths;\n\n  const buffer = new ByteBuffer(length);\n\n  // LigatureCount\n  buffer.writeUint16(ligatures.length);\n\n  // Ligature offsets\n  ligatureTables.forEach(table => {\n    // The offset to the current set, from SubstFormat\n    buffer.writeUint16(offset);\n    offset += table.length;\n  });\n\n  // Ligatures\n  ligatureTables.forEach(table => {\n    buffer.writeBytes(table.buffer);\n  });\n\n  return buffer;\n}\n\nfunction createLigatureList(font: Font, ligatureGroups: LigatureGroup[]): ByteBuffer {\n  const sets: ByteBuffer[] = [];\n\n  ligatureGroups.forEach(group => {\n    const set = createLigatureSet(font, group.codePoint, group.ligatures);\n\n    sets.push(set);\n  });\n\n  const setLengths = sets.reduce((acc, item) => acc + item.length, 0);\n\n  const coverage = createLigatureCoverage(font, ligatureGroups);\n\n  /**\n   * +2 Lookup type\n   * +2 Lokup flag\n   * +2 SubTableCount\n   * +2 SubTable[0] Offset\n   */\n  const tableOffset = 8;\n  /**\n   * +2 SubstFormat\n   * +2 Coverage offset\n   * +2 LigSetCount\n   */\n  let setOffset = 6  + 2 * sets.length;\n\n  const coverageOffset = setOffset + setLengths;\n\n  const length = tableOffset + coverageOffset + coverage.length;\n\n  const buffer = new ByteBuffer(length);\n\n  // Lookup type 4 – ligatures\n  buffer.writeUint16(4);\n\n  // Lookup flag – empty\n  buffer.writeUint16(0);\n\n  // Subtable count\n  buffer.writeUint16(1);\n\n  // Subtable[0] offset\n  buffer.writeUint16(tableOffset);\n\n  // SubstFormat\n  buffer.writeUint16(1);\n\n  // Coverage\n  buffer.writeUint16(coverageOffset);\n\n  // LigSetCount\n  buffer.writeUint16(sets.length);\n\n  sets.forEach(set => {\n    // The offset to the current set, from SubstFormat\n    buffer.writeUint16(setOffset);\n    setOffset += set.length;\n  });\n\n  sets.forEach((set) => {\n    buffer.writeBytes(set.buffer);\n  });\n\n  buffer.writeBytes(coverage.buffer);\n\n  return buffer;\n}\n\n// Add a lookup for each ligature\nfunction createLookupList(font: Font): ByteBuffer {\n  const ligatures = font.ligatures;\n\n  const groupedLigatures: { [key: number]: Ligature[] } = {};\n\n  // Group ligatures by first code point\n  ligatures.forEach(ligature => {\n    const first = ligature.unicode[0];\n\n    if (!(first in groupedLigatures)) {\n      groupedLigatures[first] = [];\n    }\n    groupedLigatures[first].push(ligature);\n  });\n\n  const ligatureGroups: LigatureGroup[] = [];\n\n  Object.entries(groupedLigatures).forEach(([_codePoint, ligatures]) => {\n    const codePoint = parseInt(_codePoint, 10);\n    // Order ligatures by length, descending\n    ligatures.sort((ligA, ligB) => ligB.unicode.length - ligA.unicode.length);\n    ligatureGroups.push({\n      codePoint: codePoint,\n      ligatures: ligatures,\n      startGlyph: font.codePoints[codePoint]\n    });\n  });\n\n  ligatureGroups.sort((a, b) => a.startGlyph.id - b.startGlyph.id);\n  /**\n   * +2 Lookup count\n   * +2 Lookup[0] offset\n   */\n  const offset = 4;\n\n  const set = createLigatureList(font, ligatureGroups);\n\n  const length = offset + set.length;\n\n  const buffer = new ByteBuffer(length);\n\n  // Lookup count\n  buffer.writeUint16(1);\n\n  // Lookup[0] offset\n  buffer.writeUint16(offset);\n\n  // Lookup[0]\n  buffer.writeBytes(set.buffer);\n\n  return buffer;\n}\n\nexport default function createGSUB(font: Font): ByteBuffer {\n  const scriptList = createScriptList();\n  const featureList = createFeatureList();\n  const lookupList = createLookupList(font);\n\n  const lists: ByteBuffer[] = [scriptList, featureList, lookupList];\n\n  /**\n   * +4 Version\n   */\n  let offset = 4  + 2 * lists.length;\n\n  // Calculate offsets\n  lists.forEach(list => {\n    (list as any)['_listOffset'] = offset;\n    offset += list.length;\n  });\n\n  const length = offset;\n  const buffer = new ByteBuffer(length);\n\n  // Version\n  buffer.writeUint32(0x00010000);\n\n  // Offsets\n  lists.forEach(list => {\n    buffer.writeUint16((list as any)['_listOffset']);\n  });\n\n  // List contents\n  lists.forEach(list => {\n    buffer.writeBytes(list.buffer);\n  });\n\n  return buffer;\n}\n\n\n","import { identifier } from '../utils.ts';\nimport ByteBuffer from 'microbuffer';\nimport { Font } from '../../sfnt.ts';\n\n/**\n * Get first glyph unicode\n * @param font\n */\nfunction getFirstCharIndex(font: Font): number {\n  const codePoints = Object.keys(font.codePoints).map(parseInt);\n\n  return Math.max(0, Math.min(0xffff, Math.abs(Math.min(...codePoints) || 0)));\n}\n\n/**\n * Get last glyph unicode\n * @param font\n */\nfunction getLastCharIndex(font: Font): number {\n  const codePoints = Object.keys(font.codePoints).map(parseInt);\n\n  return Math.max(0, Math.min(0xffff, Math.abs(Math.max(...codePoints) || 0)));\n}\n\n// OpenType spec: https://docs.microsoft.com/en-us/typography/opentype/spec/os2\nexport default function createOS2Table(font: Font): ByteBuffer {\n  // use at least 2 for ligatures and kerning\n  const maxContext = font.ligatures.reduce((a, l) => Math.max(a, l.unicode.length), 2);\n\n  const buf = new ByteBuffer(96);\n\n  // Version 5 is not supported in the Android 5 browser.\n  buf.writeUint16(4); // version\n  buf.writeInt16(font.avgWidth); // xAvgCharWidth\n  buf.writeUint16(typeof font.weightClass === 'number' ? font.weightClass : 400); // usWeightClass\n  buf.writeUint16(font.widthClass); // usWidthClass\n  buf.writeInt16(font.fsType); // fsType\n  buf.writeInt16(font.ySubscriptXSize); // ySubscriptXSize\n  buf.writeInt16(font.ySubscriptYSize); //ySubscriptYSize\n  buf.writeInt16(font.ySubscriptXOffset); // ySubscriptXOffset\n  buf.writeInt16(font.ySubscriptYOffset); // ySubscriptYOffset\n  buf.writeInt16(font.ySuperscriptXSize); // ySuperscriptXSize\n  buf.writeInt16(font.ySuperscriptYSize); // ySuperscriptYSize\n  buf.writeInt16(font.ySuperscriptXOffset); // ySuperscriptXOffset\n  buf.writeInt16(font.ySuperscriptYOffset); // ySuperscriptYOffset\n  buf.writeInt16(font.yStrikeoutSize); // yStrikeoutSize\n  buf.writeInt16(font.yStrikeoutPosition); // yStrikeoutPosition\n  buf.writeInt16(font.familyClass); // sFamilyClass\n  buf.writeUint8(font.panose.familyType); // panose.bFamilyType\n  buf.writeUint8(font.panose.serifStyle); // panose.bSerifStyle\n  buf.writeUint8(font.panose.weight); // panose.bWeight\n  buf.writeUint8(font.panose.proportion); // panose.bProportion\n  buf.writeUint8(font.panose.contrast); // panose.bContrast\n  buf.writeUint8(font.panose.strokeVariation); // panose.bStrokeVariation\n  buf.writeUint8(font.panose.armStyle); // panose.bArmStyle\n  buf.writeUint8(font.panose.letterform); // panose.bLetterform\n  buf.writeUint8(font.panose.midline); // panose.bMidline\n  buf.writeUint8(font.panose.xHeight); // panose.bXHeight\n  // TODO: This field is used to specify the Unicode blocks or ranges based on the 'cmap' table.\n  buf.writeUint32(0); // ulUnicodeRange1\n  buf.writeUint32(0); // ulUnicodeRange2\n  buf.writeUint32(0); // ulUnicodeRange3\n  buf.writeUint32(0); // ulUnicodeRange4\n  buf.writeUint32(identifier('PfEd')); // achVendID, equal to PfEd\n  buf.writeUint16(font.fsSelection); // fsSelection\n  buf.writeUint16(getFirstCharIndex(font)); // usFirstCharIndex\n  buf.writeUint16(getLastCharIndex(font)); // usLastCharIndex\n  buf.writeInt16(font.ascent); // sTypoAscender\n  buf.writeInt16(font.descent); // sTypoDescender\n  buf.writeInt16(font.lineGap); // lineGap\n  // Enlarge win acscent/descent to avoid clipping\n  // WinAscent - WinDecent should at least be equal to TypoAscender - TypoDescender + TypoLineGap:\n  // https://www.high-logic.com/font-editor/fontcreator/tutorials/font-metrics-vertical-line-spacing\n  buf.writeInt16(Math.max(font.yMax, font.ascent + font.lineGap)); // usWinAscent\n  buf.writeInt16(-Math.min(font.yMin, font.descent)); // usWinDescent\n  buf.writeInt32(1); // ulCodePageRange1, Latin 1\n  buf.writeInt32(0); // ulCodePageRange2\n  buf.writeInt16(font.xHeight); // sxHeight\n  buf.writeInt16(font.capHeight); // sCapHeight\n  buf.writeUint16(0); // usDefaultChar, pointing to missing glyph (always id=0)\n  buf.writeUint16(0); // usBreakChar, code=32 isn't guaranteed to be a space in icon fonts\n  buf.writeUint16(maxContext); // usMaxContext, use at least 2 for ligatures and kerning\n\n  return buf;\n}\n\n","import ByteBuffer from 'microbuffer';\nimport { Font, Glyph } from '../../sfnt.ts';\n\ninterface Segment {\n  start: number;\n  end: number;\n  length?: number;\n}\n\ninterface CodePoint {\n  unicode: number;\n  glyph: Glyph;\n}\n\ninterface TableHeader {\n  platformID: number;\n  encodingID: number;\n  table: ByteBuffer;\n}\n\nfunction getIDByUnicode(font: Font, unicode: number): number {\n  return font.codePoints[unicode] ? font.codePoints[unicode].id : 0;\n}\n\nfunction getSegments(font: Font, bounds?: number): Segment[] {\n  bounds = bounds || Number.MAX_VALUE;\n\n  const result: Segment[] = [];\n  let segment: Segment | undefined;\n\n  Object.keys(font.codePoints).forEach(unicode => {\n    const unicodeNum = parseInt(unicode, 10);\n    if (unicodeNum >= bounds) {\n      return false;\n    }\n    if (!segment || unicodeNum !== (segment.end + 1)) {\n      if (segment) {\n        result.push(segment);\n      }\n      segment = {\n        start: unicodeNum,\n        end: unicodeNum\n      };\n    } else {\n      segment.end = unicodeNum;\n    }\n  });\n\n  if (segment) {\n    result.push(segment);\n  }\n\n  result.forEach(segment => {\n    segment.length = segment.end - segment.start + 1;\n  });\n\n  return result;\n}\n\nfunction getCodePoints(codePoints: Font['codePoints'], bounds?: number): CodePoint[] {\n  bounds = bounds || Number.MAX_VALUE;\n\n  const result: CodePoint[] = [];\n\n  Object.entries(codePoints).forEach(([unicode, glyph]) => {\n    const unicodeNum = parseInt(unicode, 10);\n    if (unicodeNum > bounds) {\n      return false;\n    }\n    result.push({\n      unicode: unicodeNum,\n      glyph: glyph\n    });\n  });\n  return result;\n}\n\nfunction bufferForTable(format: number, length: number): ByteBuffer {\n  const fieldWidth = format === 8 || format === 10 || format === 12 || format === 13 ? 4 : 2;\n\n  length += (0\n    + fieldWidth // Format\n    + fieldWidth // Length\n    + fieldWidth // Language\n  );\n\n  const LANGUAGE = 0;\n  const buffer = new ByteBuffer(length);\n\n  const writer = fieldWidth === 4 ? buffer.writeUint32 : buffer.writeUint16;\n\n  buffer.writeUint16(format);\n  if (fieldWidth === 4) {\n    buffer.writeUint16(0);\n  }\n  writer.call(buffer, length);\n  writer.call(buffer, LANGUAGE);\n\n  return buffer;\n}\n\nfunction createFormat0Table(font: Font): ByteBuffer {\n  const FORMAT = 0;\n  const length = 0xff + 1;\n\n  const buffer = bufferForTable(FORMAT, length);\n\n  for (let i = 0; i < length; i++) {\n    buffer.writeUint8(getIDByUnicode(font, i));\n  }\n  return buffer;\n}\n\nfunction createFormat4Table(font: Font): ByteBuffer {\n  const FORMAT = 4;\n\n  const segments = getSegments(font, 0xFFFF);\n  const glyphIndexArrays: number[][] = [];\n\n  segments.forEach(segment => {\n    const glyphIndexArray: number[] = [];\n\n    for (let unicode = segment.start; unicode <= segment.end; unicode++) {\n      glyphIndexArray.push(getIDByUnicode(font, unicode));\n    }\n    glyphIndexArrays.push(glyphIndexArray);\n  });\n\n  const segCount = segments.length + 1;\n\n  const glyphIndexArrayLength = glyphIndexArrays.reduce((acc, glyphIndex) => acc + glyphIndex.length, 0);\n\n  /**\n   * +2 segCountX2\n   * +2 searchRange\n   * +2 entrySelector\n   * +2 rangeShift\n   * +2 Padding\n   */\n  const length = (\n    10\n    + 2 * segCount // endCodes\n    + 2 * segCount //startCodes\n    + 2 * segCount //idDeltas\n    + 2 * segCount //idRangeOffsets\n    + 2 * glyphIndexArrayLength\n  );\n\n  const buffer = bufferForTable(FORMAT, length);\n\n  buffer.writeUint16(segCount * 2);\n  const maxExponent = Math.floor(Math.log(segCount) / Math.LN2);\n  const searchRange = 2 * Math.pow(2, maxExponent);\n\n  buffer.writeUint16(searchRange);\n  buffer.writeUint16(maxExponent);\n  buffer.writeUint16(2 * segCount - searchRange);\n\n  segments.forEach(segment => {\n    buffer.writeUint16(segment.end);\n  });\n  buffer.writeUint16(0xFFFF);\n\n  buffer.writeUint16(0);\n\n  segments.forEach(segment => {\n    buffer.writeUint16(segment.start);\n  });\n  buffer.writeUint16(0xFFFF);\n\n  for (let i = 0; i < segments.length; i++) {\n    buffer.writeUint16(0);\n  }\n  buffer.writeUint16(1);\n\n  let offset = 0;\n\n  for (let i = 0; i < segments.length; i++) {\n    buffer.writeUint16(2 * ((segments.length - i + 1) + offset));\n    offset += glyphIndexArrays[i].length;\n  }\n  buffer.writeUint16(0);\n\n  glyphIndexArrays.forEach(glyphIndexArray => {\n    glyphIndexArray.forEach(glyphId => {\n      buffer.writeUint16(glyphId);\n    });\n  });\n\n  return buffer;\n}\n\nfunction createFormat12Table(font: Font): ByteBuffer {\n  const FORMAT = 12;\n\n  const codePoints = getCodePoints(font.codePoints);\n\n  const length = (\n    4 // nGroups\n    + 4 * codePoints.length // startCharCode\n    + 4 * codePoints.length // endCharCode\n    + 4 * codePoints.length // startGlyphCode\n  );\n\n  const buffer = bufferForTable(FORMAT, length);\n\n  buffer.writeUint32(codePoints.length);\n  codePoints.forEach(codePoint => {\n    buffer.writeUint32(codePoint.unicode);\n    buffer.writeUint32(codePoint.unicode);\n    buffer.writeUint32(codePoint.glyph.id);\n  });\n\n  return buffer;\n}\n\nexport default function createCMapTable(font: Font): ByteBuffer {\n  /**\n   * +2 platform\n   * +2 encoding\n   * +4 offset\n   */\n  const TABLE_HEAD = 8;\n\n  const singleByteTable = createFormat0Table(font);\n  const twoByteTable = createFormat4Table(font);\n  const fourByteTable = createFormat12Table(font);\n\n  const tableHeaders: TableHeader[] = [\n    {\n      platformID: 0,\n      encodingID: 3,\n      table: twoByteTable\n    },\n    {\n      platformID: 0,\n      encodingID: 4,\n      table: fourByteTable\n    },\n    {\n      platformID: 1,\n      encodingID: 0,\n      table: singleByteTable\n    },\n    {\n      platformID: 3,\n      encodingID: 1,\n      table: twoByteTable\n    },\n    {\n      platformID: 3,\n      encodingID: 10,\n      table: fourByteTable\n    }\n  ];\n\n  const tables = [\n    twoByteTable,\n    singleByteTable,\n    fourByteTable\n  ];\n\n  /**\n   * +2 version\n   * +2 number of subtable headers\n   */\n  let tableOffset = 4 + tableHeaders.length * TABLE_HEAD;\n\n  tables.forEach(table => {\n    (table as any)._tableOffset = tableOffset;\n    tableOffset += table.length;\n  });\n\n  const length = tableOffset;\n\n  const buffer = new ByteBuffer(length);\n\n  buffer.writeUint16(0);\n  buffer.writeUint16(tableHeaders.length);\n\n  tableHeaders.forEach(header => {\n    buffer.writeUint16(header.platformID);\n    buffer.writeUint16(header.encodingID);\n    buffer.writeUint32((header.table as any)._tableOffset);\n  });\n\n  tables.forEach(table => {\n    buffer.writeBytes(table.buffer);\n  });\n\n  return buffer;\n}\n\n","import ByteBuffer from 'microbuffer';\nimport { Font, Glyph } from '../../sfnt.ts';\n\nfunction getFlags(glyph: Glyph): number[] {\n  const result: number[] = [];\n\n  for (let i = 0; i < glyph.ttfContours.length; i++) {\n    const contour = glyph.ttfContours[i];\n\n    for (let j = 0; j < contour.length; j++) {\n      const point = contour[j];\n\n      let flag = point.onCurve ? 1 : 0;\n\n      if (point.x === 0) {\n        flag += 16;\n      } else {\n        if (-0xFF <= point.x && point.x <= 0xFF) {\n          flag += 2; // the corresponding x-coordinate is 1 byte long\n        }\n        if (point.x > 0 && point.x <= 0xFF) {\n          flag += 16; // If x-Short Vector is set, this bit describes the sign of the value, with 1 equalling positive and 0 negative\n        }\n      }\n      if (point.y === 0) {\n        flag += 32;\n      } else {\n        if (-0xFF <= point.y && point.y <= 0xFF) {\n          flag += 4; // the corresponding y-coordinate is 1 byte long\n        }\n        if (point.y > 0 && point.y <= 0xFF) {\n          flag += 32; // If y-Short Vector is set, this bit describes the sign of the value, with 1 equalling positive and 0 negative.\n        }\n      }\n      result.push(flag);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Repeating flags can be packed\n * @param flags\n */\nfunction compactFlags(flags: number[]): number[] {\n  const result: number[] = [];\n  let prevFlag = -1;\n  let firstRepeat = false;\n\n  for (let i = 0; i < flags.length; i++) {\n    const flag = flags[i];\n    if (prevFlag === flag) {\n      if (firstRepeat) {\n        result[result.length - 1] += 8; // current flag repeats previous one, need to set 3rd bit of previous flag and set 1 to the current one\n        result.push(1);\n        firstRepeat = false;\n      } else {\n        result[result.length - 1]++; // when flag is repeating second or more times, we need to increase the last flag value\n      }\n    } else {\n      firstRepeat = true;\n      prevFlag = flag;\n      result.push(flag);\n    }\n  }\n\n  return result;\n}\n\nfunction getCoords(glyph: Glyph, coordName: 'x' | 'y'): number[] {\n  const result: number[] = [];\n\n  for (let i = 0; i < glyph.ttfContours.length; i++) {\n    const contour = glyph.ttfContours[i];\n\n    result.push(...contour.map(point => point[coordName]));\n  }\n\n  return result;\n}\n\nfunction compactCoords(coords: number[]): number[] {\n  return coords.filter((coord: number) => coord !== 0);\n}\n\n/**\n * Calculates length of glyph data in GLYF table\n * @param glyph\n */\nfunction glyphDataSize(glyph: Glyph): number {\n  // Ignore glyphs without outlines. These will get a length of zero in the \"loca\" table\n  if (!glyph.contours.length) {\n    return 0;\n  }\n\n  let result = 12; // glyph fixed properties\n\n  result += glyph.contours.length * 2; // add contours\n\n  for (let i = 0; i < glyph.ttf_x.length; i++) {\n    const x = glyph.ttf_x[i];\n    // add 1 or 2 bytes for each coordinate depending of its size\n    result += (-0xFF <= x && x <= 0xFF) ? 1 : 2;\n  }\n\n  for (let i = 0; i < glyph.ttf_y.length; i++) {\n    const y = glyph.ttf_y[i];\n    // add 1 or 2 bytes for each coordinate depending of its size\n    result += (-0xFF <= y && y <= 0xFF) ? 1 : 2;\n  }\n\n  // Add flags length to glyph size.\n  result += glyph.ttf_flags.length;\n\n  if (result % 4 !== 0) { // glyph size must be divisible by 4.\n    result += 4 - result % 4;\n  }\n  return result;\n}\n\nfunction tableSize(font: Font): number {\n  let result = 0;\n\n  for (let i = 0; i < font.glyphs.length; i++) {\n    const glyph = font.glyphs[i];\n    glyph.ttf_size = glyphDataSize(glyph);\n    result += glyph.ttf_size;\n  }\n\n  font.ttf_glyph_size = result; // sum of all glyph lengths\n  return result;\n}\n\nexport default function createGlyfTable(font: Font): ByteBuffer {\n  for (let i = 0; i < font.glyphs.length; i++) {\n    const glyph = font.glyphs[i];\n    glyph.ttf_flags = getFlags(glyph);\n    glyph.ttf_flags = compactFlags(glyph.ttf_flags);\n    glyph.ttf_x = getCoords(glyph, 'x');\n    glyph.ttf_x = compactCoords(glyph.ttf_x);\n    glyph.ttf_y = getCoords(glyph, 'y');\n    glyph.ttf_y = compactCoords(glyph.ttf_y);\n  }\n\n  const buf = new ByteBuffer(tableSize(font));\n\n  for (let i = 0; i < font.glyphs.length; i++) {\n    const glyph = font.glyphs[i];\n\n    // Ignore glyphs without outlines. These will get a length of zero in the \"loca\" table\n    if (!glyph.contours.length) {\n      continue;\n    }\n\n    const offset = buf.tell();\n\n    buf.writeInt16(glyph.contours.length); // numberOfContours\n    buf.writeInt16(glyph.xMin); // xMin\n    buf.writeInt16(glyph.yMin); // yMin\n    buf.writeInt16(glyph.xMax); // xMax\n    buf.writeInt16(glyph.yMax); // yMax\n\n    // Array of end points\n    let endPtsOfContours = -1;\n\n    const ttfContours = glyph.ttfContours;\n\n    for (let j = 0; j < ttfContours.length; j++) {\n      const contour = ttfContours[j];\n\n      endPtsOfContours += contour.length;\n      buf.writeInt16(endPtsOfContours);\n    }\n\n    buf.writeInt16(0); // instructionLength, is not used here\n\n    // Array of flags\n    for (let j = 0; j < glyph.ttf_flags.length; j++) {\n      buf.writeInt8(glyph.ttf_flags[j]);\n    }\n\n    // Array of X relative coordinates\n    for (let j = 0; j < glyph.ttf_x.length; j++) {\n      const x = glyph.ttf_x[j];\n      if (-0xFF <= x && x <= 0xFF) {\n        buf.writeUint8(Math.abs(x));\n      } else {\n        buf.writeInt16(x);\n      }\n    }\n\n    // Array of Y relative coordinates\n    for (let j = 0; j < glyph.ttf_y.length; j++) {\n      const y = glyph.ttf_y[j];\n      if (-0xFF <= y && y <= 0xFF) {\n        buf.writeUint8(Math.abs(y));\n      } else {\n        buf.writeInt16(y);\n      }\n    }\n\n    let tail = (buf.tell() - offset) % 4;\n\n    if (tail !== 0) { // glyph size must be divisible by 4.\n      for (; tail < 4; tail++) {\n        buf.writeUint8(0);\n      }\n    }\n  }\n\n  return buf;\n}\n\n","import ByteBuffer from 'microbuffer';\nimport { Font } from '../../sfnt.ts';\n\nfunction dateToUInt64(date: Date): number {\n  const startDate = new Date('1904-01-01T00:00:00.000Z');\n  return Math.floor((date.getTime() - startDate.getTime()) / 1000);\n}\n\nexport default function createHeadTable(font: Font): ByteBuffer {\n  const buf = new ByteBuffer(54); // fixed table length\n\n  buf.writeInt32(0x10000); // version\n  buf.writeInt32(font.revision * 0x10000); // fontRevision\n  buf.writeUint32(0); // checkSumAdjustment\n  buf.writeUint32(0x5F0F3CF5); // magicNumber\n  // FLag meanings:\n  // Bit 0: Baseline for font at y=0;\n  // Bit 1: Left sidebearing point at x=0;\n  // Bit 3: Force ppem to integer values for all internal scaler math; may use fractional ppem sizes if this bit is clear;\n  buf.writeUint16(0x000B); // flags\n  buf.writeUint16(font.unitsPerEm); // unitsPerEm\n  buf.writeUint64(dateToUInt64(font.createdDate)); // created\n  buf.writeUint64(dateToUInt64(font.modifiedDate)); // modified\n  buf.writeInt16(font.xMin); // xMin\n  buf.writeInt16(font.yMin); // yMin\n  buf.writeInt16(font.xMax); // xMax\n  buf.writeInt16(font.yMax); // yMax\n  buf.writeUint16(font.macStyle); //macStyle\n  buf.writeUint16(font.lowestRecPPEM); // lowestRecPPEM\n  buf.writeInt16(2); // fontDirectionHint\n  buf.writeInt16(font.ttf_glyph_size < 0x20000 ? 0 : 1); // indexToLocFormat, 0 for short offsets, 1 for long offsets\n  buf.writeInt16(0); // glyphDataFormat\n\n  return buf;\n}\n\n","import ByteBuffer from 'microbuffer';\nimport { Font } from '../../sfnt.ts';\n\nexport default function createHHeadTable(font: Font): ByteBuffer {\n  const buf = new ByteBuffer(36); // fixed table length\n\n  buf.writeInt32(0x10000); // version\n  buf.writeInt16(font.ascent); // ascent\n  buf.writeInt16(font.descent); // descend\n  // Non zero lineGap causes offset in IE, https://github.com/fontello/svg2ttf/issues/37\n  buf.writeInt16(0); // lineGap\n  buf.writeUint16(font.maxWidth); // advanceWidthMax\n  buf.writeInt16(font.minLsb); // minLeftSideBearing\n  buf.writeInt16(font.minRsb); // minRightSideBearing\n  buf.writeInt16(font.maxExtent); // xMaxExtent\n  buf.writeInt16(1); // caretSlopeRise\n  buf.writeInt16(0); // caretSlopeRun\n  buf.writeUint32(0); // reserved1\n  buf.writeUint32(0); // reserved2\n  buf.writeUint16(0); // reserved3\n  buf.writeInt16(0); // metricDataFormat\n  buf.writeUint16(font.glyphs.length); // numberOfHMetrics\n\n  return buf;\n}\n","import ByteBuffer from 'microbuffer';\nimport { Font, Glyph } from '../../sfnt.ts';\n\nexport default function createHtmxTable(font: Font): ByteBuffer {\n  const buf = new ByteBuffer(font.glyphs.length * 4);\n\n  font.glyphs.forEach((glyph: Glyph) => {\n    buf.writeUint16(glyph.width); // advanceWidth\n    buf.writeInt16(glyph.xMin); // lsb\n  });\n\n  return buf;\n}\n","import ByteBuffer from 'microbuffer';\nimport { Font, Glyph } from '../../sfnt.ts';\n\nfunction tableSize(font: Font, isShortFormat: boolean): number {\n  return (font.glyphs.length + 1) * (isShortFormat ? 2 : 4); // by glyph count + tail\n}\n\nexport default function createLocaTable(font: Font): ByteBuffer {\n  const isShortFormat = font.ttf_glyph_size < 0x20000;\n\n  const buf = new ByteBuffer(tableSize(font, isShortFormat));\n\n  let location = 0;\n\n  // Array of offsets in GLYF table for each glyph\n  font.glyphs.forEach((glyph: Glyph) => {\n    if (isShortFormat) {\n      buf.writeUint16(location);\n      location += glyph.ttf_size / 2; // actual location must be divided to 2 in short format\n    } else {\n      buf.writeUint32(location);\n      location += glyph.ttf_size; // actual location is stored as is in long format\n    }\n  });\n\n  // The last glyph location is stored to get last glyph length\n  if (isShortFormat) {\n    buf.writeUint16(location);\n  } else {\n    buf.writeUint32(location);\n  }\n\n  return buf;\n}\n","import ByteBuffer from 'microbuffer';\nimport { Font } from '../../sfnt.ts';\n\n/**\n * Find max points in glyph TTF contours.\n * @param font\n */\nfunction getMaxPoints(font: Font): number {\n  return Math.max(...font.glyphs.map(glyph => {\n    return glyph.ttfContours.reduce((acc, ctr) => acc + ctr.length, 0);\n  })) || 0;\n}\n\nfunction getMaxContours(font: Font): number {\n  return Math.max(...font.glyphs.map(glyph => glyph.ttfContours.length)) || 0;\n}\n\nexport default function createMaxpTable(font: Font): ByteBuffer {\n  const buf = new ByteBuffer(32);\n\n  buf.writeInt32(0x10000); // version\n  buf.writeUint16(font.glyphs.length); // numGlyphs\n  buf.writeUint16(getMaxPoints(font)); // maxPoints\n  buf.writeUint16(getMaxContours(font)); // maxContours\n  buf.writeUint16(0); // maxCompositePoints\n  buf.writeUint16(0); // maxCompositeContours\n  buf.writeUint16(2); // maxZones\n  buf.writeUint16(0); // maxTwilightPoints\n  // It is unclear how to calculate maxStorage, maxFunctionDefs and maxInstructionDefs.\n  // These are magic constants now, with values exceeding values from FontForge\n  buf.writeUint16(10); // maxStorage\n  buf.writeUint16(10); // maxFunctionDefs\n  buf.writeUint16(0); // maxInstructionDefs\n  buf.writeUint16(255); // maxStackElements\n  buf.writeUint16(0); // maxSizeOfInstructions\n  buf.writeUint16(0); // maxComponentElements\n  buf.writeUint16(0); // maxComponentDepth\n\n  return buf;\n}\n\n\n","export default class Str {\n  str: string;\n\n  constructor(str: string) {\n    this.str = str;\n  }\n\n  toUTF8Bytes(): Uint8Array {\n    const byteArray = [];\n\n    for (let i = 0; i < this.str.length; i++) {\n      if (this.str.charCodeAt(i) <= 0x7F) {\n        byteArray.push(this.str.charCodeAt(i));\n      } else {\n        const h = encodeURIComponent(this.str.charAt(i)).slice(1).split('%');\n\n        for (let j = 0; j < h.length; j++) {\n          byteArray.push(parseInt(h[j], 16));\n        }\n      }\n    }\n\n    return Uint8Array.from(byteArray);\n  }\n\n  toUCS2Bytes(): Uint8Array {\n    const byteArray = [];\n    let ch;\n\n    for (let i = 0; i < this.str.length; ++i) {\n      ch = this.str.charCodeAt(i);  // get char\n      byteArray.push(ch >> 8);\n      byteArray.push(ch & 0xFF);\n    }\n    return Uint8Array.from(byteArray);\n  }\n}\n\n","import ByteBuffer from 'microbuffer';\nimport Str from '../../str.ts';\nimport { Font } from '../../sfnt.ts';\n\nconst TTF_NAMES = {\n  COPYRIGHT: 0,\n  FONT_FAMILY: 1,\n  ID: 3,\n  DESCRIPTION: 10,\n  URL_VENDOR: 11\n};\n\ninterface Name {\n  data: Uint8Array;\n  id: number;\n  platformID: number;\n  encodingID: number;\n  languageID: number;\n}\n\nfunction tableSize(names: Name[]): number {\n  let result = 6; // table header\n\n  names.forEach(name => {\n    result += 12 + name.data.length; //name header and data\n  });\n  return result;\n}\n\nfunction getStrings(name: string, id: number): Name[] {\n  const result: Name[] = [];\n  const str = new Str(name);\n\n  result.push({ data: str.toUTF8Bytes(), id: id, platformID: 1, encodingID: 0, languageID: 0 }); //mac standard\n  result.push({ data: str.toUCS2Bytes(), id: id, platformID: 3, encodingID: 1, languageID: 0x409 }); //windows standard\n  return result;\n}\n\n/**\n * Collect font names\n * @param font\n */\nfunction getNames(font: Font): Name[] {\n  const result: Name[] = [];\n\n  if (font.copyright) {\n    result.push(...getStrings(font.copyright, TTF_NAMES.COPYRIGHT));\n  }\n  if (font.familyName) {\n    result.push(...getStrings(font.familyName, TTF_NAMES.FONT_FAMILY));\n  }\n  if (font.id) {\n    result.push(...getStrings(font.id, TTF_NAMES.ID));\n  }\n  result.push(...getStrings(font.description, TTF_NAMES.DESCRIPTION));\n  result.push(...getStrings(font.url, TTF_NAMES.URL_VENDOR));\n\n  font.sfntNames.forEach(sfntName => {\n    result.push(...getStrings(sfntName.value, sfntName.id));\n  });\n\n  result.sort((a, b) => {\n    const orderFields: (keyof Name)[] = ['platformID', 'encodingID', 'languageID', 'id'];\n\n    for (const field of orderFields) {\n      if (a[field] !== b[field]) {\n        return a[field] < b[field] ? -1 : 1;\n      }\n    }\n    return 0;\n  });\n\n  return result;\n}\n\nexport default function createNameTable(font: Font): ByteBuffer {\n  const names = getNames(font);\n\n  const buf = new ByteBuffer(tableSize(names));\n\n  buf.writeUint16(0); // formatSelector\n  buf.writeUint16(names.length); // nameRecordsCount\n  const offsetPosition = buf.tell();\n\n  buf.writeUint16(0); // offset, will be filled later\n  let nameOffset = 0;\n\n  names.forEach(name => {\n    buf.writeUint16(name.platformID); // platformID\n    buf.writeUint16(name.encodingID); // platEncID\n    buf.writeUint16(name.languageID); // languageID, English (USA)\n    buf.writeUint16(name.id); // nameID\n    buf.writeUint16(name.data.length); // reclength\n    buf.writeUint16(nameOffset); // offset\n    nameOffset += name.data.length;\n  });\n  const actualStringDataOffset = buf.tell();\n\n  //Array of bytes with actual string data\n  names.forEach(name => {\n    buf.writeBytes(name.data);\n  });\n\n  //write actual string data offset\n  buf.seek(offsetPosition);\n  buf.writeUint16(actualStringDataOffset); // offset\n\n  return buf;\n}\n\n","import ByteBuffer from 'microbuffer';\nimport { Font } from '../../sfnt.ts';\n\nfunction tableSize(font: Font, names: Uint8Array[]): number {\n  let result = 36; // table header\n\n  result += font.glyphs.length * 2; // name declarations\n  names.forEach(name => {\n    result += name.length;\n  });\n  return result;\n}\n\nfunction pascalString(str: string): Uint8Array {\n  const bytes: number[] = [];\n  const len = str ? (str.length < 256 ? str.length : 255) : 0; //length in Pascal string is limited with 255\n\n  bytes.push(len);\n  for (let i = 0; i < len; i++) {\n    const char = str.charCodeAt(i);\n\n    bytes.push(char < 128 ? char : 95); //non-ASCII characters are substituted with '_'\n  }\n  return Uint8Array.from(bytes);\n}\n\nexport default function createPostTable(font: Font): ByteBuffer {\n  const names: Uint8Array[] = [];\n\n  font.glyphs.forEach(glyph => {\n    if (glyph.unicode?.length !== 0) {\n      names.push(pascalString(glyph.name));\n    }\n  });\n\n  const buf = new ByteBuffer(tableSize(font, names));\n\n  buf.writeInt32(0x20000); // formatType,  version 2.0\n  buf.writeInt32(font.italicAngle); // italicAngle\n  buf.writeInt16(font.underlinePosition); // underlinePosition\n  buf.writeInt16(font.underlineThickness); // underlineThickness\n  buf.writeUint32(font.isFixedPitch); // isFixedPitch\n  buf.writeUint32(0); // minMemType42\n  buf.writeUint32(0); // maxMemType42\n  buf.writeUint32(0); // minMemType1\n  buf.writeUint32(0); // maxMemType1\n  buf.writeUint16(font.glyphs.length); // numberOfGlyphs\n\n  // Array of glyph name indexes\n  let index = 258; // first index of custom glyph name, it is calculated as glyph name index + 258\n\n  font.glyphs.forEach(glyph => {\n    if (glyph.unicode?.length === 0) {\n      buf.writeUint16(0); // missed element should have .notDef name in the Macintosh standard order.\n    } else {\n      buf.writeUint16(index++);\n    }\n  });\n\n  // Array of glyph name indexes\n  names.forEach(name => {\n    buf.writeBytes(name);\n  });\n\n  return buf;\n}\n","import ByteBuffer from 'microbuffer';\n\nimport createGSUBTable from './ttf/tables/gsub.ts';\nimport createOS2Table from './ttf/tables/os2.ts';\nimport createCMapTable from './ttf/tables/cmap.ts';\nimport createGlyfTable from './ttf/tables/glyf.ts';\nimport createHeadTable from './ttf/tables/head.ts';\nimport createHHeadTable from './ttf/tables/hhea.ts';\nimport createHtmxTable from './ttf/tables/hmtx.ts';\nimport createLocaTable from './ttf/tables/loca.ts';\nimport createMaxpTable from './ttf/tables/maxp.ts';\nimport createNameTable from './ttf/tables/name.ts';\nimport createPostTable from './ttf/tables/post.ts';\n\nimport * as utils from './ttf/utils.ts';\nimport { Font } from './sfnt.ts';\n\ninterface Table {\n  innerName: string;\n  order: number;\n  create: (font: Font) => ByteBuffer;\n  buffer?: ByteBuffer;\n  length?: number;\n  corLength?: number;\n  checkSum?: number;\n  offset?: number;\n}\n\n// Tables\nconst TABLES: Array<Table> = [\n  { innerName: 'GSUB', order: 4, create: createGSUBTable },\n  { innerName: 'OS/2', order: 4, create: createOS2Table },\n  { innerName: 'cmap', order: 6, create: createCMapTable },\n  { innerName: 'glyf', order: 8, create: createGlyfTable },\n  { innerName: 'head', order: 2, create: createHeadTable },\n  { innerName: 'hhea', order: 1, create: createHHeadTable },\n  { innerName: 'hmtx', order: 5, create: createHtmxTable },\n  { innerName: 'loca', order: 7, create: createLocaTable },\n  { innerName: 'maxp', order: 3, create: createMaxpTable },\n  { innerName: 'name', order: 9, create: createNameTable },\n  { innerName: 'post', order: 10, create: createPostTable }\n];\n\n// Various constants\nconst CONST = {\n  VERSION: 0x10000,\n  CHECKSUM_ADJUSTMENT: 0xB1B0AFBA\n};\n\nfunction ulong(t: number): number {\n  t &= 0xffffffff;\n  if (t < 0) {\n    t += 0x100000000;\n  }\n  return t;\n}\n\nfunction calc_checksum(buf: ByteBuffer): number {\n  let sum = 0;\n  const nlongs = Math.floor(buf.length / 4);\n\n  for (let i = 0; i < nlongs; ++i) {\n    const t = buf.getUint32(i * 4);\n    sum = ulong(sum + t);\n  }\n\n  const leftBytes = buf.length - nlongs * 4;\n\n  if (leftBytes > 0) {\n    let leftRes = 0;\n\n    for (let i = 0; i < 4; i++) {\n      leftRes = (leftRes << 8) + ((i < leftBytes) ? buf.getUint8(nlongs * 4 + i) : 0);\n    }\n    sum = ulong(sum + leftRes);\n  }\n  return sum;\n}\n\nexport function generateTTF(font: Font): ByteBuffer {\n  font.glyphs.forEach(glyph => {\n    glyph.ttfContours = glyph.contours.map(contour => contour.points);\n  });\n\n  font.glyphs.forEach(glyph => {\n    glyph.ttfContours = utils.simplify(glyph.ttfContours, 0.3);\n    glyph.ttfContours = utils.simplify(glyph.ttfContours, 0.3);\n    glyph.ttfContours = utils.interpolate(glyph.ttfContours, 1.1);\n    glyph.ttfContours = utils.roundPoints(glyph.ttfContours);\n    glyph.ttfContours = utils.removeClosingReturnPoints(glyph.ttfContours);\n    glyph.ttfContours = utils.toRelative(glyph.ttfContours);\n  });\n\n  const headerSize = 12 + 16 * TABLES.length;\n  let bufSize = headerSize;\n\n  TABLES.forEach(table => {\n    table.buffer = table.create(font);\n    table.length = table.buffer.length;\n    table.corLength = table.length + (4 - table.length % 4) % 4;\n    table.checkSum = calc_checksum(table.buffer);\n    bufSize += table.corLength;\n  });\n\n  let offset = headerSize;\n\n  TABLES.forEach(table => {\n    table.offset = offset;\n    offset += table.corLength!;\n  });\n\n  const buf = new ByteBuffer(bufSize);\n\n  const entrySelector = Math.floor(Math.log(TABLES.length) / Math.LN2);\n  const searchRange = Math.pow(2, entrySelector) * 16;\n  const rangeShift = TABLES.length * 16 - searchRange;\n\n  buf.writeUint32(CONST.VERSION);\n  buf.writeUint16(TABLES.length);\n  buf.writeUint16(searchRange);\n  buf.writeUint16(entrySelector);\n  buf.writeUint16(rangeShift);\n\n  TABLES.forEach(table => {\n    buf.writeUint32(utils.identifier(table.innerName));\n    buf.writeUint32(table.checkSum!);\n    buf.writeUint32(table.offset!);\n    buf.writeUint32(table.length!);\n  });\n\n  let headOffset = 0;\n\n  // const tables2 = TABLES.sort((a, b) => b.order - a.order);\n  TABLES.forEach(table => {\n    if (table.innerName === 'head') {\n      headOffset = buf.tell();\n    }\n    buf.writeBytes(table.buffer!.buffer);\n    for (let i = table.length!; i < table.corLength!; i++) {\n      buf.writeUint8(0);\n    }\n  });\n\n  buf.setUint32(headOffset + 8, ulong(CONST.CHECKSUM_ADJUSTMENT - calc_checksum(buf)));\n\n  return buf;\n}\n\n\n","'use strict';\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties,\n * including NodeList.\n *\n * @param {T[] | { length: number; [number]: T }} list\n * @param {function (item: T, index: number, list:T[]):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac\n * Allows injecting a custom implementation in tests (`Array.prototype` by default).\n * @returns {T | undefined}\n * @template {unknown} T\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (hasOwn(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * If `Object.getOwnPropertyDescriptors` is available,\n * a new object with all properties of object but without any prototype is created and returned\n * after freezing it.\n *\n * @param {T} object\n * The object to freeze.\n * @param {Pick<ObjectConstructor, 'create' | 'freeze' | 'getOwnPropertyDescriptors'>} [oc=Object]\n * `Object` by default,\n * allows to inject custom object constructor for tests.\n * @returns {Readonly<T>}\n * @template {Object} T\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n * @prettierignore\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object;\n\t}\n\tif (oc && typeof oc.getOwnPropertyDescriptors === 'function') {\n\t\tobject = oc.create(null, oc.getOwnPropertyDescriptors(object));\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n}\n\n/**\n * Implementation for `Object.hasOwn` but ES5 compatible.\n *\n * @param {any} object\n * @param {string | number} key\n * @returns {boolean}\n */\nfunction hasOwn(object, key) {\n\treturn Object.prototype.hasOwnProperty.call(object, key);\n}\n\n/**\n * Since xmldom can not rely on `Object.assign`,\n * it uses/provides a simplified version that is sufficient for its needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n * @returns {Object}\n * The target with the merged/overridden properties.\n * @throws {TypeError}\n * If target is not an object.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object');\n\t}\n\tfor (var key in source) {\n\t\tif (hasOwn(source, key)) {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * A number of attributes are boolean attributes.\n * The presence of a boolean attribute on an element represents the `true` value,\n * and the absence of the attribute represents the `false` value.\n *\n * If the attribute is present, its value must either be the empty string, or a value that is\n * an ASCII case-insensitive match for the attribute's canonical name,\n * with no leading or trailing whitespace.\n *\n * Note: The values `\"true\"` and `\"false\"` are not allowed on boolean attributes.\n * To represent a `false` value, the attribute has to be omitted altogether.\n *\n * @see https://html.spec.whatwg.org/#boolean-attributes\n * @see https://html.spec.whatwg.org/#attributes-3\n */\nvar HTML_BOOLEAN_ATTRIBUTES = freeze({\n\tallowfullscreen: true,\n\tasync: true,\n\tautofocus: true,\n\tautoplay: true,\n\tchecked: true,\n\tcontrols: true,\n\tdefault: true,\n\tdefer: true,\n\tdisabled: true,\n\tformnovalidate: true,\n\thidden: true,\n\tismap: true,\n\titemscope: true,\n\tloop: true,\n\tmultiple: true,\n\tmuted: true,\n\tnomodule: true,\n\tnovalidate: true,\n\topen: true,\n\tplaysinline: true,\n\treadonly: true,\n\trequired: true,\n\treversed: true,\n\tselected: true,\n});\n\n/**\n * Check if `name` is matching one of the HTML boolean attribute names.\n * This method doesn't check if such attributes are allowed in the context of the current\n * document/parsing.\n *\n * @param {string} name\n * @returns {boolean}\n * @see {@link HTML_BOOLEAN_ATTRIBUTES}\n * @see https://html.spec.whatwg.org/#boolean-attributes\n * @see https://html.spec.whatwg.org/#attributes-3\n */\nfunction isHTMLBooleanAttribute(name) {\n\treturn hasOwn(HTML_BOOLEAN_ATTRIBUTES, name.toLowerCase());\n}\n\n/**\n * Void elements only have a start tag; end tags must not be specified for void elements.\n * These elements should be written as self-closing like this: `<area />`.\n * This should not be confused with optional tags that HTML allows to omit the end tag for\n * (like `li`, `tr` and others), which can have content after them,\n * so they can not be written as self-closing.\n * xmldom does not have any logic for optional end tags cases,\n * and will report them as a warning.\n * Content that would go into the unopened element,\n * will instead be added as a sibling text node.\n *\n * @type {Readonly<{\n * \tarea: boolean;\n * \tcol: boolean;\n * \timg: boolean;\n * \twbr: boolean;\n * \tlink: boolean;\n * \thr: boolean;\n * \tsource: boolean;\n * \tbr: boolean;\n * \tinput: boolean;\n * \tparam: boolean;\n * \tmeta: boolean;\n * \tembed: boolean;\n * \ttrack: boolean;\n * \tbase: boolean;\n * }>}\n * @see https://html.spec.whatwg.org/#void-elements\n * @see https://html.spec.whatwg.org/#optional-tags\n */\nvar HTML_VOID_ELEMENTS = freeze({\n\tarea: true,\n\tbase: true,\n\tbr: true,\n\tcol: true,\n\tembed: true,\n\thr: true,\n\timg: true,\n\tinput: true,\n\tlink: true,\n\tmeta: true,\n\tparam: true,\n\tsource: true,\n\ttrack: true,\n\twbr: true,\n});\n\n/**\n * Check if `tagName` is matching one of the HTML void element names.\n * This method doesn't check if such tags are allowed in the context of the current\n * document/parsing.\n *\n * @param {string} tagName\n * @returns {boolean}\n * @see {@link HTML_VOID_ELEMENTS}\n * @see https://html.spec.whatwg.org/#void-elements\n */\nfunction isHTMLVoidElement(tagName) {\n\treturn hasOwn(HTML_VOID_ELEMENTS, tagName.toLowerCase());\n}\n\n/**\n * Tag names that are raw text elements according to HTML spec.\n * The value denotes whether they are escapable or not.\n *\n * @see {@link isHTMLEscapableRawTextElement}\n * @see {@link isHTMLRawTextElement}\n * @see https://html.spec.whatwg.org/#raw-text-elements\n * @see https://html.spec.whatwg.org/#escapable-raw-text-elements\n */\nvar HTML_RAW_TEXT_ELEMENTS = freeze({\n\tscript: false,\n\tstyle: false,\n\ttextarea: true,\n\ttitle: true,\n});\n\n/**\n * Check if `tagName` is matching one of the HTML raw text element names.\n * This method doesn't check if such tags are allowed in the context of the current\n * document/parsing.\n *\n * @param {string} tagName\n * @returns {boolean}\n * @see {@link isHTMLEscapableRawTextElement}\n * @see {@link HTML_RAW_TEXT_ELEMENTS}\n * @see https://html.spec.whatwg.org/#raw-text-elements\n * @see https://html.spec.whatwg.org/#escapable-raw-text-elements\n */\nfunction isHTMLRawTextElement(tagName) {\n\tvar key = tagName.toLowerCase();\n\treturn hasOwn(HTML_RAW_TEXT_ELEMENTS, key) && !HTML_RAW_TEXT_ELEMENTS[key];\n}\n/**\n * Check if `tagName` is matching one of the HTML escapable raw text element names.\n * This method doesn't check if such tags are allowed in the context of the current\n * document/parsing.\n *\n * @param {string} tagName\n * @returns {boolean}\n * @see {@link isHTMLRawTextElement}\n * @see {@link HTML_RAW_TEXT_ELEMENTS}\n * @see https://html.spec.whatwg.org/#raw-text-elements\n * @see https://html.spec.whatwg.org/#escapable-raw-text-elements\n */\nfunction isHTMLEscapableRawTextElement(tagName) {\n\tvar key = tagName.toLowerCase();\n\treturn hasOwn(HTML_RAW_TEXT_ELEMENTS, key) && HTML_RAW_TEXT_ELEMENTS[key];\n}\n/**\n * Only returns true if `value` matches MIME_TYPE.HTML, which indicates an HTML document.\n *\n * @param {string} mimeType\n * @returns {mimeType is 'text/html'}\n * @see https://www.iana.org/assignments/media-types/text/html\n * @see https://en.wikipedia.org/wiki/HTML\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring\n */\nfunction isHTMLMimeType(mimeType) {\n\treturn mimeType === MIME_TYPE.HTML;\n}\n/**\n * For both the `text/html` and the `application/xhtml+xml` namespace the spec defines that the\n * HTML namespace is provided as the default.\n *\n * @param {string} mimeType\n * @returns {boolean}\n * @see https://dom.spec.whatwg.org/#dom-document-createelement\n * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument\n * @see https://dom.spec.whatwg.org/#dom-domimplementation-createhtmldocument\n */\nfunction hasDefaultHTMLNamespace(mimeType) {\n\treturn isHTMLMimeType(mimeType) || mimeType === MIME_TYPE.XML_XHTML_APPLICATION;\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02\n *      MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype\n *      WHATWG HTML Spec\n * @see {@link DOMParser.prototype.parseFromString}\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring\n\t *      WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType\n\t *      registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType\n\t *      registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n});\n/**\n * @typedef {'application/xhtml+xml' | 'application/xml' | 'image/svg+xml' | 'text/html' | 'text/xml'}\n * MimeType\n */\n/**\n * @type {MimeType[]}\n * @private\n * Basically `Object.values`, which is not available in ES5.\n */\nvar _MIME_TYPES = Object.keys(MIME_TYPE).map(function (key) {\n\treturn MIME_TYPE[key];\n});\n\n/**\n * Only returns true if `mimeType` is one of the allowed values for\n * `DOMParser.parseFromString`.\n *\n * @param {string} mimeType\n * @returns {mimeType is 'application/xhtml+xml' | 'application/xml' | 'image/svg+xml' |  'text/html' | 'text/xml'}\n *\n */\nfunction isValidMimeType(mimeType) {\n\treturn _MIME_TYPES.indexOf(mimeType) > -1;\n}\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace.\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n});\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.HTML_BOOLEAN_ATTRIBUTES = HTML_BOOLEAN_ATTRIBUTES;\nexports.HTML_RAW_TEXT_ELEMENTS = HTML_RAW_TEXT_ELEMENTS;\nexports.HTML_VOID_ELEMENTS = HTML_VOID_ELEMENTS;\nexports.hasDefaultHTMLNamespace = hasDefaultHTMLNamespace;\nexports.hasOwn = hasOwn;\nexports.isHTMLBooleanAttribute = isHTMLBooleanAttribute;\nexports.isHTMLRawTextElement = isHTMLRawTextElement;\nexports.isHTMLEscapableRawTextElement = isHTMLEscapableRawTextElement;\nexports.isHTMLMimeType = isHTMLMimeType;\nexports.isHTMLVoidElement = isHTMLVoidElement;\nexports.isValidMimeType = isValidMimeType;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","'use strict';\n\nvar conventions = require('./conventions');\n\nfunction extendError(constructor, writableName) {\n\tconstructor.prototype = Object.create(Error.prototype, {\n\t\tconstructor: { value: constructor },\n\t\tname: { value: constructor.name, enumerable: true, writable: writableName },\n\t});\n}\n\nvar DOMExceptionName = conventions.freeze({\n\t/**\n\t * the default value as defined by the spec\n\t */\n\tError: 'Error',\n\t/**\n\t * @deprecated\n\t * Use RangeError instead.\n\t */\n\tIndexSizeError: 'IndexSizeError',\n\t/**\n\t * @deprecated\n\t * Just to match the related static code, not part of the spec.\n\t */\n\tDomstringSizeError: 'DomstringSizeError',\n\tHierarchyRequestError: 'HierarchyRequestError',\n\tWrongDocumentError: 'WrongDocumentError',\n\tInvalidCharacterError: 'InvalidCharacterError',\n\t/**\n\t * @deprecated\n\t * Just to match the related static code, not part of the spec.\n\t */\n\tNoDataAllowedError: 'NoDataAllowedError',\n\tNoModificationAllowedError: 'NoModificationAllowedError',\n\tNotFoundError: 'NotFoundError',\n\tNotSupportedError: 'NotSupportedError',\n\tInUseAttributeError: 'InUseAttributeError',\n\tInvalidStateError: 'InvalidStateError',\n\tSyntaxError: 'SyntaxError',\n\tInvalidModificationError: 'InvalidModificationError',\n\tNamespaceError: 'NamespaceError',\n\t/**\n\t * @deprecated\n\t * Use TypeError for invalid arguments,\n\t * \"NotSupportedError\" DOMException for unsupported operations,\n\t * and \"NotAllowedError\" DOMException for denied requests instead.\n\t */\n\tInvalidAccessError: 'InvalidAccessError',\n\t/**\n\t * @deprecated\n\t * Just to match the related static code, not part of the spec.\n\t */\n\tValidationError: 'ValidationError',\n\t/**\n\t * @deprecated\n\t * Use TypeError instead.\n\t */\n\tTypeMismatchError: 'TypeMismatchError',\n\tSecurityError: 'SecurityError',\n\tNetworkError: 'NetworkError',\n\tAbortError: 'AbortError',\n\t/**\n\t * @deprecated\n\t * Just to match the related static code, not part of the spec.\n\t */\n\tURLMismatchError: 'URLMismatchError',\n\tQuotaExceededError: 'QuotaExceededError',\n\tTimeoutError: 'TimeoutError',\n\tInvalidNodeTypeError: 'InvalidNodeTypeError',\n\tDataCloneError: 'DataCloneError',\n\tEncodingError: 'EncodingError',\n\tNotReadableError: 'NotReadableError',\n\tUnknownError: 'UnknownError',\n\tConstraintError: 'ConstraintError',\n\tDataError: 'DataError',\n\tTransactionInactiveError: 'TransactionInactiveError',\n\tReadOnlyError: 'ReadOnlyError',\n\tVersionError: 'VersionError',\n\tOperationError: 'OperationError',\n\tNotAllowedError: 'NotAllowedError',\n\tOptOutError: 'OptOutError',\n});\nvar DOMExceptionNames = Object.keys(DOMExceptionName);\n\nfunction isValidDomExceptionCode(value) {\n\treturn typeof value === 'number' && value >= 1 && value <= 25;\n}\nfunction endsWithError(value) {\n\treturn typeof value === 'string' && value.substring(value.length - DOMExceptionName.Error.length) === DOMExceptionName.Error;\n}\n/**\n * DOM operations only raise exceptions in \"exceptional\" circumstances, i.e., when an operation\n * is impossible to perform (either for logical reasons, because data is lost, or because the\n * implementation has become unstable). In general, DOM methods return specific error values in\n * ordinary processing situations, such as out-of-bound errors when using NodeList.\n *\n * Implementations should raise other exceptions under other circumstances. For example,\n * implementations should raise an implementation-dependent exception if a null argument is\n * passed when null was not expected.\n *\n * This implementation supports the following usages:\n * 1. according to the living standard (both arguments are optional):\n * ```\n * new DOMException(\"message (can be empty)\", DOMExceptionNames.HierarchyRequestError)\n * ```\n * 2. according to previous xmldom implementation (only the first argument is required):\n * ```\n * new DOMException(DOMException.HIERARCHY_REQUEST_ERR, \"optional message\")\n * ```\n * both result in the proper name being set.\n *\n * @class DOMException\n * @param {number | string} messageOrCode\n * The reason why an operation is not acceptable.\n * If it is a number, it is used to determine the `name`, see\n * {@link https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-258A00AF ExceptionCode}\n * @param {string | keyof typeof DOMExceptionName | Error} [nameOrMessage]\n * The `name` to use for the error.\n * If `messageOrCode` is a number, this arguments is used as the `message` instead.\n * @augments Error\n * @see https://webidl.spec.whatwg.org/#idl-DOMException\n * @see https://webidl.spec.whatwg.org/#dfn-error-names-table\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-17189187\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(messageOrCode, nameOrMessage) {\n\t// support old way of passing arguments: first argument is a valid number\n\tif (isValidDomExceptionCode(messageOrCode)) {\n\t\tthis.name = DOMExceptionNames[messageOrCode];\n\t\tthis.message = nameOrMessage || '';\n\t} else {\n\t\tthis.message = messageOrCode;\n\t\tthis.name = endsWithError(nameOrMessage) ? nameOrMessage : DOMExceptionName.Error;\n\t}\n\tif (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n}\nextendError(DOMException, true);\nObject.defineProperties(DOMException.prototype, {\n\tcode: {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\tvar code = DOMExceptionNames.indexOf(this.name);\n\t\t\tif (isValidDomExceptionCode(code)) return code;\n\t\t\treturn 0;\n\t\t},\n\t},\n});\n\nvar ExceptionCode = {\n\tINDEX_SIZE_ERR: 1,\n\tDOMSTRING_SIZE_ERR: 2,\n\tHIERARCHY_REQUEST_ERR: 3,\n\tWRONG_DOCUMENT_ERR: 4,\n\tINVALID_CHARACTER_ERR: 5,\n\tNO_DATA_ALLOWED_ERR: 6,\n\tNO_MODIFICATION_ALLOWED_ERR: 7,\n\tNOT_FOUND_ERR: 8,\n\tNOT_SUPPORTED_ERR: 9,\n\tINUSE_ATTRIBUTE_ERR: 10,\n\tINVALID_STATE_ERR: 11,\n\tSYNTAX_ERR: 12,\n\tINVALID_MODIFICATION_ERR: 13,\n\tNAMESPACE_ERR: 14,\n\tINVALID_ACCESS_ERR: 15,\n\tVALIDATION_ERR: 16,\n\tTYPE_MISMATCH_ERR: 17,\n\tSECURITY_ERR: 18,\n\tNETWORK_ERR: 19,\n\tABORT_ERR: 20,\n\tURL_MISMATCH_ERR: 21,\n\tQUOTA_EXCEEDED_ERR: 22,\n\tTIMEOUT_ERR: 23,\n\tINVALID_NODE_TYPE_ERR: 24,\n\tDATA_CLONE_ERR: 25,\n};\n\nvar entries = Object.entries(ExceptionCode);\nfor (var i = 0; i < entries.length; i++) {\n\tvar key = entries[i][0];\n\tDOMException[key] = entries[i][1];\n}\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @class\n * @param {string} message\n * @param {any} [locator]\n */\nfunction ParseError(message, locator) {\n\tthis.message = message;\n\tthis.locator = locator;\n\tif (Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nextendError(ParseError);\n\nexports.DOMException = DOMException;\nexports.DOMExceptionName = DOMExceptionName;\nexports.ExceptionCode = ExceptionCode;\nexports.ParseError = ParseError;\n","'use strict';\n\n/**\n * Detects relevant unicode support for regular expressions in the runtime.\n * Should the runtime not accepts the flag `u` or unicode ranges,\n * character classes without unicode handling will be used.\n *\n * @param {typeof RegExp} [RegExpImpl=RegExp]\n * For testing: the RegExp class.\n * @returns {boolean}\n * @see https://node.green/#ES2015-syntax-RegExp--y--and--u--flags\n */\nfunction detectUnicodeSupport(RegExpImpl) {\n\ttry {\n\t\tif (typeof RegExpImpl !== 'function') {\n\t\t\tRegExpImpl = RegExp;\n\t\t}\n\t\t// eslint-disable-next-line es5/no-unicode-regex,es5/no-unicode-code-point-escape\n\t\tvar match = new RegExpImpl('\\u{1d306}', 'u').exec('𝌆');\n\t\treturn !!match && match[0].length === 2;\n\t} catch (error) {}\n\treturn false;\n}\nvar UNICODE_SUPPORT = detectUnicodeSupport();\n\n/**\n * Removes `[`, `]` and any trailing quantifiers from the source of a RegExp.\n *\n * @param {RegExp} regexp\n */\nfunction chars(regexp) {\n\tif (regexp.source[0] !== '[') {\n\t\tthrow new Error(regexp + ' can not be used with chars');\n\t}\n\treturn regexp.source.slice(1, regexp.source.lastIndexOf(']'));\n}\n\n/**\n * Creates a new character list regular expression,\n * by removing `search` from the source of `regexp`.\n *\n * @param {RegExp} regexp\n * @param {string} search\n * The character(s) to remove.\n * @returns {RegExp}\n */\nfunction chars_without(regexp, search) {\n\tif (regexp.source[0] !== '[') {\n\t\tthrow new Error('/' + regexp.source + '/ can not be used with chars_without');\n\t}\n\tif (!search || typeof search !== 'string') {\n\t\tthrow new Error(JSON.stringify(search) + ' is not a valid search');\n\t}\n\tif (regexp.source.indexOf(search) === -1) {\n\t\tthrow new Error('\"' + search + '\" is not is /' + regexp.source + '/');\n\t}\n\tif (search === '-' && regexp.source.indexOf(search) !== 1) {\n\t\tthrow new Error('\"' + search + '\" is not at the first postion of /' + regexp.source + '/');\n\t}\n\treturn new RegExp(regexp.source.replace(search, ''), UNICODE_SUPPORT ? 'u' : '');\n}\n\n/**\n * Combines and Regular expressions correctly by using `RegExp.source`.\n *\n * @param {...(RegExp | string)[]} args\n * @returns {RegExp}\n */\nfunction reg(args) {\n\tvar self = this;\n\treturn new RegExp(\n\t\tArray.prototype.slice\n\t\t\t.call(arguments)\n\t\t\t.map(function (part) {\n\t\t\t\tvar isStr = typeof part === 'string';\n\t\t\t\tif (isStr && self === undefined && part === '|') {\n\t\t\t\t\tthrow new Error('use regg instead of reg to wrap expressions with `|`!');\n\t\t\t\t}\n\t\t\t\treturn isStr ? part : part.source;\n\t\t\t})\n\t\t\t.join(''),\n\t\tUNICODE_SUPPORT ? 'mu' : 'm'\n\t);\n}\n\n/**\n * Like `reg` but wraps the expression in `(?:`,`)` to create a non tracking group.\n *\n * @param {...(RegExp | string)[]} args\n * @returns {RegExp}\n */\nfunction regg(args) {\n\tif (arguments.length === 0) {\n\t\tthrow new Error('no parameters provided');\n\t}\n\treturn reg.apply(regg, ['(?:'].concat(Array.prototype.slice.call(arguments), [')']));\n}\n\n// /**\n//  * Append ^ to the beginning of the expression.\n//  * @param {...(RegExp | string)[]} args\n//  * @returns {RegExp}\n//  */\n// function reg_start(args) {\n// \tif (arguments.length === 0) {\n// \t\tthrow new Error('no parameters provided');\n// \t}\n// \treturn reg.apply(reg_start, ['^'].concat(Array.prototype.slice.call(arguments)));\n// }\n\n// https://www.w3.org/TR/xml/#document\n// `[1] document ::= prolog element Misc*`\n// https://www.w3.org/TR/xml11/#NT-document\n// `[1] document ::= ( prolog element Misc* ) - ( Char* RestrictedChar Char* )`\n\n/**\n * A character usually appearing in wrongly converted strings.\n *\n * @type {string}\n * @see https://en.wikipedia.org/wiki/Specials_(Unicode_block)#Replacement_character\n * @see https://nodejs.dev/en/api/v18/buffer/#buffers-and-character-encodings\n * @see https://www.unicode.org/faq/utf_bom.html#BOM\n * @readonly\n */\nvar UNICODE_REPLACEMENT_CHARACTER = '\\uFFFD';\n// https://www.w3.org/TR/xml/#NT-Char\n// any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.\n// `[2] Char ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]`\n// https://www.w3.org/TR/xml11/#NT-Char\n// `[2] Char ::= [#x1-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]`\n// https://www.w3.org/TR/xml11/#NT-RestrictedChar\n// `[2a] RestrictedChar ::= [#x1-#x8] | [#xB-#xC] | [#xE-#x1F] | [#x7F-#x84] | [#x86-#x9F]`\n// https://www.w3.org/TR/xml11/#charsets\nvar Char = /[-\\x09\\x0A\\x0D\\x20-\\x2C\\x2E-\\uD7FF\\uE000-\\uFFFD]/; // without \\u10000-\\uEFFFF\nif (UNICODE_SUPPORT) {\n\t// eslint-disable-next-line es5/no-unicode-code-point-escape\n\tChar = reg('[', chars(Char), '\\\\u{10000}-\\\\u{10FFFF}', ']');\n}\n\nvar _SChar = /[\\x20\\x09\\x0D\\x0A]/;\nvar SChar_s = chars(_SChar);\n// https://www.w3.org/TR/xml11/#NT-S\n// `[3] S ::= (#x20 | #x9 | #xD | #xA)+`\nvar S = reg(_SChar, '+');\n// optional whitespace described as `S?` in the grammar,\n// simplified to 0-n occurrences of the character class\n// instead of 0-1 occurrences of a non-capturing group around S\nvar S_OPT = reg(_SChar, '*');\n\n// https://www.w3.org/TR/xml11/#NT-NameStartChar\n// `[4] NameStartChar ::= \":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]`\nvar NameStartChar =\n\t/[:_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; // without \\u10000-\\uEFFFF\nif (UNICODE_SUPPORT) {\n\t// eslint-disable-next-line es5/no-unicode-code-point-escape\n\tNameStartChar = reg('[', chars(NameStartChar), '\\\\u{10000}-\\\\u{10FFFF}', ']');\n}\nvar NameStartChar_s = chars(NameStartChar);\n\n// https://www.w3.org/TR/xml11/#NT-NameChar\n// `[4a] NameChar ::= NameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]`\nvar NameChar = reg('[', NameStartChar_s, chars(/[-.0-9\\xB7]/), chars(/[\\u0300-\\u036F\\u203F-\\u2040]/), ']');\n// https://www.w3.org/TR/xml11/#NT-Name\n// `[5] Name ::= NameStartChar (NameChar)*`\nvar Name = reg(NameStartChar, NameChar, '*');\n/*\nhttps://www.w3.org/TR/xml11/#NT-Names\n`[6] Names ::= Name (#x20 Name)*`\n*/\n\n// https://www.w3.org/TR/xml11/#NT-Nmtoken\n// `[7] Nmtoken ::= (NameChar)+`\nvar Nmtoken = reg(NameChar, '+');\n/*\nhttps://www.w3.org/TR/xml11/#NT-Nmtokens\n`[8] Nmtokens ::= Nmtoken (#x20 Nmtoken)*`\nvar Nmtokens = reg(Nmtoken, regg(/\\x20/, Nmtoken), '*');\n*/\n\n// https://www.w3.org/TR/xml11/#NT-EntityRef\n// `[68] EntityRef ::= '&' Name ';'` [WFC: Entity Declared] [VC: Entity Declared] [WFC: Parsed Entity] [WFC: No Recursion]\nvar EntityRef = reg('&', Name, ';');\n// https://www.w3.org/TR/xml11/#NT-CharRef\n// `[66] CharRef ::= '&#' [0-9]+ ';' | '&#x' [0-9a-fA-F]+ ';'` [WFC: Legal Character]\nvar CharRef = regg(/&#[0-9]+;|&#x[0-9a-fA-F]+;/);\n\n/*\nhttps://www.w3.org/TR/xml11/#NT-Reference\n- `[67] Reference ::= EntityRef | CharRef`\n- `[66] CharRef ::= '&#' [0-9]+ ';' | '&#x' [0-9a-fA-F]+ ';'` [WFC: Legal Character]\n- `[68] EntityRef ::= '&' Name ';'` [WFC: Entity Declared] [VC: Entity Declared] [WFC: Parsed Entity] [WFC: No Recursion]\n*/\nvar Reference = regg(EntityRef, '|', CharRef);\n\n// https://www.w3.org/TR/xml11/#NT-PEReference\n// `[69] PEReference ::= '%' Name ';'`\n// [VC: Entity Declared] [WFC: No Recursion] [WFC: In DTD]\nvar PEReference = reg('%', Name, ';');\n\n// https://www.w3.org/TR/xml11/#NT-EntityValue\n// `[9] EntityValue ::= '\"' ([^%&\"] | PEReference | Reference)* '\"' | \"'\" ([^%&'] | PEReference | Reference)* \"'\"`\nvar EntityValue = regg(\n\treg('\"', regg(/[^%&\"]/, '|', PEReference, '|', Reference), '*', '\"'),\n\t'|',\n\treg(\"'\", regg(/[^%&']/, '|', PEReference, '|', Reference), '*', \"'\")\n);\n\n// https://www.w3.org/TR/xml11/#NT-AttValue\n// `[10] AttValue ::= '\"' ([^<&\"] | Reference)* '\"' | \"'\" ([^<&'] | Reference)* \"'\"`\nvar AttValue = regg('\"', regg(/[^<&\"]/, '|', Reference), '*', '\"', '|', \"'\", regg(/[^<&']/, '|', Reference), '*', \"'\");\n\n// https://www.w3.org/TR/xml-names/#ns-decl\n// https://www.w3.org/TR/xml-names/#ns-qualnames\n// NameStartChar without \":\"\nvar NCNameStartChar = chars_without(NameStartChar, ':');\n// https://www.w3.org/TR/xml-names/#orphans\n// `[5] NCNameChar ::= NameChar - ':'`\n// An XML NameChar, minus the \":\"\nvar NCNameChar = chars_without(NameChar, ':');\n// https://www.w3.org/TR/xml-names/#NT-NCName\n// `[4] NCName ::= Name - (Char* ':' Char*)`\n// An XML Name, minus the \":\"\nvar NCName = reg(NCNameStartChar, NCNameChar, '*');\n\n/**\nhttps://www.w3.org/TR/xml-names/#ns-qualnames\n\n```\n[7] QName ::= PrefixedName | UnprefixedName\n\t\t\t\t  === (NCName ':' NCName) | NCName\n\t\t\t\t  === NCName (':' NCName)?\n[8] PrefixedName ::= Prefix ':' LocalPart\n\t\t\t\t\t\t\t\t === NCName ':' NCName\n[9] UnprefixedName ::= LocalPart\n\t\t\t\t\t\t\t\t\t === NCName\n[10] Prefix ::= NCName\n[11] LocalPart ::= NCName\n```\n*/\nvar QName = reg(NCName, regg(':', NCName), '?');\nvar QName_exact = reg('^', QName, '$');\nvar QName_group = reg('(', QName, ')');\n\n// https://www.w3.org/TR/xml11/#NT-SystemLiteral\n// `[11] SystemLiteral ::= ('\"' [^\"]* '\"') | (\"'\" [^']* \"'\")`\nvar SystemLiteral = regg(/\"[^\"]*\"|'[^']*'/);\n\n/*\n https://www.w3.org/TR/xml11/#NT-PI\n ```\n [17] PITarget    ::= Name - (('X' | 'x') ('M' | 'm') ('L' | 'l'))\n [16] PI    ::= '<?' PITarget (S (Char* - (Char* '?>' Char*)))? '?>'\n ```\n target /xml/i is not excluded!\n*/\nvar PI = reg(/^<\\?/, '(', Name, ')', regg(S, '(', Char, '*?)'), '?', /\\?>/);\n\n// https://www.w3.org/TR/xml11/#NT-PubidChar\n// `[13] PubidChar ::= #x20 | #xD | #xA | [a-zA-Z0-9] | [-'()+,./:=?;!*#@$_%]`\nvar PubidChar = /[\\x20\\x0D\\x0Aa-zA-Z0-9-'()+,./:=?;!*#@$_%]/;\n\n// https://www.w3.org/TR/xml11/#NT-PubidLiteral\n// `[12] PubidLiteral ::= '\"' PubidChar* '\"' | \"'\" (PubidChar - \"'\")* \"'\"`\nvar PubidLiteral = regg('\"', PubidChar, '*\"', '|', \"'\", chars_without(PubidChar, \"'\"), \"*'\");\n\n// https://www.w3.org/TR/xml11/#NT-CharData\n// `[14] CharData    ::= [^<&]* - ([^<&]* ']]>' [^<&]*)`\n\nvar COMMENT_START = '<!--';\nvar COMMENT_END = '-->';\n// https://www.w3.org/TR/xml11/#NT-Comment\n// `[15] Comment ::= '<!--' ((Char - '-') | ('-' (Char - '-')))* '-->'`\nvar Comment = reg(COMMENT_START, regg(chars_without(Char, '-'), '|', reg('-', chars_without(Char, '-'))), '*', COMMENT_END);\n\nvar PCDATA = '#PCDATA';\n// https://www.w3.org/TR/xml11/#NT-Mixed\n// `[51] Mixed ::= '(' S? '#PCDATA' (S? '|' S? Name)* S? ')*' | '(' S? '#PCDATA' S? ')'`\n// https://www.w3.org/TR/xml-names/#NT-Mixed\n// `[51] Mixed ::= '(' S? '#PCDATA' (S? '|' S? QName)* S? ')*' | '(' S? '#PCDATA' S? ')'`\n// [VC: Proper Group/PE Nesting] [VC: No Duplicate Types]\nvar Mixed = regg(\n\treg(/\\(/, S_OPT, PCDATA, regg(S_OPT, /\\|/, S_OPT, QName), '*', S_OPT, /\\)\\*/),\n\t'|',\n\treg(/\\(/, S_OPT, PCDATA, S_OPT, /\\)/)\n);\n\nvar _children_quantity = /[?*+]?/;\n/*\n `[49] choice ::= '(' S? cp ( S? '|' S? cp )+ S? ')'` [VC: Proper Group/PE Nesting]\n `[50] seq ::= '(' S? cp ( S? ',' S? cp )* S? ')'` [VC: Proper Group/PE Nesting]\n simplification to solve circular referencing, but doesn't check validity constraint \"Proper Group/PE Nesting\"\n var _choice_or_seq = reg('[', NameChar_s, SChar_s, chars(_children_quantity), '()|,]*');\n ```\n [48] cp ::= (Name | choice | seq) ('?' | '*' | '+')?\n         === (Name | '(' S? cp ( S? '|' S? cp )+ S? ')' | '(' S? cp ( S? ',' S? cp )* S? ')') ('?' | '*' | '+')?\n         !== (Name | [_choice_or_seq]*) ('?' | '*' | '+')?\n ```\n simplification to solve circular referencing, but doesn't check validity constraint \"Proper Group/PE Nesting\"\n var cp = reg(regg(Name, '|', _choice_or_seq), _children_quantity);\n*/\n/*\nInefficient regular expression (High)\nThis part of the regular expression may cause exponential backtracking on strings starting with '(|' and containing many repetitions of '|'.\nhttps://github.com/xmldom/xmldom/security/code-scanning/91\nvar choice = regg(/\\(/, S_OPT, cp, regg(S_OPT, /\\|/, S_OPT, cp), '+', S_OPT, /\\)/);\n*/\n/*\nInefficient regular expression (High)\nThis part of the regular expression may cause exponential backtracking on strings starting with '(,' and containing many repetitions of ','.\nhttps://github.com/xmldom/xmldom/security/code-scanning/92\nvar seq = regg(/\\(/, S_OPT, cp, regg(S_OPT, /,/, S_OPT, cp), '*', S_OPT, /\\)/);\n*/\n\n// `[47] children ::= (choice | seq) ('?' | '*' | '+')?`\n// simplification to solve circular referencing, but doesn't check validity constraint \"Proper Group/PE Nesting\"\nvar children = reg(/\\([^>]+\\)/, _children_quantity /*regg(choice, '|', seq), _children_quantity*/);\n\n// https://www.w3.org/TR/xml11/#NT-contentspec\n// `[46] contentspec ::= 'EMPTY' | 'ANY' | Mixed | children`\nvar contentspec = regg('EMPTY', '|', 'ANY', '|', Mixed, '|', children);\n\nvar ELEMENTDECL_START = '<!ELEMENT';\n// https://www.w3.org/TR/xml11/#NT-elementdecl\n// `[45] elementdecl ::= '<!ELEMENT' S Name S contentspec S? '>'`\n// https://www.w3.org/TR/xml-names/#NT-elementdecl\n// `[17] elementdecl ::= '<!ELEMENT' S QName S contentspec S? '>'`\n// because of https://www.w3.org/TR/xml11/#NT-PEReference\n// since xmldom is not supporting replacements of PEReferences in the DTD\n// this also supports PEReference in the possible places\nvar elementdecl = reg(ELEMENTDECL_START, S, regg(QName, '|', PEReference), S, regg(contentspec, '|', PEReference), S_OPT, '>');\n\n// https://www.w3.org/TR/xml11/#NT-NotationType\n// `[58] NotationType ::= 'NOTATION' S '(' S? Name (S? '|' S? Name)* S? ')'`\n// [VC: Notation Attributes] [VC: One Notation Per Element Type] [VC: No Notation on Empty Element] [VC: No Duplicate Tokens]\nvar NotationType = reg('NOTATION', S, /\\(/, S_OPT, Name, regg(S_OPT, /\\|/, S_OPT, Name), '*', S_OPT, /\\)/);\n// https://www.w3.org/TR/xml11/#NT-Enumeration\n// `[59] Enumeration ::= '(' S? Nmtoken (S? '|' S? Nmtoken)* S? ')'`\n// [VC: Enumeration] [VC: No Duplicate Tokens]\nvar Enumeration = reg(/\\(/, S_OPT, Nmtoken, regg(S_OPT, /\\|/, S_OPT, Nmtoken), '*', S_OPT, /\\)/);\n\n// https://www.w3.org/TR/xml11/#NT-EnumeratedType\n// `[57] EnumeratedType ::= NotationType | Enumeration`\nvar EnumeratedType = regg(NotationType, '|', Enumeration);\n\n/*\n```\n[55] StringType ::= 'CDATA'\n[56] TokenizedType ::= 'ID' [VC: ID] [VC: One ID per Element Type] [VC: ID Attribute Default]\n   | 'IDREF' [VC: IDREF]\n   | 'IDREFS' [VC: IDREF]\n\t | 'ENTITY' [VC: Entity Name]\n\t | 'ENTITIES' [VC: Entity Name]\n\t | 'NMTOKEN' [VC: Name Token]\n\t | 'NMTOKENS' [VC: Name Token]\n [54] AttType ::= StringType | TokenizedType | EnumeratedType\n```*/\nvar AttType = regg(/CDATA|ID|IDREF|IDREFS|ENTITY|ENTITIES|NMTOKEN|NMTOKENS/, '|', EnumeratedType);\n\n// `[60] DefaultDecl ::= '#REQUIRED' | '#IMPLIED' | (('#FIXED' S)? AttValue)`\n// [WFC: No < in Attribute Values] [WFC: No External Entity References]\n// [VC: Fixed Attribute Default] [VC: Required Attribute] [VC: Attribute Default Value Syntactically Correct]\nvar DefaultDecl = regg(/#REQUIRED|#IMPLIED/, '|', regg(regg('#FIXED', S), '?', AttValue));\n\n// https://www.w3.org/TR/xml11/#NT-AttDef\n// [53] AttDef ::= S Name S AttType S DefaultDecl\n// https://www.w3.org/TR/xml-names/#NT-AttDef\n// [1] NSAttName ::= PrefixedAttName | DefaultAttName\n// [2] PrefixedAttName ::= 'xmlns:' NCName [NSC: Reserved Prefixes and Namespace Names]\n// [3] DefaultAttName ::= 'xmlns'\n// [21] AttDef ::= S (QName | NSAttName) S AttType S DefaultDecl\n// \t\t\t\t\t\t === S Name S AttType S DefaultDecl\n// xmldom is not distinguishing between QName and NSAttName on this level\n// to support XML without namespaces in DTD we can not restrict it to QName\nvar AttDef = regg(S, Name, S, AttType, S, DefaultDecl);\n\nvar ATTLIST_DECL_START = '<!ATTLIST';\n// https://www.w3.org/TR/xml11/#NT-AttlistDecl\n// `[52] AttlistDecl ::= '<!ATTLIST' S Name AttDef* S? '>'`\n// https://www.w3.org/TR/xml-names/#NT-AttlistDecl\n// `[20] AttlistDecl ::= '<!ATTLIST' S QName AttDef* S? '>'`\n// to support XML without namespaces in DTD we can not restrict it to QName\nvar AttlistDecl = reg(ATTLIST_DECL_START, S, Name, AttDef, '*', S_OPT, '>');\n\nvar SYSTEM = 'SYSTEM';\nvar PUBLIC = 'PUBLIC';\n// https://www.w3.org/TR/xml11/#NT-ExternalID\n// `[75] ExternalID ::= 'SYSTEM' S SystemLiteral | 'PUBLIC' S PubidLiteral S SystemLiteral`\nvar ExternalID = regg(regg(SYSTEM, S, SystemLiteral), '|', regg(PUBLIC, S, PubidLiteral, S, SystemLiteral));\nvar ExternalID_match = reg(\n\t'^',\n\tregg(\n\t\tregg(SYSTEM, S, '(?<SystemLiteralOnly>', SystemLiteral, ')'),\n\t\t'|',\n\t\tregg(PUBLIC, S, '(?<PubidLiteral>', PubidLiteral, ')', S, '(?<SystemLiteral>', SystemLiteral, ')')\n\t)\n);\n\n// https://www.w3.org/TR/xml11/#NT-NDataDecl\n// `[76] NDataDecl ::= S 'NDATA' S Name` [VC: Notation Declared]\nvar NDataDecl = regg(S, 'NDATA', S, Name);\n\n// https://www.w3.org/TR/xml11/#NT-EntityDef\n// `[73] EntityDef ::= EntityValue | (ExternalID NDataDecl?)`\nvar EntityDef = regg(EntityValue, '|', regg(ExternalID, NDataDecl, '?'));\n\nvar ENTITY_DECL_START = '<!ENTITY';\n// https://www.w3.org/TR/xml11/#NT-GEDecl\n// `[71] GEDecl ::= '<!ENTITY' S Name S EntityDef S? '>'`\nvar GEDecl = reg(ENTITY_DECL_START, S, Name, S, EntityDef, S_OPT, '>');\n// https://www.w3.org/TR/xml11/#NT-PEDef\n// `[74] PEDef ::= EntityValue | ExternalID`\nvar PEDef = regg(EntityValue, '|', ExternalID);\n// https://www.w3.org/TR/xml11/#NT-PEDecl\n// `[72] PEDecl ::= '<!ENTITY' S '%' S Name S PEDef S? '>'`\nvar PEDecl = reg(ENTITY_DECL_START, S, '%', S, Name, S, PEDef, S_OPT, '>');\n// https://www.w3.org/TR/xml11/#NT-EntityDecl\n// `[70] EntityDecl ::= GEDecl | PEDecl`\nvar EntityDecl = regg(GEDecl, '|', PEDecl);\n\n// https://www.w3.org/TR/xml11/#NT-PublicID\n// `[83] PublicID    ::= 'PUBLIC' S PubidLiteral`\nvar PublicID = reg(PUBLIC, S, PubidLiteral);\n// https://www.w3.org/TR/xml11/#NT-NotationDecl\n// `[82] NotationDecl    ::= '<!NOTATION' S Name S (ExternalID | PublicID) S? '>'` [VC: Unique Notation Name]\nvar NotationDecl = reg('<!NOTATION', S, Name, S, regg(ExternalID, '|', PublicID), S_OPT, '>');\n\n// https://www.w3.org/TR/xml11/#NT-Eq\n// `[25] Eq ::= S? '=' S?`\nvar Eq = reg(S_OPT, '=', S_OPT);\n// https://www.w3.org/TR/xml/#NT-VersionNum\n// `[26] VersionNum ::= '1.' [0-9]+`\n// https://www.w3.org/TR/xml11/#NT-VersionNum\n// `[26] VersionNum ::= '1.1'`\nvar VersionNum = /1[.]\\d+/;\n// https://www.w3.org/TR/xml11/#NT-VersionInfo\n// `[24] VersionInfo ::= S 'version' Eq (\"'\" VersionNum \"'\" | '\"' VersionNum '\"')`\nvar VersionInfo = reg(S, 'version', Eq, regg(\"'\", VersionNum, \"'\", '|', '\"', VersionNum, '\"'));\n// https://www.w3.org/TR/xml11/#NT-EncName\n// `[81] EncName ::= [A-Za-z] ([A-Za-z0-9._] | '-')*`\nvar EncName = /[A-Za-z][-A-Za-z0-9._]*/;\n// https://www.w3.org/TR/xml11/#NT-EncDecl\n// `[80] EncodingDecl ::= S 'encoding' Eq ('\"' EncName '\"' | \"'\" EncName \"'\" )`\nvar EncodingDecl = regg(S, 'encoding', Eq, regg('\"', EncName, '\"', '|', \"'\", EncName, \"'\"));\n// https://www.w3.org/TR/xml11/#NT-SDDecl\n// `[32] SDDecl ::= S 'standalone' Eq ((\"'\" ('yes' | 'no') \"'\") | ('\"' ('yes' | 'no') '\"'))`\nvar SDDecl = regg(S, 'standalone', Eq, regg(\"'\", regg('yes', '|', 'no'), \"'\", '|', '\"', regg('yes', '|', 'no'), '\"'));\n// https://www.w3.org/TR/xml11/#NT-XMLDecl\n// [23] XMLDecl ::= '<?xml' VersionInfo EncodingDecl? SDDecl? S? '?>'\nvar XMLDecl = reg(/^<\\?xml/, VersionInfo, EncodingDecl, '?', SDDecl, '?', S_OPT, /\\?>/);\n\n/*\n https://www.w3.org/TR/xml/#NT-markupdecl\n https://www.w3.org/TR/xml11/#NT-markupdecl\n `[29] markupdecl ::= elementdecl | AttlistDecl | EntityDecl | NotationDecl | PI | Comment`\n var markupdecl = regg(elementdecl, '|', AttlistDecl, '|', EntityDecl, '|', NotationDecl, '|', PI_unsafe, '|', Comment);\n*/\n/*\n https://www.w3.org/TR/xml-names/#NT-doctypedecl\n`[28a] DeclSep   ::= PEReference | S`\n https://www.w3.org/TR/xml11/#NT-intSubset\n```\n [28b] intSubset ::= (markupdecl | DeclSep)*\n                 === (markupdecl | PEReference | S)*\n```\n [WFC: PE Between Declarations]\n var intSubset = reg(regg(markupdecl, '|', PEReference, '|', S), '*');\n*/\nvar DOCTYPE_DECL_START = '<!DOCTYPE';\n/*\n https://www.w3.org/TR/xml11/#NT-doctypedecl\n `[28] doctypedecl ::= '<!DOCTYPE' S Name (S ExternalID)? S? ('[' intSubset ']' S?)? '>'`\n https://www.afterwardsw3.org/TR/xml-names/#NT-doctypedecl\n `[16] doctypedecl ::= '<!DOCTYPE' S QName (S ExternalID)? S? ('[' (markupdecl | PEReference | S)* ']' S?)? '>'`\n var doctypedecl = reg('<!DOCTYPE', S, Name, regg(S, ExternalID), '?', S_OPT, regg(/\\[/, intSubset, /]/, S_OPT), '?', '>');\n*/\n\nvar CDATA_START = '<![CDATA[';\nvar CDATA_END = ']]>';\nvar CDStart = /<!\\[CDATA\\[/;\nvar CDEnd = /\\]\\]>/;\nvar CData = reg(Char, '*?', CDEnd);\n/*\n https://www.w3.org/TR/xml/#dt-cdsection\n `[18]   \tCDSect\t   ::=   \tCDStart CData CDEnd`\n `[19]   \tCDStart\t   ::=   \t'<![CDATA['`\n `[20]   \tCData\t   ::=   \t(Char* - (Char* ']]>' Char*))`\n `[21]   \tCDEnd\t   ::=   \t']]>'`\n*/\nvar CDSect = reg(CDStart, CData);\n\n// unit tested\nexports.chars = chars;\nexports.chars_without = chars_without;\nexports.detectUnicodeSupport = detectUnicodeSupport;\nexports.reg = reg;\nexports.regg = regg;\nexports.AttlistDecl = AttlistDecl;\nexports.CDATA_START = CDATA_START;\nexports.CDATA_END = CDATA_END;\nexports.CDSect = CDSect;\nexports.Char = Char;\nexports.Comment = Comment;\nexports.COMMENT_START = COMMENT_START;\nexports.COMMENT_END = COMMENT_END;\nexports.DOCTYPE_DECL_START = DOCTYPE_DECL_START;\nexports.elementdecl = elementdecl;\nexports.EntityDecl = EntityDecl;\nexports.EntityValue = EntityValue;\nexports.ExternalID = ExternalID;\nexports.ExternalID_match = ExternalID_match;\nexports.Name = Name;\nexports.NotationDecl = NotationDecl;\nexports.Reference = Reference;\nexports.PEReference = PEReference;\nexports.PI = PI;\nexports.PUBLIC = PUBLIC;\nexports.PubidLiteral = PubidLiteral;\nexports.QName = QName;\nexports.QName_exact = QName_exact;\nexports.QName_group = QName_group;\nexports.S = S;\nexports.SChar_s = SChar_s;\nexports.S_OPT = S_OPT;\nexports.SYSTEM = SYSTEM;\nexports.SystemLiteral = SystemLiteral;\nexports.UNICODE_REPLACEMENT_CHARACTER = UNICODE_REPLACEMENT_CHARACTER;\nexports.UNICODE_SUPPORT = UNICODE_SUPPORT;\nexports.XMLDecl = XMLDecl;\n","'use strict';\n\nvar conventions = require('./conventions');\nvar find = conventions.find;\nvar hasDefaultHTMLNamespace = conventions.hasDefaultHTMLNamespace;\nvar hasOwn = conventions.hasOwn;\nvar isHTMLMimeType = conventions.isHTMLMimeType;\nvar isHTMLRawTextElement = conventions.isHTMLRawTextElement;\nvar isHTMLVoidElement = conventions.isHTMLVoidElement;\nvar MIME_TYPE = conventions.MIME_TYPE;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * Private DOM Constructor symbol\n *\n * Internal symbol used for construction of all classes whose constructors should be private.\n * Currently used for checks in `Node`, `Document`, `Element`, `Attr`, `CharacterData`, `Text`, `Comment`,\n * `CDATASection`, `DocumentType`, `Notation`, `Entity`, `EntityReference`, `DocumentFragment`, `ProcessingInstruction`\n * so the constructor can't be used from outside the module.\n */\nvar PDC = Symbol();\n\nvar errors = require('./errors');\nvar DOMException = errors.DOMException;\nvar DOMExceptionName = errors.DOMExceptionName;\n\nvar g = require('./grammar');\n\n/**\n * Checks if the given symbol equals the Private DOM Constructor symbol (PDC)\n * and throws an Illegal constructor exception when the symbols don't match.\n * This ensures that the constructor remains private and can't be used outside this module.\n */\nfunction checkSymbol(symbol) {\n\tif (symbol !== PDC) {\n\t\tthrow new TypeError('Illegal constructor');\n\t}\n}\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty.\n *\n * @param {string} input\n * The string to be checked.\n * @returns {boolean}\n * Returns `true` if the input string is not empty, `false` otherwise.\n */\nfunction notEmptyString(input) {\n\treturn input !== '';\n}\n/**\n * Splits a string on ASCII whitespace characters (U+0009 TAB, U+000A LF, U+000C FF, U+000D CR,\n * U+0020 SPACE).\n * It follows the definition from the infra specification from WHATWG.\n *\n * @param {string} input\n * The string to be split.\n * @returns {string[]}\n * An array of the split strings. The array can be empty if the input string is empty or only\n * contains whitespace characters.\n * @see {@link https://infra.spec.whatwg.org/#split-on-ascii-whitespace}\n * @see {@link https://infra.spec.whatwg.org/#ascii-whitespace}\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * The current record object to which the element will be added as a key.\n * The object's keys are string types and values are either boolean or undefined.\n * @param {string} element\n * The string to be added as a key to the current record.\n * @returns {Record<string, boolean | undefined>}\n * The updated record object after the addition of the new element.\n */\nfunction orderedSetReducer(current, element) {\n\tif (!hasOwn(current, element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * Converts a string into an ordered set by splitting the input on ASCII whitespace and\n * ensuring uniqueness of elements.\n * This follows the definition of an ordered set from the infra specification by WHATWG.\n *\n * @param {string} input\n * The input string to be transformed into an ordered set.\n * @returns {string[]}\n * An array of unique strings obtained from the input, preserving the original order.\n * The array can be empty if the input string is empty or only contains whitespace characters.\n * @see {@link https://infra.spec.whatwg.org/#ordered-set}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}));\n}\n\n/**\n * Uses `list.indexOf` to implement a function that behaves like `Array.prototype.includes`.\n * This function is used in environments where `Array.prototype.includes` may not be available.\n *\n * @param {any[]} list\n * The array in which to search for the element.\n * @returns {function(any): boolean}\n * A function that accepts an element and returns a boolean indicating whether the element is\n * included in the provided list.\n */\nfunction arrayIncludes(list) {\n\treturn function (element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t};\n}\n\n/**\n * Validates a qualified name based on the criteria provided in the DOM specification by\n * WHATWG.\n *\n * @param {string} qualifiedName\n * The qualified name to be validated.\n * @throws {DOMException}\n * With code {@link DOMException.INVALID_CHARACTER_ERR} if the qualified name contains an\n * invalid character.\n * @see {@link https://dom.spec.whatwg.org/#validate}\n */\nfunction validateQualifiedName(qualifiedName) {\n\tif (!g.QName_exact.test(qualifiedName)) {\n\t\tthrow new DOMException(DOMException.INVALID_CHARACTER_ERR, 'invalid character in qualified name \"' + qualifiedName + '\"');\n\t}\n}\n\n/**\n * Validates a qualified name and the namespace associated with it,\n * based on the criteria provided in the DOM specification by WHATWG.\n *\n * @param {string | null} namespace\n * The namespace to be validated. It can be a string or null.\n * @param {string} qualifiedName\n * The qualified name to be validated.\n * @returns {[namespace: string | null, prefix: string | null, localName: string]}\n * Returns a tuple with the namespace,\n * prefix and local name of the qualified name.\n * @throws {DOMException}\n * Throws a DOMException if the qualified name or the namespace is not valid.\n * @see {@link https://dom.spec.whatwg.org/#validate-and-extract}\n */\nfunction validateAndExtract(namespace, qualifiedName) {\n\tvalidateQualifiedName(qualifiedName);\n\tnamespace = namespace || null;\n\t/**\n\t * @type {string | null}\n\t */\n\tvar prefix = null;\n\tvar localName = qualifiedName;\n\tif (qualifiedName.indexOf(':') >= 0) {\n\t\tvar splitResult = qualifiedName.split(':');\n\t\tprefix = splitResult[0];\n\t\tlocalName = splitResult[1];\n\t}\n\tif (prefix !== null && namespace === null) {\n\t\tthrow new DOMException(DOMException.NAMESPACE_ERR, 'prefix is non-null and namespace is null');\n\t}\n\tif (prefix === 'xml' && namespace !== conventions.NAMESPACE.XML) {\n\t\tthrow new DOMException(DOMException.NAMESPACE_ERR, 'prefix is \"xml\" and namespace is not the XML namespace');\n\t}\n\tif ((prefix === 'xmlns' || qualifiedName === 'xmlns') && namespace !== conventions.NAMESPACE.XMLNS) {\n\t\tthrow new DOMException(\n\t\t\tDOMException.NAMESPACE_ERR,\n\t\t\t'either qualifiedName or prefix is \"xmlns\" and namespace is not the XMLNS namespace'\n\t\t);\n\t}\n\tif (namespace === conventions.NAMESPACE.XMLNS && prefix !== 'xmlns' && qualifiedName !== 'xmlns') {\n\t\tthrow new DOMException(\n\t\t\tDOMException.NAMESPACE_ERR,\n\t\t\t'namespace is the XMLNS namespace and neither qualifiedName nor prefix is \"xmlns\"'\n\t\t);\n\t}\n\treturn [namespace, prefix, localName];\n}\n\n/**\n * Copies properties from one object to another.\n * It only copies the object's own (not inherited) properties.\n *\n * @param {Object} src\n * The source object from which properties are copied.\n * @param {Object} dest\n * The destination object to which properties are copied.\n */\nfunction copy(src, dest) {\n\tfor (var p in src) {\n\t\tif (hasOwn(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n * Extends a class with the properties and methods of a super class.\n * It uses a form of prototypal inheritance, and establishes the `constructor` property\n * correctly(?).\n *\n * It is not clear to the current maintainers if this implementation is making sense,\n * since it creates an intermediate prototype function,\n * which all properties of `Super` are copied onto using `_copy`.\n *\n * @param {Object} Class\n * The class that is to be extended.\n * @param {Object} Super\n * The super class from which properties and methods are inherited.\n * @private\n */\nfunction _extends(Class, Super) {\n\tvar pt = Class.prototype;\n\tif (!(pt instanceof Super)) {\n\t\tfunction t() {}\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt, t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif (pt.constructor != Class) {\n\t\tif (typeof Class != 'function') {\n\t\t\tconsole.error('unknown Class:' + Class);\n\t\t}\n\t\tpt.constructor = Class;\n\t}\n}\n\nvar NodeType = {};\nvar ELEMENT_NODE = (NodeType.ELEMENT_NODE = 1);\nvar ATTRIBUTE_NODE = (NodeType.ATTRIBUTE_NODE = 2);\nvar TEXT_NODE = (NodeType.TEXT_NODE = 3);\nvar CDATA_SECTION_NODE = (NodeType.CDATA_SECTION_NODE = 4);\nvar ENTITY_REFERENCE_NODE = (NodeType.ENTITY_REFERENCE_NODE = 5);\nvar ENTITY_NODE = (NodeType.ENTITY_NODE = 6);\nvar PROCESSING_INSTRUCTION_NODE = (NodeType.PROCESSING_INSTRUCTION_NODE = 7);\nvar COMMENT_NODE = (NodeType.COMMENT_NODE = 8);\nvar DOCUMENT_NODE = (NodeType.DOCUMENT_NODE = 9);\nvar DOCUMENT_TYPE_NODE = (NodeType.DOCUMENT_TYPE_NODE = 10);\nvar DOCUMENT_FRAGMENT_NODE = (NodeType.DOCUMENT_FRAGMENT_NODE = 11);\nvar NOTATION_NODE = (NodeType.NOTATION_NODE = 12);\n\nvar DocumentPosition = conventions.freeze({\n\tDOCUMENT_POSITION_DISCONNECTED: 1,\n\tDOCUMENT_POSITION_PRECEDING: 2,\n\tDOCUMENT_POSITION_FOLLOWING: 4,\n\tDOCUMENT_POSITION_CONTAINS: 8,\n\tDOCUMENT_POSITION_CONTAINED_BY: 16,\n\tDOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 32,\n});\n\n//helper functions for compareDocumentPosition\n/**\n * Constructs a parent chain for a node.\n *\n * @param {Node} node\n * The start node from which the parent chain will be constructed.\n * @returns {Node[]}\n * The array of nodes representing the parent chain from the root to the specified node.\n */\nfunction parentChain(node) {\n\tvar chain = [];\n\twhile (node.parentNode || node.ownerElement) {\n\t\tnode = node.parentNode || node.ownerElement;\n\t\tchain.unshift(node);\n\t}\n\treturn chain;\n}\n\n/**\n * Finds the common ancestor in two parent chains.\n *\n * @param {Node[]} a\n * The first parent chain.\n * @param {Node[]} b\n * The second parent chain.\n * @returns {Node}\n * The common ancestor node if it exists. If there is no common ancestor, the function will\n * return `null`.\n */\nfunction commonAncestor(a, b) {\n\tif (b.length < a.length) return commonAncestor(b, a);\n\tvar c = null;\n\tfor (var n in a) {\n\t\tif (a[n] !== b[n]) return c;\n\t\tc = a[n];\n\t}\n\treturn c;\n}\n\n/**\n * Assigns a unique identifier to a document to ensure consistency while comparing unrelated\n * nodes.\n *\n * @param {Document} doc\n * The document to which a unique identifier is to be assigned.\n * @returns {string}\n * The unique identifier of the document. If the document already had a unique identifier, the\n * function will return the existing one.\n */\nfunction docGUID(doc) {\n\tif (!doc.guid) doc.guid = Math.random();\n\treturn doc.guid;\n}\n//-- end of helper functions\n\n/**\n * The NodeList interface provides the abstraction of an ordered collection of nodes,\n * without defining or constraining how this collection is implemented.\n * NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n * You can also access the items of the NodeList with a `for...of` loop.\n *\n * @class NodeList\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * @constructs NodeList\n */\nfunction NodeList() {}\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1\n\t * inclusive.\n\t *\n\t * @type {number}\n\t */\n\tlength: 0,\n\t/**\n\t * Returns the item at `index`. If index is greater than or equal to the number of nodes in\n\t * the list, this returns null.\n\t *\n\t * @param index\n\t * Unsigned long Index into the collection.\n\t * @returns {Node | null}\n\t * The node at position `index` in the NodeList,\n\t * or null if that is not a valid index.\n\t */\n\titem: function (index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\t/**\n\t * Returns a string representation of the NodeList.\n\t *\n\t * @param {unknown} nodeFilter\n\t * __A filter function? Not implemented according to the spec?__.\n\t * @returns {string}\n\t * A string representation of the NodeList.\n\t */\n\ttoString: function (nodeFilter) {\n\t\tfor (var buf = [], i = 0; i < this.length; i++) {\n\t\t\tserializeToString(this[i], buf, nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * Filters the NodeList based on a predicate.\n\t *\n\t * @param {function(Node): boolean} predicate\n\t * - A predicate function to filter the NodeList.\n\t * @returns {Node[]}\n\t * An array of nodes that satisfy the predicate.\n\t * @private\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * Returns the first index at which a given node can be found in the NodeList, or -1 if it is\n\t * not present.\n\t *\n\t * @param {Node} item\n\t * - The Node item to locate in the NodeList.\n\t * @returns {number}\n\t * The first index of the node in the NodeList; -1 if not found.\n\t * @private\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\nNodeList.prototype[Symbol.iterator] = function () {\n\tvar me = this;\n\tvar index = 0;\n\n\treturn {\n\t\tnext: function () {\n\t\t\tif (index < me.length) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: me[index++],\n\t\t\t\t\tdone: false,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\treturn: function () {\n\t\t\treturn {\n\t\t\t\tdone: true,\n\t\t\t};\n\t\t},\n\t};\n};\n\n/**\n * Represents a live collection of nodes that is automatically updated when its associated\n * document changes.\n *\n * @class LiveNodeList\n * @param {Node} node\n * The associated node.\n * @param {function} refresh\n * The function to refresh the live node list.\n * @augments NodeList\n * @constructs LiveNodeList\n */\nfunction LiveNodeList(node, refresh) {\n\tthis._node = node;\n\tthis._refresh = refresh;\n\t_updateLiveList(this);\n}\n/**\n * Updates the live node list.\n *\n * @param {LiveNodeList} list\n * The live node list to update.\n * @private\n */\nfunction _updateLiveList(list) {\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list, 'length', ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (hasOwn(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls, list);\n\t\tlist._inc = inc;\n\t}\n}\n/**\n * Returns the node at position `index` in the LiveNodeList, or null if that is not a valid\n * index.\n *\n * @param {number} i\n * Index into the collection.\n * @returns {Node | null}\n * The node at position `index` in the LiveNodeList, or null if that is not a valid index.\n */\nLiveNodeList.prototype.item = function (i) {\n\t_updateLiveList(this);\n\treturn this[i] || null;\n};\n\n_extends(LiveNodeList, NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used to represent collections of nodes\n * that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal\n * index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n *\n * This implementation only supports property indices, but does not support named properties,\n * as specified in the living standard.\n *\n * @class NamedNodeMap\n * @see https://dom.spec.whatwg.org/#interface-namednodemap\n * @see https://webidl.spec.whatwg.org/#dfn-supported-property-names\n * @constructs NamedNodeMap\n */\nfunction NamedNodeMap() {}\n/**\n * Returns the index of a node within the list.\n *\n * @param {Array} list\n * The list of nodes.\n * @param {Node} node\n * The node to find.\n * @returns {number}\n * The index of the node within the list, or -1 if not found.\n * @private\n */\nfunction _findNodeIndex(list, node) {\n\tvar i = 0;\n\twhile (i < list.length) {\n\t\tif (list[i] === node) {\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n}\n/**\n * Adds a new attribute to the list and updates the owner element of the attribute.\n *\n * @param {Element} el\n * The element which will become the owner of the new attribute.\n * @param {NamedNodeMap} list\n * The list to which the new attribute will be added.\n * @param {Attr} newAttr\n * The new attribute to be added.\n * @param {Attr} oldAttr\n * The old attribute to be replaced, or null if no attribute is to be replaced.\n * @returns {void}\n * @private\n */\nfunction _addNamedNode(el, list, newAttr, oldAttr) {\n\tif (oldAttr) {\n\t\tlist[_findNodeIndex(list, oldAttr)] = newAttr;\n\t} else {\n\t\tlist[list.length] = newAttr;\n\t\tlist.length++;\n\t}\n\tif (el) {\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif (doc) {\n\t\t\toldAttr && _onRemoveAttribute(doc, el, oldAttr);\n\t\t\t_onAddAttribute(doc, el, newAttr);\n\t\t}\n\t}\n}\n/**\n * Removes an attribute from the list and updates the owner element of the attribute.\n *\n * @param {Element} el\n * The element which is the current owner of the attribute.\n * @param {NamedNodeMap} list\n * The list from which the attribute will be removed.\n * @param {Attr} attr\n * The attribute to be removed.\n * @returns {void}\n * @private\n */\nfunction _removeNamedNode(el, list, attr) {\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list, attr);\n\tif (i >= 0) {\n\t\tvar lastIndex = list.length - 1;\n\t\twhile (i <= lastIndex) {\n\t\t\tlist[i] = list[++i];\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif (el) {\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif (doc) {\n\t\t\t\t_onRemoveAttribute(doc, el, attr);\n\t\t\t}\n\t\t\tattr.ownerElement = null;\n\t\t}\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength: 0,\n\titem: NodeList.prototype.item,\n\n\t/**\n\t * Get an attribute by name. Note: Name is in lower case in case of HTML namespace and\n\t * document.\n\t *\n\t * @param {string} localName\n\t * The local name of the attribute.\n\t * @returns {Attr | null}\n\t * The attribute with the given local name, or null if no such attribute exists.\n\t * @see https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n\t */\n\tgetNamedItem: function (localName) {\n\t\tif (this._ownerElement && this._ownerElement._isInHTMLDocumentAndNamespace()) {\n\t\t\tlocalName = localName.toLowerCase();\n\t\t}\n\t\tvar i = 0;\n\t\twhile (i < this.length) {\n\t\t\tvar attr = this[i];\n\t\t\tif (attr.nodeName === localName) {\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn null;\n\t},\n\n\t/**\n\t * Set an attribute.\n\t *\n\t * @param {Attr} attr\n\t * The attribute to set.\n\t * @returns {Attr | null}\n\t * The old attribute with the same local name and namespace URI as the new one, or null if no\n\t * such attribute exists.\n\t * @throws {DOMException}\n\t * With code:\n\t * - {@link INUSE_ATTRIBUTE_ERR} - If the attribute is already an attribute of another\n\t * element.\n\t * @see https://dom.spec.whatwg.org/#concept-element-attributes-set\n\t */\n\tsetNamedItem: function (attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif (el && el !== this._ownerElement) {\n\t\t\tthrow new DOMException(DOMException.INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n\t\tif (oldAttr === attr) {\n\t\t\treturn attr;\n\t\t}\n\t\t_addNamedNode(this._ownerElement, this, attr, oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/**\n\t * Set an attribute, replacing an existing attribute with the same local name and namespace\n\t * URI if one exists.\n\t *\n\t * @param {Attr} attr\n\t * The attribute to set.\n\t * @returns {Attr | null}\n\t * The old attribute with the same local name and namespace URI as the new one, or null if no\n\t * such attribute exists.\n\t * @throws {DOMException}\n\t * Throws a DOMException with the name \"InUseAttributeError\" if the attribute is already an\n\t * attribute of another element.\n\t * @see https://dom.spec.whatwg.org/#concept-element-attributes-set\n\t */\n\tsetNamedItemNS: function (attr) {\n\t\treturn this.setNamedItem(attr);\n\t},\n\n\t/**\n\t * Removes an attribute specified by the local name.\n\t *\n\t * @param {string} localName\n\t * The local name of the attribute to be removed.\n\t * @returns {Attr}\n\t * The attribute node that was removed.\n\t * @throws {DOMException}\n\t * With code:\n\t * - {@link DOMException.NOT_FOUND_ERR} if no attribute with the given name is found.\n\t * @see https://dom.spec.whatwg.org/#dom-namednodemap-removenameditem\n\t * @see https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n\t */\n\tremoveNamedItem: function (localName) {\n\t\tvar attr = this.getNamedItem(localName);\n\t\tif (!attr) {\n\t\t\tthrow new DOMException(DOMException.NOT_FOUND_ERR, localName);\n\t\t}\n\t\t_removeNamedNode(this._ownerElement, this, attr);\n\t\treturn attr;\n\t},\n\n\t/**\n\t * Removes an attribute specified by the namespace and local name.\n\t *\n\t * @param {string | null} namespaceURI\n\t * The namespace URI of the attribute to be removed.\n\t * @param {string} localName\n\t * The local name of the attribute to be removed.\n\t * @returns {Attr}\n\t * The attribute node that was removed.\n\t * @throws {DOMException}\n\t * With code:\n\t * - {@link DOMException.NOT_FOUND_ERR} if no attribute with the given namespace URI and local\n\t * name is found.\n\t * @see https://dom.spec.whatwg.org/#dom-namednodemap-removenameditemns\n\t * @see https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n\t */\n\tremoveNamedItemNS: function (namespaceURI, localName) {\n\t\tvar attr = this.getNamedItemNS(namespaceURI, localName);\n\t\tif (!attr) {\n\t\t\tthrow new DOMException(DOMException.NOT_FOUND_ERR, namespaceURI ? namespaceURI + ' : ' + localName : localName);\n\t\t}\n\t\t_removeNamedNode(this._ownerElement, this, attr);\n\t\treturn attr;\n\t},\n\n\t/**\n\t * Get an attribute by namespace and local name.\n\t *\n\t * @param {string | null} namespaceURI\n\t * The namespace URI of the attribute.\n\t * @param {string} localName\n\t * The local name of the attribute.\n\t * @returns {Attr | null}\n\t * The attribute with the given namespace URI and local name, or null if no such attribute\n\t * exists.\n\t * @see https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n\t */\n\tgetNamedItemNS: function (namespaceURI, localName) {\n\t\tif (!namespaceURI) {\n\t\t\tnamespaceURI = null;\n\t\t}\n\t\tvar i = 0;\n\t\twhile (i < this.length) {\n\t\t\tvar node = this[i];\n\t\t\tif (node.localName === localName && node.namespaceURI === namespaceURI) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn null;\n\t},\n};\nNamedNodeMap.prototype[Symbol.iterator] = function () {\n\tvar me = this;\n\tvar index = 0;\n\n\treturn {\n\t\tnext: function () {\n\t\t\tif (index < me.length) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: me[index++],\n\t\t\t\t\tdone: false,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\treturn: function () {\n\t\t\treturn {\n\t\t\t\tdone: true,\n\t\t\t};\n\t\t},\n\t};\n};\n\n/**\n * The DOMImplementation interface provides a number of methods for performing operations that\n * are independent of any particular instance of the document object model.\n *\n * The DOMImplementation interface represents an object providing methods which are not\n * dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * **The individual methods describe the differences compared to the specs**.\n *\n * @class DOMImplementation\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core\n *      (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n * @constructs DOMImplementation\n */\nfunction DOMImplementation() {}\n\nDOMImplementation.prototype = {\n\t/**\n\t * Test if the DOM implementation implements a specific feature and version, as specified in\n\t * {@link https://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures DOM Features}.\n\t *\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given\n\t * feature is supported. The different implementations fairly diverged in what kind of\n\t * features were reported. The latest version of the spec settled to force this method to\n\t * always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated\n\t * It is deprecated and modern browsers return true in all cases.\n\t * @function DOMImplementation#hasFeature\n\t * @param {string} feature\n\t * The name of the feature to test.\n\t * @param {string} [version]\n\t * This is the version number of the feature to test.\n\t * @returns {boolean}\n\t * Always returns true.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5CED94D7 DOM Level 3 Core\n\t */\n\thasFeature: function (feature, version) {\n\t\treturn true;\n\t},\n\t/**\n\t * Creates a DOM Document object of the specified type with its document element. Note that\n\t * based on the {@link DocumentType}\n\t * given to create the document, the implementation may instantiate specialized\n\t * {@link Document} objects that support additional features than the \"Core\", such as \"HTML\"\n\t * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#DOM2HTML DOM Level 2 HTML}.\n\t * On the other hand, setting the {@link DocumentType} after the document was created makes\n\t * this very unlikely to happen. Alternatively, specialized {@link Document} creation methods,\n\t * such as createHTMLDocument\n\t * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#DOM2HTML DOM Level 2 HTML},\n\t * can be used to obtain specific types of {@link Document} objects.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document`\n\t * instance (with it's `type` set to `'xml'`).\n\t * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t *\n\t * @function DOMImplementation.createDocument\n\t * @param {string | null} namespaceURI\n\t * The\n\t * {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-namespaceURI namespace URI}\n\t * of the document element to create or null.\n\t * @param {string | null} qualifiedName\n\t * The\n\t * {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-qualifiedname qualified name}\n\t * of the document element to be created or null.\n\t * @param {DocumentType | null} [doctype=null]\n\t * The type of document to be created or null. When doctype is not null, its\n\t * {@link Node#ownerDocument} attribute is set to the document being created. Default is\n\t * `null`\n\t * @returns {Document}\n\t * A new {@link Document} object with its document element. If the NamespaceURI,\n\t * qualifiedName, and doctype are null, the returned {@link Document} is empty with no\n\t * document element.\n\t * @throws {DOMException}\n\t * With code:\n\t *\n\t * - `INVALID_CHARACTER_ERR`: Raised if the specified qualified name is not an XML name\n\t * according to {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#XML XML 1.0}.\n\t * - `NAMESPACE_ERR`: Raised if the qualifiedName is malformed, if the qualifiedName has a\n\t * prefix and the namespaceURI is null, or if the qualifiedName is null and the namespaceURI\n\t * is different from null, or if the qualifiedName has a prefix that is \"xml\" and the\n\t * namespaceURI is different from \"{@link http://www.w3.org/XML/1998/namespace}\"\n\t * {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#Namespaces XML Namespaces},\n\t * or if the DOM implementation does not support the \"XML\" feature but a non-null namespace\n\t * URI was provided, since namespaces were defined by XML.\n\t * - `WRONG_DOCUMENT_ERR`: Raised if doctype has already been used with a different document\n\t * or was created from a different implementation.\n\t * - `NOT_SUPPORTED_ERR`: May be raised if the implementation does not support the feature\n\t * \"XML\" and the language exposed through the Document does not support XML Namespaces (such\n\t * as {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#HTML40 HTML 4.01}).\n\t * @since DOM Level 2.\n\t * @see {@link #createHTMLDocument}\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument DOM Living Standard\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocument DOM\n\t *      Level 3 Core\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM\n\t *      Level 2 Core (initial)\n\t */\n\tcreateDocument: function (namespaceURI, qualifiedName, doctype) {\n\t\tvar contentType = MIME_TYPE.XML_APPLICATION;\n\t\tif (namespaceURI === NAMESPACE.HTML) {\n\t\t\tcontentType = MIME_TYPE.XML_XHTML_APPLICATION;\n\t\t} else if (namespaceURI === NAMESPACE.SVG) {\n\t\t\tcontentType = MIME_TYPE.XML_SVG_IMAGE;\n\t\t}\n\t\tvar doc = new Document(PDC, { contentType: contentType });\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype) {\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName) {\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Creates an empty DocumentType node. Entity declarations and notations are not made\n\t * available. Entity reference expansions and default attribute additions do not occur.\n\t *\n\t * **This behavior is slightly different from the one in the specs**:\n\t * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - `publicId` and `systemId` contain the raw data including any possible quotes,\n\t *   so they can always be serialized back to the original value\n\t * - `internalSubset` contains the raw string between `[` and `]` if present,\n\t *   but is not parsed or validated in any form.\n\t *\n\t * @function DOMImplementation#createDocumentType\n\t * @param {string} qualifiedName\n\t * The {@link https://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-qualifiedname qualified\n\t * name} of the document type to be created.\n\t * @param {string} [publicId]\n\t * The external subset public identifier.\n\t * @param {string} [systemId]\n\t * The external subset system identifier.\n\t * @param {string} [internalSubset]\n\t * the internal subset or an empty string if it is not present\n\t * @returns {DocumentType}\n\t * A new {@link DocumentType} node with {@link Node#ownerDocument} set to null.\n\t * @throws {DOMException}\n\t * With code:\n\t *\n\t * - `INVALID_CHARACTER_ERR`: Raised if the specified qualified name is not an XML name\n\t * according to {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#XML XML 1.0}.\n\t * - `NAMESPACE_ERR`: Raised if the qualifiedName is malformed.\n\t * - `NOT_SUPPORTED_ERR`: May be raised if the implementation does not support the feature\n\t * \"XML\" and the language exposed through the Document does not support XML Namespaces (such\n\t * as {@link https://www.w3.org/TR/DOM-Level-3-Core/references.html#HTML40 HTML 4.01}).\n\t * @since DOM Level 2.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType\n\t *      MDN\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living\n\t *      Standard\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-3-Core-DOM-createDocType DOM\n\t *      Level 3 Core\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM\n\t *      Level 2 Core\n\t * @see https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#050\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/#core-ID-Core-DocType-internalSubset\n\t * @prettierignore\n\t */\n\tcreateDocumentType: function (qualifiedName, publicId, systemId, internalSubset) {\n\t\tvalidateQualifiedName(qualifiedName);\n\t\tvar node = new DocumentType(PDC);\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\t\tnode.internalSubset = internalSubset || '';\n\t\tnode.childNodes = new NodeList();\n\n\t\treturn node;\n\t},\n\t/**\n\t * Returns an HTML document, that might already have a basic DOM structure.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - If the first argument is `false` no initial nodes are added (steps 3-7 in the specs are\n\t * omitted)\n\t * - `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t *\n\t * @param {string | false} [title]\n\t * A string containing the title to give the new HTML document.\n\t * @returns {Document}\n\t * The HTML document.\n\t * @since WHATWG Living Standard.\n\t * @see {@link #createDocument}\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createhtmldocument\n\t * @see https://dom.spec.whatwg.org/#html-document\n\t */\n\tcreateHTMLDocument: function (title) {\n\t\tvar doc = new Document(PDC, { contentType: MIME_TYPE.HTML });\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tif (title !== false) {\n\t\t\tdoc.doctype = this.createDocumentType('html');\n\t\t\tdoc.doctype.ownerDocument = doc;\n\t\t\tdoc.appendChild(doc.doctype);\n\t\t\tvar htmlNode = doc.createElement('html');\n\t\t\tdoc.appendChild(htmlNode);\n\t\t\tvar headNode = doc.createElement('head');\n\t\t\thtmlNode.appendChild(headNode);\n\t\t\tif (typeof title === 'string') {\n\t\t\t\tvar titleNode = doc.createElement('title');\n\t\t\t\ttitleNode.appendChild(doc.createTextNode(title));\n\t\t\t\theadNode.appendChild(titleNode);\n\t\t\t}\n\t\t\thtmlNode.appendChild(doc.createElement('body'));\n\t\t}\n\t\treturn doc;\n\t},\n};\n\n/**\n * The DOM Node interface is an abstract base class upon which many other DOM API objects are\n * based, thus letting those object types to be used similarly and often interchangeably. As an\n * abstract class, there is no such thing as a plain Node object. All objects that implement\n * Node functionality are based on one of its subclasses. Most notable are Document, Element,\n * and DocumentFragment.\n *\n * In addition, every kind of DOM node is represented by an interface based on Node. These\n * include Attr, CharacterData (which Text, Comment, CDATASection and ProcessingInstruction are\n * all based on), and DocumentType.\n *\n * In some cases, a particular feature of the base Node interface may not apply to one of its\n * child interfaces; in that case, the inheriting node may return null or throw an exception,\n * depending on circumstances. For example, attempting to add children to a node type that\n * cannot have children will throw an exception.\n *\n * **This behavior is slightly different from the in the specs**:\n * - unimplemented interfaces: `EventTarget`\n *\n * @class\n * @abstract\n * @param {Symbol} symbol\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n * @see https://dom.spec.whatwg.org/#node\n * @prettierignore\n */\nfunction Node(symbol) {\n\tcheckSymbol(symbol);\n}\n\nNode.prototype = {\n\t/**\n\t * The first child of this node.\n\t *\n\t * @type {Node | null}\n\t */\n\tfirstChild: null,\n\t/**\n\t * The last child of this node.\n\t *\n\t * @type {Node | null}\n\t */\n\tlastChild: null,\n\t/**\n\t * The previous sibling of this node.\n\t *\n\t * @type {Node | null}\n\t */\n\tpreviousSibling: null,\n\t/**\n\t * The next sibling of this node.\n\t *\n\t * @type {Node | null}\n\t */\n\tnextSibling: null,\n\t/**\n\t * The parent node of this node.\n\t *\n\t * @type {Node | null}\n\t */\n\tparentNode: null,\n\t/**\n\t * The parent element of this node.\n\t *\n\t * @type {Element | null}\n\t */\n\tget parentElement() {\n\t\treturn this.parentNode && this.parentNode.nodeType === this.ELEMENT_NODE ? this.parentNode : null;\n\t},\n\t/**\n\t * The child nodes of this node.\n\t *\n\t * @type {NodeList}\n\t */\n\tchildNodes: null,\n\t/**\n\t * The document object associated with this node.\n\t *\n\t * @type {Document | null}\n\t */\n\townerDocument: null,\n\t/**\n\t * The value of this node.\n\t *\n\t * @type {string | null}\n\t */\n\tnodeValue: null,\n\t/**\n\t * The namespace URI of this node.\n\t *\n\t * @type {string | null}\n\t */\n\tnamespaceURI: null,\n\t/**\n\t * The prefix of the namespace for this node.\n\t *\n\t * @type {string | null}\n\t */\n\tprefix: null,\n\t/**\n\t * The local part of the qualified name of this node.\n\t *\n\t * @type {string | null}\n\t */\n\tlocalName: null,\n\t/**\n\t * The baseURI is currently always `about:blank`,\n\t * since that's what happens when you create a document from scratch.\n\t *\n\t * @type {'about:blank'}\n\t */\n\tbaseURI: 'about:blank',\n\t/**\n\t * Is true if this node is part of a document.\n\t *\n\t * @type {boolean}\n\t */\n\tget isConnected() {\n\t\tvar rootNode = this.getRootNode();\n\t\treturn rootNode && rootNode.nodeType === rootNode.DOCUMENT_NODE;\n\t},\n\t/**\n\t * Checks whether `other` is an inclusive descendant of this node.\n\t *\n\t * @param {Node | null | undefined} other\n\t * The node to check.\n\t * @returns {boolean}\n\t * True if `other` is an inclusive descendant of this node; false otherwise.\n\t * @see https://dom.spec.whatwg.org/#dom-node-contains\n\t */\n\tcontains: function (other) {\n\t\tif (!other) return false;\n\t\tvar parent = other;\n\t\tdo {\n\t\t\tif (this === parent) return true;\n\t\t\tparent = other.parentNode;\n\t\t} while (parent);\n\t\treturn false;\n\t},\n\t/**\n\t * @typedef GetRootNodeOptions\n\t * @property {boolean} [composed=false]\n\t */\n\t/**\n\t * Searches for the root node of this node.\n\t *\n\t * **This behavior is slightly different from the in the specs**:\n\t * - ignores `options.composed`, since `ShadowRoot`s are unsupported, always returns root.\n\t *\n\t * @param {GetRootNodeOptions} [options]\n\t * @returns {Node}\n\t * Root node.\n\t * @see https://dom.spec.whatwg.org/#dom-node-getrootnode\n\t * @see https://dom.spec.whatwg.org/#concept-shadow-including-root\n\t */\n\tgetRootNode: function (options) {\n\t\tvar parent = this;\n\t\tdo {\n\t\t\tif (!parent.parentNode) {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t\tparent = parent.parentNode;\n\t\t} while (parent);\n\t},\n\t/**\n\t * Checks whether the given node is equal to this node.\n\t *\n\t * @param {Node} [otherNode]\n\t * @see https://dom.spec.whatwg.org/#concept-node-equals\n\t */\n\tisEqualNode: function (otherNode) {\n\t\tif (!otherNode) return false;\n\n\t\tif (this.nodeType !== otherNode.nodeType) return false;\n\n\t\tswitch (this.nodeType) {\n\t\t\tcase this.DOCUMENT_TYPE_NODE:\n\t\t\t\tif (this.name !== otherNode.name) return false;\n\t\t\t\tif (this.publicId !== otherNode.publicId) return false;\n\t\t\t\tif (this.systemId !== otherNode.systemId) return false;\n\t\t\t\tbreak;\n\t\t\tcase this.ELEMENT_NODE:\n\t\t\t\tif (this.namespaceURI !== otherNode.namespaceURI) return false;\n\t\t\t\tif (this.prefix !== otherNode.prefix) return false;\n\t\t\t\tif (this.localName !== otherNode.localName) return false;\n\t\t\t\tif (this.attributes.length !== otherNode.attributes.length) return false;\n\t\t\t\tfor (var i = 0; i < this.attributes.length; i++) {\n\t\t\t\t\tvar attr = this.attributes.item(i);\n\t\t\t\t\tif (!attr.isEqualNode(otherNode.getAttributeNodeNS(attr.namespaceURI, attr.localName))) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase this.ATTRIBUTE_NODE:\n\t\t\t\tif (this.namespaceURI !== otherNode.namespaceURI) return false;\n\t\t\t\tif (this.localName !== otherNode.localName) return false;\n\t\t\t\tif (this.value !== otherNode.value) return false;\n\n\t\t\t\tbreak;\n\t\t\tcase this.PROCESSING_INSTRUCTION_NODE:\n\t\t\t\tif (this.target !== otherNode.target || this.data !== otherNode.data) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase this.TEXT_NODE:\n\t\t\tcase this.COMMENT_NODE:\n\t\t\t\tif (this.data !== otherNode.data) return false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (this.childNodes.length !== otherNode.childNodes.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (var i = 0; i < this.childNodes.length; i++) {\n\t\t\tif (!this.childNodes[i].isEqualNode(otherNode.childNodes[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\t/**\n\t * Checks whether or not the given node is this node.\n\t *\n\t * @param {Node} [otherNode]\n\t */\n\tisSameNode: function (otherNode) {\n\t\treturn this === otherNode;\n\t},\n\t/**\n\t * Inserts a node before a reference node as a child of this node.\n\t *\n\t * @param {Node} newChild\n\t * The new child node to be inserted.\n\t * @param {Node | null} refChild\n\t * The reference node before which newChild will be inserted.\n\t * @returns {Node}\n\t * The new child node successfully inserted.\n\t * @throws {DOMException}\n\t * Throws a DOMException if inserting the node would result in a DOM tree that is not\n\t * well-formed, or if `child` is provided but is not a child of `parent`.\n\t * See {@link _insertBefore} for more details.\n\t * @since Modified in DOM L2\n\t */\n\tinsertBefore: function (newChild, refChild) {\n\t\treturn _insertBefore(this, newChild, refChild);\n\t},\n\t/**\n\t * Replaces an old child node with a new child node within this node.\n\t *\n\t * @param {Node} newChild\n\t * The new node that is to replace the old node.\n\t * If it already exists in the DOM, it is removed from its original position.\n\t * @param {Node} oldChild\n\t * The existing child node to be replaced.\n\t * @returns {Node}\n\t * Returns the replaced child node.\n\t * @throws {DOMException}\n\t * Throws a DOMException if replacing the node would result in a DOM tree that is not\n\t * well-formed, or if `oldChild` is not a child of `this`.\n\t * This can also occur if the pre-replacement validity assertion fails.\n\t * See {@link _insertBefore}, {@link Node.removeChild}, and\n\t * {@link assertPreReplacementValidityInDocument} for more details.\n\t * @see https://dom.spec.whatwg.org/#concept-node-replace\n\t */\n\treplaceChild: function (newChild, oldChild) {\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\t/**\n\t * Removes an existing child node from this node.\n\t *\n\t * @param {Node} oldChild\n\t * The child node to be removed.\n\t * @returns {Node}\n\t * Returns the removed child node.\n\t * @throws {DOMException}\n\t * Throws a DOMException if `oldChild` is not a child of `this`.\n\t * See {@link _removeChild} for more details.\n\t */\n\tremoveChild: function (oldChild) {\n\t\treturn _removeChild(this, oldChild);\n\t},\n\t/**\n\t * Appends a child node to this node.\n\t *\n\t * @param {Node} newChild\n\t * The child node to be appended to this node.\n\t * If it already exists in the DOM, it is removed from its original position.\n\t * @returns {Node}\n\t * Returns the appended child node.\n\t * @throws {DOMException}\n\t * Throws a DOMException if appending the node would result in a DOM tree that is not\n\t * well-formed, or if `newChild` is not a valid Node.\n\t * See {@link insertBefore} for more details.\n\t */\n\tappendChild: function (newChild) {\n\t\treturn this.insertBefore(newChild, null);\n\t},\n\t/**\n\t * Determines whether this node has any child nodes.\n\t *\n\t * @returns {boolean}\n\t * Returns true if this node has any child nodes, and false otherwise.\n\t */\n\thasChildNodes: function () {\n\t\treturn this.firstChild != null;\n\t},\n\t/**\n\t * Creates a copy of the calling node.\n\t *\n\t * @param {boolean} deep\n\t * If true, the contents of the node are recursively copied.\n\t * If false, only the node itself (and its attributes, if it is an element) are copied.\n\t * @returns {Node}\n\t * Returns the newly created copy of the node.\n\t * @throws {DOMException}\n\t * May throw a DOMException if operations within {@link Element#setAttributeNode} or\n\t * {@link Node#appendChild} (which are potentially invoked in this method) do not meet their\n\t * specific constraints.\n\t * @see {@link cloneNode}\n\t */\n\tcloneNode: function (deep) {\n\t\treturn cloneNode(this.ownerDocument || this, this, deep);\n\t},\n\t/**\n\t * Puts the specified node and all of its subtree into a \"normalized\" form. In a normalized\n\t * subtree, no text nodes in the subtree are empty and there are no adjacent text nodes.\n\t *\n\t * Specifically, this method merges any adjacent text nodes (i.e., nodes for which `nodeType`\n\t * is `TEXT_NODE`) into a single node with the combined data. It also removes any empty text\n\t * nodes.\n\t *\n\t * This method operates recursively, so it also normalizes any and all descendent nodes within\n\t * the subtree.\n\t *\n\t * @throws {DOMException}\n\t * May throw a DOMException if operations within removeChild or appendData (which are\n\t * potentially invoked in this method) do not meet their specific constraints.\n\t * @since Modified in DOM Level 2\n\t * @see {@link Node.removeChild}\n\t * @see {@link CharacterData.appendData}\n\t */\n\tnormalize: function () {\n\t\tvar child = this.firstChild;\n\t\twhile (child) {\n\t\t\tvar next = child.nextSibling;\n\t\t\tif (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t} else {\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Checks whether the DOM implementation implements a specific feature and its version.\n\t *\n\t * @deprecated\n\t * Since `DOMImplementation.hasFeature` is deprecated and always returns true.\n\t * @param {string} feature\n\t * The package name of the feature to test. This is the same name that can be passed to the\n\t * method `hasFeature` on `DOMImplementation`.\n\t * @param {string} version\n\t * This is the version number of the package name to test.\n\t * @returns {boolean}\n\t * Returns true in all cases in the current implementation.\n\t * @since Introduced in DOM Level 2\n\t * @see {@link DOMImplementation.hasFeature}\n\t */\n\tisSupported: function (feature, version) {\n\t\treturn this.ownerDocument.implementation.hasFeature(feature, version);\n\t},\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * **This behavior is different from the in the specs**:\n\t * - no node type specific handling\n\t * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes\n\t *\n\t * @param {string | null} namespaceURI\n\t * The namespace URI for which to find the associated prefix.\n\t * @returns {string | null}\n\t * The associated prefix, if found; otherwise, null.\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t * @prettierignore\n\t */\n\tlookupPrefix: function (namespaceURI) {\n\t\tvar el = this;\n\t\twhile (el) {\n\t\t\tvar map = el._nsMap;\n\t\t\t//console.dir(map)\n\t\t\tif (map) {\n\t\t\t\tfor (var n in map) {\n\t\t\t\t\tif (hasOwn(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tel = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t/**\n\t * This function is used to look up the namespace URI associated with the given prefix,\n\t * starting from this node.\n\t *\n\t * **This behavior is different from the in the specs**:\n\t * - no node type specific handling\n\t * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes\n\t *\n\t * @param {string | null} prefix\n\t * The prefix for which to find the associated namespace URI.\n\t * @returns {string | null}\n\t * The associated namespace URI, if found; otherwise, null.\n\t * @since DOM Level 3\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupnamespaceuri\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI\n\t * @prettierignore\n\t */\n\tlookupNamespaceURI: function (prefix) {\n\t\tvar el = this;\n\t\twhile (el) {\n\t\t\tvar map = el._nsMap;\n\t\t\t//console.dir(map)\n\t\t\tif (map) {\n\t\t\t\tif (hasOwn(map, prefix)) {\n\t\t\t\t\treturn map[prefix];\n\t\t\t\t}\n\t\t\t}\n\t\t\tel = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t/**\n\t * Determines whether the given namespace URI is the default namespace.\n\t *\n\t * The function works by looking up the prefix associated with the given namespace URI. If no\n\t * prefix is found (i.e., the namespace URI is not registered in the namespace map of this\n\t * node or any of its ancestors), it returns `true`, implying the namespace URI is considered\n\t * the default.\n\t *\n\t * **This behavior is different from the in the specs**:\n\t * - no node type specific handling\n\t * - uses the internal attribute _nsMap for resolving namespaces that is updated when changing attributes\n\t *\n\t * @param {string | null} namespaceURI\n\t * The namespace URI to be checked.\n\t * @returns {boolean}\n\t * Returns true if the given namespace URI is the default namespace, false otherwise.\n\t * @since DOM Level 3\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isDefaultNamespace\n\t * @see https://dom.spec.whatwg.org/#dom-node-isdefaultnamespace\n\t * @prettierignore\n\t */\n\tisDefaultNamespace: function (namespaceURI) {\n\t\tvar prefix = this.lookupPrefix(namespaceURI);\n\t\treturn prefix == null;\n\t},\n\t/**\n\t * Compares the reference node with a node with regard to their position in the document and\n\t * according to the document order.\n\t *\n\t * @param {Node} other\n\t * The node to compare the reference node to.\n\t * @returns {number}\n\t * Returns how the node is positioned relatively to the reference node according to the\n\t * bitmask. 0 if reference node and given node are the same.\n\t * @since DOM Level 3\n\t * @see https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-compare\n\t * @see https://dom.spec.whatwg.org/#dom-node-comparedocumentposition\n\t */\n\tcompareDocumentPosition: function (other) {\n\t\tif (this === other) return 0;\n\t\tvar node1 = other;\n\t\tvar node2 = this;\n\t\tvar attr1 = null;\n\t\tvar attr2 = null;\n\t\tif (node1 instanceof Attr) {\n\t\t\tattr1 = node1;\n\t\t\tnode1 = attr1.ownerElement;\n\t\t}\n\t\tif (node2 instanceof Attr) {\n\t\t\tattr2 = node2;\n\t\t\tnode2 = attr2.ownerElement;\n\t\t\tif (attr1 && node1 && node2 === node1) {\n\t\t\t\tfor (var i = 0, attr; (attr = node2.attributes[i]); i++) {\n\t\t\t\t\tif (attr === attr1)\n\t\t\t\t\t\treturn DocumentPosition.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + DocumentPosition.DOCUMENT_POSITION_PRECEDING;\n\t\t\t\t\tif (attr === attr2)\n\t\t\t\t\t\treturn DocumentPosition.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + DocumentPosition.DOCUMENT_POSITION_FOLLOWING;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!node1 || !node2 || node2.ownerDocument !== node1.ownerDocument) {\n\t\t\treturn (\n\t\t\t\tDocumentPosition.DOCUMENT_POSITION_DISCONNECTED +\n\t\t\t\tDocumentPosition.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC +\n\t\t\t\t(docGUID(node2.ownerDocument) > docGUID(node1.ownerDocument)\n\t\t\t\t\t? DocumentPosition.DOCUMENT_POSITION_FOLLOWING\n\t\t\t\t\t: DocumentPosition.DOCUMENT_POSITION_PRECEDING)\n\t\t\t);\n\t\t}\n\t\tvar chain1 = parentChain(node1);\n\t\tvar chain2 = parentChain(node2);\n\t\tif ((!attr1 && chain2.indexOf(node1) >= 0) || (attr2 && node1 === node2)) {\n\t\t\treturn DocumentPosition.DOCUMENT_POSITION_CONTAINS + DocumentPosition.DOCUMENT_POSITION_PRECEDING;\n\t\t}\n\t\tif ((!attr2 && chain1.indexOf(node2) >= 0) || (attr1 && node1 === node2)) {\n\t\t\treturn DocumentPosition.DOCUMENT_POSITION_CONTAINED_BY + DocumentPosition.DOCUMENT_POSITION_FOLLOWING;\n\t\t}\n\t\tvar ca = commonAncestor(chain2, chain1);\n\t\tfor (var n in ca.childNodes) {\n\t\t\tvar child = ca.childNodes[n];\n\t\t\tif (child === node2) return DocumentPosition.DOCUMENT_POSITION_FOLLOWING;\n\t\t\tif (child === node1) return DocumentPosition.DOCUMENT_POSITION_PRECEDING;\n\t\t\tif (chain2.indexOf(child) >= 0) return DocumentPosition.DOCUMENT_POSITION_FOLLOWING;\n\t\t\tif (chain1.indexOf(child) >= 0) return DocumentPosition.DOCUMENT_POSITION_PRECEDING;\n\t\t}\n\t\treturn 0;\n\t},\n};\n\n/**\n * Encodes special XML characters to their corresponding entities.\n *\n * @param {string} c\n * The character to be encoded.\n * @returns {string}\n * The encoded character.\n * @private\n */\nfunction _xmlEncoder(c) {\n\treturn (\n\t\t(c == '<' && '&lt;') || (c == '>' && '&gt;') || (c == '&' && '&amp;') || (c == '\"' && '&quot;') || '&#' + c.charCodeAt() + ';'\n\t);\n}\n\ncopy(NodeType, Node);\ncopy(NodeType, Node.prototype);\ncopy(DocumentPosition, Node);\ncopy(DocumentPosition, Node.prototype);\n\n/**\n * @param callback\n * Return true for continue,false for break.\n * @returns\n * boolean true: break visit;\n */\nfunction _visitNode(node, callback) {\n\tif (callback(node)) {\n\t\treturn true;\n\t}\n\tif ((node = node.firstChild)) {\n\t\tdo {\n\t\t\tif (_visitNode(node, callback)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} while ((node = node.nextSibling));\n\t}\n}\n\n/**\n * @typedef DocumentOptions\n * @property {string} [contentType=MIME_TYPE.XML_APPLICATION]\n */\n/**\n * The Document interface describes the common properties and methods for any kind of document.\n *\n * It should usually be created using `new DOMImplementation().createDocument(...)`\n * or `new DOMImplementation().createHTMLDocument(...)`.\n *\n * The constructor is considered a private API and offers to initially set the `contentType`\n * property via it's options parameter.\n *\n * @class\n * @param {Symbol} symbol\n * @param {DocumentOptions} [options]\n * @augments Node\n * @private\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document\n * @see https://dom.spec.whatwg.org/#interface-document\n */\nfunction Document(symbol, options) {\n\tcheckSymbol(symbol);\n\n\tvar opt = options || {};\n\tthis.ownerDocument = this;\n\t/**\n\t * The mime type of the document is determined at creation time and can not be modified.\n\t *\n\t * @type {string}\n\t * @see https://dom.spec.whatwg.org/#concept-document-content-type\n\t * @see {@link DOMImplementation}\n\t * @see {@link MIME_TYPE}\n\t * @readonly\n\t */\n\tthis.contentType = opt.contentType || MIME_TYPE.XML_APPLICATION;\n\t/**\n\t * @type {'html' | 'xml'}\n\t * @see https://dom.spec.whatwg.org/#concept-document-type\n\t * @see {@link DOMImplementation}\n\t * @readonly\n\t */\n\tthis.type = isHTMLMimeType(this.contentType) ? 'html' : 'xml';\n}\n\n/**\n * Updates the namespace mapping of an element when a new attribute is added.\n *\n * @param {Document} doc\n * The document that the element belongs to.\n * @param {Element} el\n * The element to which the attribute is being added.\n * @param {Attr} newAttr\n * The new attribute being added.\n * @private\n */\nfunction _onAddAttribute(doc, el, newAttr) {\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI;\n\tif (ns === NAMESPACE.XMLNS) {\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n\t}\n}\n\n/**\n * Updates the namespace mapping of an element when an attribute is removed.\n *\n * @param {Document} doc\n * The document that the element belongs to.\n * @param {Element} el\n * The element from which the attribute is being removed.\n * @param {Attr} newAttr\n * The attribute being removed.\n * @param {boolean} remove\n * Indicates whether the attribute is to be removed.\n * @private\n */\nfunction _onRemoveAttribute(doc, el, newAttr, remove) {\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI;\n\tif (ns === NAMESPACE.XMLNS) {\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n\t}\n}\n\n/**\n * Updates `parent.childNodes`, adjusting the indexed items and its `length`.\n * If `newChild` is provided and has no nextSibling, it will be appended.\n * Otherwise, it's assumed that an item has been removed or inserted,\n * and `parent.firstNode` and its `.nextSibling` to re-indexing all child nodes of `parent`.\n *\n * @param {Document} doc\n * The parent document of `el`.\n * @param {Node} parent\n * The parent node whose childNodes list needs to be updated.\n * @param {Node} [newChild]\n * The new child node to be appended. If not provided, the function assumes a node has been\n * removed.\n * @private\n */\nfunction _onUpdateChild(doc, parent, newChild) {\n\tif (doc && doc._inc) {\n\t\tdoc._inc++;\n\t\tvar childNodes = parent.childNodes;\n\t\t// assumes nextSibling and previousSibling were already configured upfront\n\t\tif (newChild && !newChild.nextSibling) {\n\t\t\t// if an item has been appended, we only need to update the last index and the length\n\t\t\tchildNodes[childNodes.length++] = newChild;\n\t\t} else {\n\t\t\t// otherwise we need to reindex all items,\n\t\t\t// which can take a while when processing nodes with a lot of children\n\t\t\tvar child = parent.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tchildNodes[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tchildNodes.length = i;\n\t\t\tdelete childNodes[childNodes.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @param {Node} parentNode\n * The parent node from which the child node is to be removed.\n * @param {Node} child\n * The child node to be removed from the parentNode.\n * @returns {Node}\n * Returns the child node that was removed.\n * @throws {DOMException}\n * With code:\n * - {@link DOMException.NOT_FOUND_ERR} If the parentNode is not the parent of the child node.\n * @private\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n */\nfunction _removeChild(parentNode, child) {\n\tif (parentNode !== child.parentNode) {\n\t\tthrow new DOMException(DOMException.NOT_FOUND_ERR, \"child's parent is not parent\");\n\t}\n\tvar oldPreviousSibling = child.previousSibling;\n\tvar oldNextSibling = child.nextSibling;\n\tif (oldPreviousSibling) {\n\t\toldPreviousSibling.nextSibling = oldNextSibling;\n\t} else {\n\t\tparentNode.firstChild = oldNextSibling;\n\t}\n\tif (oldNextSibling) {\n\t\toldNextSibling.previousSibling = oldPreviousSibling;\n\t} else {\n\t\tparentNode.lastChild = oldPreviousSibling;\n\t}\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.CDATA_SECTION_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.DOCUMENT_TYPE_NODE ||\n\t\t\tnode.nodeType === Node.ELEMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE ||\n\t\t\tnode.nodeType === Node.TEXT_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc\n * The document node.\n * @param {Node} child\n * The node that would become the nextSibling if the element would be inserted.\n * @returns {boolean}\n * `true` if an element can be inserted before child.\n * @private\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc\n * The document node.\n * @param {Node} child\n * The node that would become the nextSibling if the element would be inserted.\n * @returns {boolean}\n * `true` if an element can be inserted before child.\n * @private\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Asserts pre-insertion validity of a node into a parent before a child.\n * Throws errors for invalid node combinations that would result in an ill-formed DOM.\n *\n * @param {Node} parent\n * The parent node to insert `node` into.\n * @param {Node} node\n * The node to insert.\n * @param {Node | null} child\n * The node that should become the `nextSibling` of `node`. If null, no sibling is considered.\n * @throws {DOMException}\n * With code:\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If `parent` is not a Document,\n * DocumentFragment, or Element node.\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If `node` is a host-including inclusive\n * ancestor of `parent`. (Currently not implemented)\n * - {@link DOMException.NOT_FOUND_ERR} If `child` is non-null and its `parent` is not\n * `parent`.\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If `node` is not a DocumentFragment,\n * DocumentType, Element, or CharacterData node.\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If either `node` is a Text node and `parent` is\n * a document, or if `node` is a doctype and `parent` is not a document.\n * @private\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(DOMException.NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tDOMException.HIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * Asserts pre-insertion validity of a node into a document before a child.\n * Throws errors for invalid node combinations that would result in an ill-formed DOM.\n *\n * @param {Document} parent\n * The parent node to insert `node` into.\n * @param {Node} node\n * The node to insert.\n * @param {Node | undefined} child\n * The node that should become the `nextSibling` of `node`. If undefined, no sibling is\n * considered.\n * @returns {Node}\n * @throws {DOMException}\n * With code:\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If `node` is a DocumentFragment with more than\n * one element child or has a Text node child.\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If `node` is a DocumentFragment with one\n * element child and either `parent` has an element child, `child` is a doctype, or `child` is\n * non-null and a doctype is following `child`.\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If `node` is an Element and `parent` has an\n * element child, `child` is a doctype, or `child` is non-null and a doctype is following\n * `child`.\n * - {@link DOMException.HIERARCHY_REQUEST_ERR} If `node` is a DocumentType and `parent` has a\n * doctype child, `child` is non-null and an element is preceding `child`, or `child` is null\n * and `parent` has an element child.\n * @private\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @param {Document} parent\n * The parent node to insert `node` into.\n * @param {Node} node\n * The node to insert.\n * @param {Node | undefined} child\n * the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws {DOMException}\n * For several node combinations that would create a DOM that is not well-formed.\n * @throws {DOMException}\n * If `child` is provided but is not a child of `parent`.\n * @private\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(DOMException.HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * Inserts a node into a parent node before a child node.\n *\n * @param {Node} parent\n * The parent node to insert the node into.\n * @param {Node} node\n * The node to insert into the parent.\n * @param {Node | null} child\n * The node that should become the next sibling of the node.\n * If null, the function inserts the node at the end of the children of the parent node.\n * @param {Function} [_inDocumentAssertion]\n * An optional function to check pre-insertion validity if parent is a document node.\n * Defaults to {@link assertPreInsertionValidityInDocument}\n * @returns {Node}\n * Returns the inserted node.\n * @throws {DOMException}\n * Throws a DOMException if inserting the node would result in a DOM tree that is not\n * well-formed. See {@link assertPreInsertionValidity1to5},\n * {@link assertPreInsertionValidityInDocument}.\n * @throws {DOMException}\n * Throws a DOMException if child is provided but is not a child of the parent. See\n * {@link Node.removeChild}\n * @private\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif (cp) {\n\t\tcp.removeChild(node); //remove and update\n\t}\n\tif (node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t} else {\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\tif (pre) {\n\t\tpre.nextSibling = newFirst;\n\t} else {\n\t\tparent.firstChild = newFirst;\n\t}\n\tif (child == null) {\n\t\tparent.lastChild = newLast;\n\t} else {\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo {\n\t\tnewFirst.parentNode = parent;\n\t} while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n\t_onUpdateChild(parent.ownerDocument || parent, parent, node);\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\n\treturn node;\n}\n\nDocument.prototype = {\n\t/**\n\t * The implementation that created this document.\n\t *\n\t * @type DOMImplementation\n\t * @readonly\n\t */\n\timplementation: null,\n\tnodeName: '#document',\n\tnodeType: DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @type DocumentType\n\t * @readonly\n\t */\n\tdoctype: null,\n\tdocumentElement: null,\n\t_inc: 1,\n\n\tinsertBefore: function (newChild, refChild) {\n\t\t//raises\n\t\tif (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile (child) {\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child, refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild: function (oldChild) {\n\t\tvar removed = _removeChild(this, oldChild);\n\t\tif (removed === this.documentElement) {\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn removed;\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode: function (importedNode, deep) {\n\t\treturn importNode(this, importedNode, deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById: function (id) {\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement, function (node) {\n\t\t\tif (node.nodeType == ELEMENT_NODE) {\n\t\t\t\tif (node.getAttribute('id') == id) {\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * Creates a new `Element` that is owned by this `Document`.\n\t * In HTML Documents `localName` is the lower cased `tagName`,\n\t * otherwise no transformation is being applied.\n\t * When `contentType` implies the HTML namespace, it will be set as `namespaceURI`.\n\t *\n\t * __This implementation differs from the specification:__ - The provided name is not checked\n\t * against the `Name` production,\n\t * so no related error will be thrown.\n\t * - There is no interface `HTMLElement`, it is always an `Element`.\n\t * - There is no support for a second argument to indicate using custom elements.\n\t *\n\t * @param {string} tagName\n\t * @returns {Element}\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n\t * @see https://dom.spec.whatwg.org/#dom-document-createelement\n\t * @see https://dom.spec.whatwg.org/#concept-create-element\n\t */\n\tcreateElement: function (tagName) {\n\t\tvar node = new Element(PDC);\n\t\tnode.ownerDocument = this;\n\t\tif (this.type === 'html') {\n\t\t\ttagName = tagName.toLowerCase();\n\t\t}\n\t\tif (hasDefaultHTMLNamespace(this.contentType)) {\n\t\t\tnode.namespaceURI = NAMESPACE.HTML;\n\t\t}\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs = (node.attributes = new NamedNodeMap());\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t/**\n\t * @returns {DocumentFragment}\n\t */\n\tcreateDocumentFragment: function () {\n\t\tvar node = new DocumentFragment(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\t/**\n\t * @param {string} data\n\t * @returns {Text}\n\t */\n\tcreateTextNode: function (data) {\n\t\tvar node = new Text(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\tnode.appendData(data);\n\t\treturn node;\n\t},\n\t/**\n\t * @param {string} data\n\t * @returns {Comment}\n\t */\n\tcreateComment: function (data) {\n\t\tvar node = new Comment(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\tnode.appendData(data);\n\t\treturn node;\n\t},\n\t/**\n\t * @param {string} data\n\t * @returns {CDATASection}\n\t */\n\tcreateCDATASection: function (data) {\n\t\tvar node = new CDATASection(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\tnode.appendData(data);\n\t\treturn node;\n\t},\n\t/**\n\t * @param {string} target\n\t * @param {string} data\n\t * @returns {ProcessingInstruction}\n\t */\n\tcreateProcessingInstruction: function (target, data) {\n\t\tvar node = new ProcessingInstruction(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\tnode.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\t/**\n\t * Creates an `Attr` node that is owned by this document.\n\t * In HTML Documents `localName` is the lower cased `name`,\n\t * otherwise no transformation is being applied.\n\t *\n\t * __This implementation differs from the specification:__ - The provided name is not checked\n\t * against the `Name` production,\n\t * so no related error will be thrown.\n\t *\n\t * @param {string} name\n\t * @returns {Attr}\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createAttribute\n\t * @see https://dom.spec.whatwg.org/#dom-document-createattribute\n\t */\n\tcreateAttribute: function (name) {\n\t\tif (!g.QName_exact.test(name)) {\n\t\t\tthrow new DOMException(DOMException.INVALID_CHARACTER_ERR, 'invalid character in name \"' + name + '\"');\n\t\t}\n\t\tif (this.type === 'html') {\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\treturn this._createAttribute(name);\n\t},\n\t_createAttribute: function (name) {\n\t\tvar node = new Attr(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\tnode.name = name;\n\t\tnode.nodeName = name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\t/**\n\t * Creates an EntityReference object.\n\t * The current implementation does not fill the `childNodes` with those of the corresponding\n\t * `Entity`\n\t *\n\t * @deprecated\n\t * In DOM Level 4.\n\t * @param {string} name\n\t * The name of the entity to reference. No namespace well-formedness checks are performed.\n\t * @returns {EntityReference}\n\t * @throws {DOMException}\n\t * With code `INVALID_CHARACTER_ERR` when `name` is not valid.\n\t * @throws {DOMException}\n\t * with code `NOT_SUPPORTED_ERR` when the document is of type `html`\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-392B75AE\n\t */\n\tcreateEntityReference: function (name) {\n\t\tif (!g.Name.test(name)) {\n\t\t\tthrow new DOMException(DOMException.INVALID_CHARACTER_ERR, 'not a valid xml name \"' + name + '\"');\n\t\t}\n\t\tif (this.type === 'html') {\n\t\t\tthrow new DOMException('document is an html document', DOMExceptionName.NotSupportedError);\n\t\t}\n\n\t\tvar node = new EntityReference(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\tnode.nodeName = name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\t/**\n\t * @param {string} namespaceURI\n\t * @param {string} qualifiedName\n\t * @returns {Element}\n\t */\n\tcreateElementNS: function (namespaceURI, qualifiedName) {\n\t\tvar validated = validateAndExtract(namespaceURI, qualifiedName);\n\t\tvar node = new Element(PDC);\n\t\tvar attrs = (node.attributes = new NamedNodeMap());\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = validated[0];\n\t\tnode.prefix = validated[1];\n\t\tnode.localName = validated[2];\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\t/**\n\t * @param {string} namespaceURI\n\t * @param {string} qualifiedName\n\t * @returns {Attr}\n\t */\n\tcreateAttributeNS: function (namespaceURI, qualifiedName) {\n\t\tvar validated = validateAndExtract(namespaceURI, qualifiedName);\n\t\tvar node = new Attr(PDC);\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.specified = true;\n\t\tnode.namespaceURI = validated[0];\n\t\tnode.prefix = validated[1];\n\t\tnode.localName = validated[2];\n\t\treturn node;\n\t},\n};\n_extends(Document, Node);\n\nfunction Element(symbol) {\n\tcheckSymbol(symbol);\n\n\tthis._nsMap = Object.create(null);\n}\nElement.prototype = {\n\tnodeType: ELEMENT_NODE,\n\t/**\n\t * The attributes of this element.\n\t *\n\t * @type {NamedNodeMap | null}\n\t */\n\tattributes: null,\n\tgetQualifiedName: function () {\n\t\treturn this.prefix ? this.prefix + ':' + this.localName : this.localName;\n\t},\n\t_isInHTMLDocumentAndNamespace: function () {\n\t\treturn this.ownerDocument.type === 'html' && this.namespaceURI === NAMESPACE.HTML;\n\t},\n\thasAttribute: function (name) {\n\t\treturn !!this.getAttributeNode(name);\n\t},\n\t/**\n\t * Returns element’s first attribute whose qualified name is `name`, and `null`\n\t * if there is no such attribute.\n\t *\n\t * @param {string} name\n\t * @returns {string | null}\n\t */\n\tgetAttribute: function (name) {\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr ? attr.value : null;\n\t},\n\tgetAttributeNode: function (name) {\n\t\tif (this._isInHTMLDocumentAndNamespace()) {\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\t/**\n\t * Sets the value of element’s first attribute whose qualified name is qualifiedName to value.\n\t *\n\t * @param {string} name\n\t * @param {string} value\n\t */\n\tsetAttribute: function (name, value) {\n\t\tif (this._isInHTMLDocumentAndNamespace()) {\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\tvar attr = this.getAttributeNode(name);\n\t\tif (attr) {\n\t\t\tattr.value = attr.nodeValue = '' + value;\n\t\t} else {\n\t\t\tattr = this.ownerDocument._createAttribute(name);\n\t\t\tattr.value = attr.nodeValue = '' + value;\n\t\t\tthis.setAttributeNode(attr);\n\t\t}\n\t},\n\tremoveAttribute: function (name) {\n\t\tvar attr = this.getAttributeNode(name);\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\tsetAttributeNode: function (newAttr) {\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS: function (newAttr) {\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode: function (oldAttr) {\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS: function (namespaceURI, localName) {\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS: function (namespaceURI, localName) {\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName) != null;\n\t},\n\t/**\n\t * Returns element’s attribute whose namespace is `namespaceURI` and local name is\n\t * `localName`,\n\t * or `null` if there is no such attribute.\n\t *\n\t * @param {string} namespaceURI\n\t * @param {string} localName\n\t * @returns {string | null}\n\t */\n\tgetAttributeNS: function (namespaceURI, localName) {\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr ? attr.value : null;\n\t},\n\t/**\n\t * Sets the value of element’s attribute whose namespace is `namespaceURI` and local name is\n\t * `localName` to value.\n\t *\n\t * @param {string} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {string} value\n\t * @see https://dom.spec.whatwg.org/#dom-element-setattributens\n\t */\n\tsetAttributeNS: function (namespaceURI, qualifiedName, value) {\n\t\tvar validated = validateAndExtract(namespaceURI, qualifiedName);\n\t\tvar localName = validated[2];\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\tif (attr) {\n\t\t\tattr.value = attr.nodeValue = '' + value;\n\t\t} else {\n\t\t\tattr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\t\tattr.value = attr.nodeValue = '' + value;\n\t\t\tthis.setAttributeNode(attr);\n\t\t}\n\t},\n\tgetAttributeNodeNS: function (namespaceURI, localName) {\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\t/**\n\t * Returns a LiveNodeList of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classNames` is an empty string or only contains HTML white space\n\t * characters.\n\t *\n\t * Warning: This returns a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames\n\t * Is a string representing the class name(s) to match; multiple class names are separated by\n\t * (ASCII-)whitespace.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function (classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames);\n\t\treturn new LiveNodeList(this, function (base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base, function (node) {\n\t\t\t\t\tif (node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class');\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames);\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t/**\n\t * Returns a LiveNodeList of elements with the given qualifiedName.\n\t * Searching for all descendants can be done by passing `*` as `qualifiedName`.\n\t *\n\t * All descendants of the specified element are searched, but not the element itself.\n\t * The returned list is live, which means it updates itself with the DOM tree automatically.\n\t * Therefore, there is no need to call `Element.getElementsByTagName()`\n\t * with the same element and arguments repeatedly if the DOM changes in between calls.\n\t *\n\t * When called on an HTML element in an HTML document,\n\t * `getElementsByTagName` lower-cases the argument before searching for it.\n\t * This is undesirable when trying to match camel-cased SVG elements (such as\n\t * `<linearGradient>`) in an HTML document.\n\t * Instead, use `Element.getElementsByTagNameNS()`,\n\t * which preserves the capitalization of the tag name.\n\t *\n\t * `Element.getElementsByTagName` is similar to `Document.getElementsByTagName()`,\n\t * except that it only searches for elements that are descendants of the specified element.\n\t *\n\t * @param {string} qualifiedName\n\t * @returns {LiveNodeList}\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbytagname\n\t */\n\tgetElementsByTagName: function (qualifiedName) {\n\t\tvar isHTMLDocument = (this.nodeType === DOCUMENT_NODE ? this : this.ownerDocument).type === 'html';\n\t\tvar lowerQualifiedName = qualifiedName.toLowerCase();\n\t\treturn new LiveNodeList(this, function (base) {\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base, function (node) {\n\t\t\t\tif (node === base || node.nodeType !== ELEMENT_NODE) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (qualifiedName === '*') {\n\t\t\t\t\tls.push(node);\n\t\t\t\t} else {\n\t\t\t\t\tvar nodeQualifiedName = node.getQualifiedName();\n\t\t\t\t\tvar matchingQName = isHTMLDocument && node.namespaceURI === NAMESPACE.HTML ? lowerQualifiedName : qualifiedName;\n\t\t\t\t\tif (nodeQualifiedName === matchingQName) {\n\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS: function (namespaceURI, localName) {\n\t\treturn new LiveNodeList(this, function (base) {\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base, function (node) {\n\t\t\t\tif (\n\t\t\t\t\tnode !== base &&\n\t\t\t\t\tnode.nodeType === ELEMENT_NODE &&\n\t\t\t\t\t(namespaceURI === '*' || node.namespaceURI === namespaceURI) &&\n\t\t\t\t\t(localName === '*' || node.localName == localName)\n\t\t\t\t) {\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n};\nDocument.prototype.getElementsByClassName = Element.prototype.getElementsByClassName;\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n_extends(Element, Node);\nfunction Attr(symbol) {\n\tcheckSymbol(symbol);\n\n\tthis.namespaceURI = null;\n\tthis.prefix = null;\n\tthis.ownerElement = null;\n}\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr, Node);\n\nfunction CharacterData(symbol) {\n\tcheckSymbol(symbol);\n}\nCharacterData.prototype = {\n\tdata: '',\n\tsubstringData: function (offset, count) {\n\t\treturn this.data.substring(offset, offset + count);\n\t},\n\tappendData: function (text) {\n\t\ttext = this.data + text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function (offset, text) {\n\t\tthis.replaceData(offset, 0, text);\n\t},\n\tdeleteData: function (offset, count) {\n\t\tthis.replaceData(offset, count, '');\n\t},\n\treplaceData: function (offset, count, text) {\n\t\tvar start = this.data.substring(0, offset);\n\t\tvar end = this.data.substring(offset + count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n};\n_extends(CharacterData, Node);\nfunction Text(symbol) {\n\tcheckSymbol(symbol);\n}\nText.prototype = {\n\tnodeName: '#text',\n\tnodeType: TEXT_NODE,\n\tsplitText: function (offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif (this.parentNode) {\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t},\n};\n_extends(Text, CharacterData);\nfunction Comment(symbol) {\n\tcheckSymbol(symbol);\n}\nComment.prototype = {\n\tnodeName: '#comment',\n\tnodeType: COMMENT_NODE,\n};\n_extends(Comment, CharacterData);\n\nfunction CDATASection(symbol) {\n\tcheckSymbol(symbol);\n}\nCDATASection.prototype = {\n\tnodeName: '#cdata-section',\n\tnodeType: CDATA_SECTION_NODE,\n};\n_extends(CDATASection, Text);\n\nfunction DocumentType(symbol) {\n\tcheckSymbol(symbol);\n}\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType, Node);\n\nfunction Notation(symbol) {\n\tcheckSymbol(symbol);\n}\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation, Node);\n\nfunction Entity(symbol) {\n\tcheckSymbol(symbol);\n}\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity, Node);\n\nfunction EntityReference(symbol) {\n\tcheckSymbol(symbol);\n}\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference, Node);\n\nfunction DocumentFragment(symbol) {\n\tcheckSymbol(symbol);\n}\nDocumentFragment.prototype.nodeName = '#document-fragment';\nDocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment, Node);\n\nfunction ProcessingInstruction(symbol) {\n\tcheckSymbol(symbol);\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction, CharacterData);\nfunction XMLSerializer() {}\nXMLSerializer.prototype.serializeToString = function (node, nodeFilter) {\n\treturn nodeSerializeToString.call(node, nodeFilter);\n};\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(nodeFilter) {\n\tvar buf = [];\n\tvar refNode = (this.nodeType === DOCUMENT_NODE && this.documentElement) || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif (uri && prefix == null) {\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif (prefix == null) {\n\t\t\tvar visibleNamespaces = [\n\t\t\t\t{ namespace: uri, prefix: null },\n\t\t\t\t//{namespace:uri,prefix:''}\n\t\t\t];\n\t\t}\n\t}\n\tserializeToString(this, buf, nodeFilter, visibleNamespaces);\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif ((prefix === 'xml' && uri === NAMESPACE.XML) || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length;\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Literal whitespace other than space that appear in attribute values are serialized as\n * their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces).\n *\n * Well-formed constraint: No < in Attribute Values:\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n *\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n * @prettierignore\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"');\n}\n\nfunction serializeToString(node, buf, nodeFilter, visibleNamespaces) {\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\tvar doc = node.nodeType === DOCUMENT_NODE ? node : node.ownerDocument;\n\tvar isHTML = doc.type === 'html';\n\n\tif (nodeFilter) {\n\t\tnode = nodeFilter(node);\n\t\tif (node) {\n\t\t\tif (typeof node == 'string') {\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch (node.nodeType) {\n\t\tcase ELEMENT_NODE:\n\t\t\tvar attrs = node.attributes;\n\t\t\tvar len = attrs.length;\n\t\t\tvar child = node.firstChild;\n\t\t\tvar nodeName = node.tagName;\n\n\t\t\tvar prefixedNodeName = nodeName;\n\t\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\t\tvar defaultNS;\n\t\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\t\tdefaultNS = attrs.item(ai).value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!defaultNS) {\n\t\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\t\tvar namespace = visibleNamespaces[nsi];\n\t\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\t\tdefaultNS = namespace.namespace;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\t\tvar namespace = visibleNamespaces[nsi];\n\t\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbuf.push('<', prefixedNodeName);\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t// add namespaces for attributes\n\t\t\t\tvar attr = attrs.item(i);\n\t\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\t\tvisibleNamespaces.push({\n\t\t\t\t\t\tprefix: attr.localName,\n\t\t\t\t\t\tnamespace: attr.value,\n\t\t\t\t\t});\n\t\t\t\t} else if (attr.nodeName == 'xmlns') {\n\t\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar attr = attrs.item(i);\n\t\t\t\tif (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n\t\t\t\t\tvar prefix = attr.prefix || '';\n\t\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : 'xmlns', uri);\n\t\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace: uri });\n\t\t\t\t}\n\t\t\t\tserializeToString(attr, buf, nodeFilter, visibleNamespaces);\n\t\t\t}\n\n\t\t\t// add namespace for current node\n\t\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = node.prefix || '';\n\t\t\t\tvar uri = node.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : 'xmlns', uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace: uri });\n\t\t\t}\n\t\t\t// in XML elements can be closed when they have no children\n\t\t\tvar canCloseTag = !child;\n\t\t\tif (canCloseTag && (isHTML || node.namespaceURI === NAMESPACE.HTML)) {\n\t\t\t\t// in HTML (doc or ns) only void elements can be closed right away\n\t\t\t\tcanCloseTag = isHTMLVoidElement(nodeName);\n\t\t\t}\n\t\t\tif (canCloseTag) {\n\t\t\t\tbuf.push('/>');\n\t\t\t} else {\n\t\t\t\tbuf.push('>');\n\t\t\t\t//if is cdata child node\n\t\t\t\tif (isHTML && isHTMLRawTextElement(nodeName)) {\n\t\t\t\t\twhile (child) {\n\t\t\t\t\t\tif (child.data) {\n\t\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tserializeToString(child, buf, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile (child) {\n\t\t\t\t\t\tserializeToString(child, buf, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.push('</', prefixedNodeName, '>');\n\t\t\t}\n\t\t\t// remove added visible namespaces\n\t\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\t\treturn;\n\t\tcase DOCUMENT_NODE:\n\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tvar child = node.firstChild;\n\t\t\twhile (child) {\n\t\t\t\tserializeToString(child, buf, nodeFilter, visibleNamespaces.slice());\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\treturn;\n\t\tcase ATTRIBUTE_NODE:\n\t\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\t\tcase TEXT_NODE:\n\t\t\t/*\n\t\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t\t * except when used as markup delimiters, or within a comment, a processing instruction,\n\t\t\t * or a CDATA section.\n\t\t\t * If they are needed elsewhere, they must be escaped using either numeric character\n\t\t\t * references or the strings `&amp;` and `&lt;` respectively.\n\t\t\t * The right angle bracket (>) may be represented using the string \" &gt; \",\n\t\t\t * and must, for compatibility, be escaped using either `&gt;`,\n\t\t\t * or a character reference when it appears in the string `]]>` in content,\n\t\t\t * when that string is not marking the end of a CDATA section.\n\t\t\t *\n\t\t\t * In the content of elements, character data is any string of characters which does not\n\t\t\t * contain the start-delimiter of any markup and does not include the CDATA-section-close\n\t\t\t * delimiter, `]]>`.\n\t\t\t *\n\t\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t\t */\n\t\t\treturn buf.push(node.data.replace(/[<&>]/g, _xmlEncoder));\n\t\tcase CDATA_SECTION_NODE:\n\t\t\treturn buf.push(g.CDATA_START, node.data, g.CDATA_END);\n\t\tcase COMMENT_NODE:\n\t\t\treturn buf.push(g.COMMENT_START, node.data, g.COMMENT_END);\n\t\tcase DOCUMENT_TYPE_NODE:\n\t\t\tvar pubid = node.publicId;\n\t\t\tvar sysid = node.systemId;\n\t\t\tbuf.push(g.DOCTYPE_DECL_START, ' ', node.name);\n\t\t\tif (pubid) {\n\t\t\t\tbuf.push(' ', g.PUBLIC, ' ', pubid);\n\t\t\t\tif (sysid && sysid !== '.') {\n\t\t\t\t\tbuf.push(' ', sysid);\n\t\t\t\t}\n\t\t\t} else if (sysid && sysid !== '.') {\n\t\t\t\tbuf.push(' ', g.SYSTEM, ' ', sysid);\n\t\t\t}\n\t\t\tif (node.internalSubset) {\n\t\t\t\tbuf.push(' [', node.internalSubset, ']');\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t\treturn;\n\t\tcase PROCESSING_INSTRUCTION_NODE:\n\t\t\treturn buf.push('<?', node.target, ' ', node.data, '?>');\n\t\tcase ENTITY_REFERENCE_NODE:\n\t\t\treturn buf.push('&', node.nodeName, ';');\n\t\t//case ENTITY_NODE:\n\t\t//case NOTATION_NODE:\n\t\tdefault:\n\t\t\tbuf.push('??', node.nodeName);\n\t}\n}\nfunction importNode(doc, node, deep) {\n\tvar node2;\n\tswitch (node.nodeType) {\n\t\tcase ELEMENT_NODE:\n\t\t\tnode2 = node.cloneNode(false);\n\t\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tbreak;\n\t\tcase ATTRIBUTE_NODE:\n\t\t\tdeep = true;\n\t\t\tbreak;\n\t\t//case ENTITY_REFERENCE_NODE:\n\t\t//case PROCESSING_INSTRUCTION_NODE:\n\t\t////case TEXT_NODE:\n\t\t//case CDATA_SECTION_NODE:\n\t\t//case COMMENT_NODE:\n\t\t//\tdeep = false;\n\t\t//\tbreak;\n\t\t//case DOCUMENT_NODE:\n\t\t//case DOCUMENT_TYPE_NODE:\n\t\t//cannot be imported.\n\t\t//case ENTITY_NODE:\n\t\t//case NOTATION_NODE：\n\t\t//can not hit in level3\n\t\t//default:throw e;\n\t}\n\tif (!node2) {\n\t\tnode2 = node.cloneNode(false); //false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif (deep) {\n\t\tvar child = node.firstChild;\n\t\twhile (child) {\n\t\t\tnode2.appendChild(importNode(doc, child, deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\n/**\n * Creates a copy of a node from an existing one.\n *\n * @param {Document} doc\n * The Document object representing the document that the new node will belong to.\n * @param {Node} node\n * The node to clone.\n * @param {boolean} deep\n * If true, the contents of the node are recursively copied.\n * If false, only the node itself (and its attributes, if it is an element) are copied.\n * @returns {Node}\n * Returns the newly created copy of the node.\n * @throws {DOMException}\n * May throw a DOMException if operations within setAttributeNode or appendChild (which are\n * potentially invoked in this function) do not meet their specific constraints.\n */\nfunction cloneNode(doc, node, deep) {\n\tvar node2 = new node.constructor(PDC);\n\tfor (var n in node) {\n\t\tif (hasOwn(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != 'object') {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.childNodes) {\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\t\tcase ELEMENT_NODE:\n\t\t\tvar attrs = node.attributes;\n\t\t\tvar attrs2 = (node2.attributes = new NamedNodeMap());\n\t\t\tvar len = attrs.length;\n\t\t\tattrs2._ownerElement = node2;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tnode2.setAttributeNode(cloneNode(doc, attrs.item(i), true));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ATTRIBUTE_NODE:\n\t\t\tdeep = true;\n\t}\n\tif (deep) {\n\t\tvar child = node.firstChild;\n\t\twhile (child) {\n\t\t\tnode2.appendChild(cloneNode(doc, child, deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object, key, value) {\n\tobject[key] = value;\n}\n//do dynamic\ntry {\n\tif (Object.defineProperty) {\n\t\tObject.defineProperty(LiveNodeList.prototype, 'length', {\n\t\t\tget: function () {\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t},\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype, 'textContent', {\n\t\t\tget: function () {\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset: function (data) {\n\t\t\t\tswitch (this.nodeType) {\n\t\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\t\twhile (this.firstChild) {\n\t\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (data || String(data)) {\n\t\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.data = data;\n\t\t\t\t\t\tthis.value = data;\n\t\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tfunction getTextContent(node) {\n\t\t\tswitch (node.nodeType) {\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\tvar buf = [];\n\t\t\t\t\tnode = node.firstChild;\n\t\t\t\t\twhile (node) {\n\t\t\t\t\t\tif (node.nodeType !== 7 && node.nodeType !== 8) {\n\t\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\treturn buf.join('');\n\t\t\t\tdefault:\n\t\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function (object, key, value) {\n\t\t\t//console.log(value)\n\t\t\tobject['$$' + key] = value;\n\t\t};\n\t}\n} catch (e) {\n\t//ie8\n}\n\nexports._updateLiveList = _updateLiveList;\nexports.Attr = Attr;\nexports.CDATASection = CDATASection;\nexports.CharacterData = CharacterData;\nexports.Comment = Comment;\nexports.Document = Document;\nexports.DocumentFragment = DocumentFragment;\nexports.DocumentType = DocumentType;\nexports.DOMImplementation = DOMImplementation;\nexports.Element = Element;\nexports.Entity = Entity;\nexports.EntityReference = EntityReference;\nexports.LiveNodeList = LiveNodeList;\nexports.NamedNodeMap = NamedNodeMap;\nexports.Node = Node;\nexports.NodeList = NodeList;\nexports.Notation = Notation;\nexports.Text = Text;\nexports.ProcessingInstruction = ProcessingInstruction;\nexports.XMLSerializer = XMLSerializer;\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML\n *      Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see {@link XML_ENTITIES}\n * @see {@link DOMParser.parseFromString}\n * @see {@link DOMImplementation.prototype.createHTMLDocument}\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5)\n *      Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML\n *      Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML\n *      Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated\n * Use `HTML_ENTITIES` instead.\n * @see {@link HTML_ENTITIES}\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","'use strict';\n\nvar conventions = require('./conventions');\nvar g = require('./grammar');\nvar errors = require('./errors');\n\nvar isHTMLEscapableRawTextElement = conventions.isHTMLEscapableRawTextElement;\nvar isHTMLMimeType = conventions.isHTMLMimeType;\nvar isHTMLRawTextElement = conventions.isHTMLRawTextElement;\nvar hasOwn = conventions.hasOwn;\nvar NAMESPACE = conventions.NAMESPACE;\nvar ParseError = errors.ParseError;\nvar DOMException = errors.DOMException;\n\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0; //tag name offerring\nvar S_ATTR = 1; //attr name offerring\nvar S_ATTR_SPACE = 2; //attr name end and space offer\nvar S_EQ = 3; //=space?\nvar S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\nvar S_ATTR_END = 5; //attr value end and no space(quot end)\nvar S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7; //closed el<el />\n\nfunction XMLReader() {}\n\nXMLReader.prototype = {\n\tparse: function (source, defaultNSMap, entityMap) {\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap, (defaultNSMap = Object.create(null)));\n\t\tparse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t},\n};\n\n/**\n * Detecting everything that might be a reference,\n * including those without ending `;`, since those are allowed in HTML.\n * The entityReplacer takes care of verifying and transforming each occurrence,\n * and reports to the errorHandler on those that are not OK,\n * depending on the context.\n */\nvar ENTITY_REG = /&#?\\w+;?/g;\n\nfunction parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n\tvar isHTML = isHTMLMimeType(domBuilder.mimeType);\n\tif (source.indexOf(g.UNICODE_REPLACEMENT_CHARACTER) >= 0) {\n\t\terrorHandler.warning('Unicode replacement character detected, source encoding issues?');\n\t}\n\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10),\n\t\t\t\tsurrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\n\tfunction entityReplacer(a) {\n\t\tvar complete = a[a.length - 1] === ';' ? a : a + ';';\n\t\tif (!isHTML && complete !== a) {\n\t\t\terrorHandler.error('EntityRef: expecting ;');\n\t\t\treturn a;\n\t\t}\n\t\tvar match = g.Reference.exec(complete);\n\t\tif (!match || match[0].length !== complete.length) {\n\t\t\terrorHandler.error('entity not matching Reference production: ' + a);\n\t\t\treturn a;\n\t\t}\n\t\tvar k = complete.slice(1, -1);\n\t\tif (hasOwn(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t} else if (k.charAt(0) === '#') {\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n\t\t} else {\n\t\t\terrorHandler.error('entity not found:' + a);\n\t\t\treturn a;\n\t\t}\n\t}\n\n\tfunction appendText(end) {\n\t\t//has some bugs\n\t\tif (end > start) {\n\t\t\tvar xt = source.substring(start, end).replace(ENTITY_REG, entityReplacer);\n\t\t\tlocator && position(start);\n\t\t\tdomBuilder.characters(xt, 0, end - start);\n\t\t\tstart = end;\n\t\t}\n\t}\n\n\tfunction position(p, m) {\n\t\twhile (p >= lineEnd && (m = linePattern.exec(source))) {\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t}\n\t\tlocator.columnNumber = p - lineStart + 1;\n\t}\n\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{ currentNSMap: defaultNSMapCopy }];\n\tvar unclosedTags = [];\n\tvar start = 0;\n\twhile (true) {\n\t\ttry {\n\t\t\tvar tagStart = source.indexOf('<', start);\n\t\t\tif (tagStart < 0) {\n\t\t\t\tif (!isHTML && unclosedTags.length > 0) {\n\t\t\t\t\treturn errorHandler.fatalError('unclosed xml tag(s): ' + unclosedTags.join(', '));\n\t\t\t\t}\n\t\t\t\tif (!source.substring(start).match(/^\\s*$/)) {\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t\t\t\t\tvar text = doc.createTextNode(source.substr(start));\n\t\t\t\t\tif (doc.documentElement) {\n\t\t\t\t\t\treturn errorHandler.error('Extra content at the end of the document');\n\t\t\t\t\t}\n\t\t\t\t\tdoc.appendChild(text);\n\t\t\t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (tagStart > start) {\n\t\t\t\tvar fromSource = source.substring(start, tagStart);\n\t\t\t\tif (!isHTML && unclosedTags.length === 0) {\n\t\t\t\t\tfromSource = fromSource.replace(new RegExp(g.S_OPT.source, 'g'), '');\n\t\t\t\t\tfromSource && errorHandler.error(\"Unexpected content outside root element: '\" + fromSource + \"'\");\n\t\t\t\t}\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch (source.charAt(tagStart + 1)) {\n\t\t\t\tcase '/':\n\t\t\t\t\tvar end = source.indexOf('>', tagStart + 2);\n\t\t\t\t\tvar tagNameRaw = source.substring(tagStart + 2, end > 0 ? end : undefined);\n\t\t\t\t\tif (!tagNameRaw) {\n\t\t\t\t\t\treturn errorHandler.fatalError('end tag name missing');\n\t\t\t\t\t}\n\t\t\t\t\tvar tagNameMatch = end > 0 && g.reg('^', g.QName_group, g.S_OPT, '$').exec(tagNameRaw);\n\t\t\t\t\tif (!tagNameMatch) {\n\t\t\t\t\t\treturn errorHandler.fatalError('end tag name contains invalid characters: \"' + tagNameRaw + '\"');\n\t\t\t\t\t}\n\t\t\t\t\tif (!domBuilder.currentElement && !domBuilder.doc.documentElement) {\n\t\t\t\t\t\t// not enough information to provide a helpful error message,\n\t\t\t\t\t\t// but parsing will throw since there is no root element\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar currentTagName =\n\t\t\t\t\t\tunclosedTags[unclosedTags.length - 1] ||\n\t\t\t\t\t\tdomBuilder.currentElement.tagName ||\n\t\t\t\t\t\tdomBuilder.doc.documentElement.tagName ||\n\t\t\t\t\t\t'';\n\t\t\t\t\tif (currentTagName !== tagNameMatch[1]) {\n\t\t\t\t\t\tvar tagNameLower = tagNameMatch[1].toLowerCase();\n\t\t\t\t\t\tif (!isHTML || currentTagName.toLowerCase() !== tagNameLower) {\n\t\t\t\t\t\t\treturn errorHandler.fatalError('Opening and ending tag mismatch: \"' + currentTagName + '\" != \"' + tagNameRaw + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar config = parseStack.pop();\n\t\t\t\t\tunclosedTags.pop();\n\t\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\t\tdomBuilder.endElement(config.uri, config.localName, currentTagName);\n\t\t\t\t\tif (localNSMap) {\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (hasOwn(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tend++;\n\t\t\t\t\tbreak;\n\t\t\t\t// end element\n\t\t\t\tcase '?': // <?...?>\n\t\t\t\t\tlocator && position(tagStart);\n\t\t\t\t\tend = parseProcessingInstruction(source, tagStart, domBuilder, errorHandler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '!': // <!doctype,<![CDATA,<!--\n\t\t\t\t\tlocator && position(tagStart);\n\t\t\t\t\tend = parseDoctypeCommentOrCData(source, tagStart, domBuilder, errorHandler, isHTML);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlocator && position(tagStart);\n\t\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\t\tvar currentNSMap = parseStack[parseStack.length - 1].currentNSMap;\n\t\t\t\t\t//elStartEnd\n\t\t\t\t\tvar end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler, isHTML);\n\t\t\t\t\tvar len = el.length;\n\n\t\t\t\t\tif (!el.closed) {\n\t\t\t\t\t\tif (isHTML && conventions.isHTMLVoidElement(el.tagName)) {\n\t\t\t\t\t\t\tel.closed = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tunclosedTags.push(el.tagName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (locator && len) {\n\t\t\t\t\t\tvar locator2 = copyLocator(locator, {});\n\t\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\t\ta.locator = copyLocator(locator, {});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomBuilder.locator = locator2;\n\t\t\t\t\t\tif (appendElement(el, domBuilder, currentNSMap)) {\n\t\t\t\t\t\t\tparseStack.push(el);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (appendElement(el, domBuilder, currentNSMap)) {\n\t\t\t\t\t\t\tparseStack.push(el);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isHTML && !el.closed) {\n\t\t\t\t\t\tend = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t} else if (e instanceof DOMException) {\n\t\t\t\tthrow new ParseError(e.name + ': ' + e.message, domBuilder.locator, e);\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: ' + e);\n\t\t\tend = -1;\n\t\t}\n\t\tif (end > start) {\n\t\t\tstart = end;\n\t\t} else {\n\t\t\t//Possible sax fallback here, risk of positional error\n\t\t\tappendText(Math.max(tagStart, start) + 1);\n\t\t}\n\t}\n}\n\nfunction copyLocator(f, t) {\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @returns\n * end of the elementStartPart(end of elementEndPart for selfClosed el)\n * @see {@link #appendElement}\n */\nfunction parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler, isHTML) {\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (hasOwn(el.attributeNames, qname)) {\n\t\t\treturn errorHandler.fatalError('Attribute ' + qname + ' redefined');\n\t\t}\n\t\tif (!isHTML && value.indexOf('<') >= 0) {\n\t\t\treturn errorHandler.fatalError(\"Unescaped '<' not allowed in attributes values\");\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(ENTITY_REG, entityReplacer),\n\t\t\tstartIndex\n\t\t);\n\t}\n\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG; //status\n\twhile (true) {\n\t\tvar c = source.charAt(p);\n\t\tswitch (c) {\n\t\t\tcase '=':\n\t\t\t\tif (s === S_ATTR) {\n\t\t\t\t\t//attrName\n\t\t\t\t\tattrName = source.slice(start, p);\n\t\t\t\t\ts = S_EQ;\n\t\t\t\t} else if (s === S_ATTR_SPACE) {\n\t\t\t\t\ts = S_EQ;\n\t\t\t\t} else {\n\t\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"'\":\n\t\t\tcase '\"':\n\t\t\t\tif (\n\t\t\t\t\ts === S_EQ ||\n\t\t\t\t\ts === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t) {\n\t\t\t\t\t//equal\n\t\t\t\t\tif (s === S_ATTR) {\n\t\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"');\n\t\t\t\t\t\tattrName = source.slice(start, p);\n\t\t\t\t\t}\n\t\t\t\t\tstart = p + 1;\n\t\t\t\t\tp = source.indexOf(c, start);\n\t\t\t\t\tif (p > 0) {\n\t\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\t\taddAttribute(attrName, value, start - 1);\n\t\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\t\tthrow new Error(\"attribute value no end '\" + c + \"' match\");\n\t\t\t\t\t}\n\t\t\t\t} else if (s == S_ATTR_NOQUOT_VALUE) {\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\t\terrorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n\t\t\t\t\tstart = p + 1;\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t} else {\n\t\t\t\t\t//fatalError: no equal before\n\t\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tswitch (s) {\n\t\t\t\t\tcase S_TAG:\n\t\t\t\t\t\tel.setTagName(source.slice(start, p));\n\t\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\t\ts = S_TAG_CLOSE;\n\t\t\t\t\t\tel.closed = true;\n\t\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tcase S_ATTR:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\t\tel.closed = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case S_EQ:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"attribute invalid close char('/')\"); // No known test case\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '': //end document\n\t\t\t\terrorHandler.error('unexpected end of input');\n\t\t\t\tif (s == S_TAG) {\n\t\t\t\t\tel.setTagName(source.slice(start, p));\n\t\t\t\t}\n\t\t\t\treturn p;\n\t\t\tcase '>':\n\t\t\t\tswitch (s) {\n\t\t\t\t\tcase S_TAG:\n\t\t\t\t\t\tel.setTagName(source.slice(start, p));\n\t\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\t\tbreak; //normal\n\t\t\t\t\tcase S_ATTR_NOQUOT_VALUE: //Compatible state\n\t\t\t\t\tcase S_ATTR:\n\t\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\t\tif (value.slice(-1) === '/') {\n\t\t\t\t\t\t\tel.closed = true;\n\t\t\t\t\t\t\tvalue = value.slice(0, -1);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\t\tif (s === S_ATTR_SPACE) {\n\t\t\t\t\t\t\tvalue = attrName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (s == S_ATTR_NOQUOT_VALUE) {\n\t\t\t\t\t\t\terrorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n\t\t\t\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!isHTML) {\n\t\t\t\t\t\t\t\terrorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddAttribute(value, value, start);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase S_EQ:\n\t\t\t\t\t\tif (!isHTML) {\n\t\t\t\t\t\t\treturn errorHandler.fatalError('AttValue: \\' or \" expected');\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn p;\n\t\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\t\tcase '\\u0080':\n\t\t\t\tc = ' ';\n\t\t\tdefault:\n\t\t\t\tif (c <= ' ') {\n\t\t\t\t\t//space\n\t\t\t\t\tswitch (s) {\n\t\t\t\t\t\tcase S_TAG:\n\t\t\t\t\t\t\tel.setTagName(source.slice(start, p)); //tagName\n\t\t\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase S_ATTR:\n\t\t\t\t\t\t\tattrName = source.slice(start, p);\n\t\t\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\t\t\terrorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n\t\t\t\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t\t\t//case S_EQ:\n\t\t\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t\t\t//\tvoid();break;\n\t\t\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t\t//ignore warning\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//not space\n\t\t\t\t\t//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n\t\t\t\t\t//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\t\tswitch (s) {\n\t\t\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\t\t\tif (!isHTML) {\n\t\t\t\t\t\t\t\terrorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\t\t\terrorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n\t\t\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase S_EQ:\n\t\t\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t} //end outer switch\n\t\tp++;\n\t}\n}\n\n/**\n * @returns\n * `true` if a new namespace has been defined.\n */\nfunction appendElement(el, domBuilder, currentNSMap) {\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\tvar i = el.length;\n\twhile (i--) {\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif (nsp > 0) {\n\t\t\tvar prefix = (a.prefix = qName.slice(0, nsp));\n\t\t\tvar localName = qName.slice(nsp + 1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName;\n\t\t} else {\n\t\t\tlocalName = qName;\n\t\t\tprefix = null;\n\t\t\tnsPrefix = qName === 'xmlns' && '';\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif (nsPrefix !== false) {\n\t\t\t//hack!!\n\t\t\tif (localNSMap == null) {\n\t\t\t\tlocalNSMap = Object.create(null);\n\t\t\t\t_copy(currentNSMap, (currentNSMap = Object.create(null)));\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS;\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value);\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile (i--) {\n\t\ta = el[i];\n\t\tif (a.prefix) {\n\t\t\t//no prefix attribute has no namespace\n\t\t\tif (a.prefix === 'xml') {\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}\n\t\t\tif (a.prefix !== 'xmlns') {\n\t\t\t\ta.uri = currentNSMap[a.prefix];\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif (nsp > 0) {\n\t\tprefix = el.prefix = tagName.slice(0, nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp + 1);\n\t} else {\n\t\tprefix = null; //important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = (el.uri = currentNSMap[prefix || '']);\n\tdomBuilder.startElement(ns, localName, tagName, el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif (el.closed) {\n\t\tdomBuilder.endElement(ns, localName, tagName);\n\t\tif (localNSMap) {\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (hasOwn(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\n\nfunction parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n\t// https://html.spec.whatwg.org/#raw-text-elements\n\t// https://html.spec.whatwg.org/#escapable-raw-text-elements\n\t// https://html.spec.whatwg.org/#cdata-rcdata-restrictions:raw-text-elements\n\t// TODO: https://html.spec.whatwg.org/#cdata-rcdata-restrictions\n\tvar isEscapableRaw = isHTMLEscapableRawTextElement(tagName);\n\tif (isEscapableRaw || isHTMLRawTextElement(tagName)) {\n\t\tvar elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n\t\tvar text = source.substring(elStartEnd + 1, elEndStart);\n\n\t\tif (isEscapableRaw) {\n\t\t\ttext = text.replace(ENTITY_REG, entityReplacer);\n\t\t}\n\t\tdomBuilder.characters(text, 0, text.length);\n\t\treturn elEndStart;\n\t}\n\treturn elStartEnd + 1;\n}\n\nfunction _copy(source, target) {\n\tfor (var n in source) {\n\t\tif (hasOwn(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\n/**\n * @typedef ParseUtils\n * @property {function(relativeIndex: number?): string | undefined} char\n * Provides look ahead access to a singe character relative to the current index.\n * @property {function(): number} getIndex\n * Provides read-only access to the current index.\n * @property {function(reg: RegExp): string | null} getMatch\n * Applies the provided regular expression enforcing that it starts at the current index and\n * returns the complete matching string,\n * and moves the current index by the length of the matching string.\n * @property {function(): string} getSource\n * Provides read-only access to the complete source.\n * @property {function(places: number?): void} skip\n * moves the current index by places (defaults to 1)\n * @property {function(): number} skipBlanks\n * Moves the current index by the amount of white space that directly follows the current index\n * and returns the amount of whitespace chars skipped (0..n),\n * or -1 if the end of the source was reached.\n * @property {function(): string} substringFromIndex\n * creates a substring from the current index to the end of `source`\n * @property {function(compareWith: string): boolean} substringStartsWith\n * Checks if source contains `compareWith`,\n * starting from the current index.\n * @see {@link parseUtils}\n */\n\n/**\n * A temporary scope for parsing and look ahead operations in `source`,\n * starting from index `start`.\n *\n * Some operations move the current index by a number of positions,\n * after which `getIndex` returns the new index.\n *\n * @param {string} source\n * @param {number} start\n * @returns {ParseUtils}\n */\nfunction parseUtils(source, start) {\n\tvar index = start;\n\n\tfunction char(n) {\n\t\tn = n || 0;\n\t\treturn source.charAt(index + n);\n\t}\n\n\tfunction skip(n) {\n\t\tn = n || 1;\n\t\tindex += n;\n\t}\n\n\tfunction skipBlanks() {\n\t\tvar blanks = 0;\n\t\twhile (index < source.length) {\n\t\t\tvar c = char();\n\t\t\tif (c !== ' ' && c !== '\\n' && c !== '\\t' && c !== '\\r') {\n\t\t\t\treturn blanks;\n\t\t\t}\n\t\t\tblanks++;\n\t\t\tskip();\n\t\t}\n\t\treturn -1;\n\t}\n\tfunction substringFromIndex() {\n\t\treturn source.substring(index);\n\t}\n\tfunction substringStartsWith(text) {\n\t\treturn source.substring(index, index + text.length) === text;\n\t}\n\n\tfunction getMatch(args) {\n\t\tvar expr = g.reg('^', args);\n\t\tvar match = expr.exec(substringFromIndex());\n\t\tif (match) {\n\t\t\tskip(match[0].length);\n\t\t\treturn match[0];\n\t\t}\n\t\treturn null;\n\t}\n\treturn {\n\t\tchar: char,\n\t\tgetIndex: function () {\n\t\t\treturn index;\n\t\t},\n\t\tgetMatch: getMatch,\n\t\tgetSource: function () {\n\t\t\treturn source;\n\t\t},\n\t\tskip: skip,\n\t\tskipBlanks: skipBlanks,\n\t\tsubstringFromIndex: substringFromIndex,\n\t\tsubstringStartsWith: substringStartsWith,\n\t};\n}\n\n/**\n * @param {ParseUtils} p\n * @param {DOMHandler} errorHandler\n * @returns {string}\n */\nfunction parseDoctypeInternalSubset(p, errorHandler) {\n\t/**\n\t * @param {ParseUtils} p\n\t * @param {DOMHandler} errorHandler\n\t * @returns {string}\n\t */\n\tfunction parsePI(p, errorHandler) {\n\t\tvar match = g.PI.exec(p.substringFromIndex());\n\t\tif (!match) {\n\t\t\treturn errorHandler.fatalError('processing instruction is not well-formed at position ' + p.getIndex());\n\t\t}\n\t\tif (match[1].toLowerCase() === 'xml') {\n\t\t\treturn errorHandler.fatalError(\n\t\t\t\t'xml declaration is only allowed at the start of the document, but found at position ' + p.getIndex()\n\t\t\t);\n\t\t}\n\t\tp.skip(match[0].length);\n\t\treturn match[0];\n\t}\n\t// Parse internal subset\n\tvar source = p.getSource();\n\tif (p.char() === '[') {\n\t\tp.skip(1);\n\t\tvar intSubsetStart = p.getIndex();\n\t\twhile (p.getIndex() < source.length) {\n\t\t\tp.skipBlanks();\n\t\t\tif (p.char() === ']') {\n\t\t\t\tvar internalSubset = source.substring(intSubsetStart, p.getIndex());\n\t\t\t\tp.skip(1);\n\t\t\t\treturn internalSubset;\n\t\t\t}\n\t\t\tvar current = null;\n\t\t\t// Only in external subset\n\t\t\t// if (char() === '<' && char(1) === '!' && char(2) === '[') {\n\t\t\t// \tparseConditionalSections(p, errorHandler);\n\t\t\t// } else\n\t\t\tif (p.char() === '<' && p.char(1) === '!') {\n\t\t\t\tswitch (p.char(2)) {\n\t\t\t\t\tcase 'E': // ELEMENT | ENTITY\n\t\t\t\t\t\tif (p.char(3) === 'L') {\n\t\t\t\t\t\t\tcurrent = p.getMatch(g.elementdecl);\n\t\t\t\t\t\t} else if (p.char(3) === 'N') {\n\t\t\t\t\t\t\tcurrent = p.getMatch(g.EntityDecl);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'A': // ATTRIBUTE\n\t\t\t\t\t\tcurrent = p.getMatch(g.AttlistDecl);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'N': // NOTATION\n\t\t\t\t\t\tcurrent = p.getMatch(g.NotationDecl);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '-': // COMMENT\n\t\t\t\t\t\tcurrent = p.getMatch(g.Comment);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (p.char() === '<' && p.char(1) === '?') {\n\t\t\t\tcurrent = parsePI(p, errorHandler);\n\t\t\t} else if (p.char() === '%') {\n\t\t\t\tcurrent = p.getMatch(g.PEReference);\n\t\t\t} else {\n\t\t\t\treturn errorHandler.fatalError('Error detected in Markup declaration');\n\t\t\t}\n\t\t\tif (!current) {\n\t\t\t\treturn errorHandler.fatalError('Error in internal subset at position ' + p.getIndex());\n\t\t\t}\n\t\t}\n\t\treturn errorHandler.fatalError('doctype internal subset is not well-formed, missing ]');\n\t}\n}\n\n/**\n * Called when the parser encounters an element starting with '<!'.\n *\n * @param {string} source\n * The xml.\n * @param {number} start\n * the start index of the '<!'\n * @param {DOMHandler} domBuilder\n * @param {DOMHandler} errorHandler\n * @param {boolean} isHTML\n * @returns {number | never}\n * The end index of the element.\n * @throws {ParseError}\n * In case the element is not well-formed.\n */\nfunction parseDoctypeCommentOrCData(source, start, domBuilder, errorHandler, isHTML) {\n\tvar p = parseUtils(source, start);\n\n\tswitch (p.char(2)) {\n\t\tcase '-':\n\t\t\t// should be a comment\n\t\t\tvar comment = p.getMatch(g.Comment);\n\t\t\tif (comment) {\n\t\t\t\tdomBuilder.comment(comment, g.COMMENT_START.length, comment.length - g.COMMENT_START.length - g.COMMENT_END.length);\n\t\t\t\treturn p.getIndex();\n\t\t\t} else {\n\t\t\t\treturn errorHandler.fatalError('comment is not well-formed at position ' + p.getIndex());\n\t\t\t}\n\t\tcase '[':\n\t\t\t// should be CDATA\n\t\t\tvar cdata = p.getMatch(g.CDSect);\n\t\t\tif (cdata) {\n\t\t\t\tif (!isHTML && !domBuilder.currentElement) {\n\t\t\t\t\treturn errorHandler.fatalError('CDATA outside of element');\n\t\t\t\t}\n\t\t\t\tdomBuilder.startCDATA();\n\t\t\t\tdomBuilder.characters(cdata, g.CDATA_START.length, cdata.length - g.CDATA_START.length - g.CDATA_END.length);\n\t\t\t\tdomBuilder.endCDATA();\n\t\t\t\treturn p.getIndex();\n\t\t\t} else {\n\t\t\t\treturn errorHandler.fatalError('Invalid CDATA starting at position ' + start);\n\t\t\t}\n\t\tcase 'D': {\n\t\t\t// should be DOCTYPE\n\t\t\tif (domBuilder.doc && domBuilder.doc.documentElement) {\n\t\t\t\treturn errorHandler.fatalError('Doctype not allowed inside or after documentElement at position ' + p.getIndex());\n\t\t\t}\n\t\t\tif (!p.substringStartsWith(g.DOCTYPE_DECL_START)) {\n\t\t\t\treturn errorHandler.fatalError('Expected ' + g.DOCTYPE_DECL_START + ' at position ' + p.getIndex());\n\t\t\t}\n\t\t\tp.skip(g.DOCTYPE_DECL_START.length);\n\t\t\tif (p.skipBlanks() < 1) {\n\t\t\t\treturn errorHandler.fatalError('Expected whitespace after ' + g.DOCTYPE_DECL_START + ' at position ' + p.getIndex());\n\t\t\t}\n\n\t\t\tvar doctype = {\n\t\t\t\tname: undefined,\n\t\t\t\tpublicId: undefined,\n\t\t\t\tsystemId: undefined,\n\t\t\t\tinternalSubset: undefined,\n\t\t\t};\n\t\t\t// Parse the DOCTYPE name\n\t\t\tdoctype.name = p.getMatch(g.Name);\n\t\t\tif (!doctype.name)\n\t\t\t\treturn errorHandler.fatalError('doctype name missing or contains unexpected characters at position ' + p.getIndex());\n\t\t\tp.skipBlanks();\n\n\t\t\t// Check for ExternalID\n\t\t\tif (p.substringStartsWith(g.PUBLIC) || p.substringStartsWith(g.SYSTEM)) {\n\t\t\t\tvar match = g.ExternalID_match.exec(p.substringFromIndex());\n\t\t\t\tif (!match) {\n\t\t\t\t\treturn errorHandler.fatalError('doctype external id is not well-formed at position ' + p.getIndex());\n\t\t\t\t}\n\t\t\t\tif (match.groups.SystemLiteralOnly !== undefined) {\n\t\t\t\t\tdoctype.systemId = match.groups.SystemLiteralOnly;\n\t\t\t\t} else {\n\t\t\t\t\tdoctype.systemId = match.groups.SystemLiteral;\n\t\t\t\t\tdoctype.publicId = match.groups.PubidLiteral;\n\t\t\t\t}\n\t\t\t\tp.skip(match[0].length);\n\t\t\t}\n\n\t\t\tp.skipBlanks();\n\t\t\tdoctype.internalSubset = parseDoctypeInternalSubset(p, errorHandler);\n\t\t\tp.skipBlanks();\n\t\t\tif (p.char() !== '>') {\n\t\t\t\treturn errorHandler.fatalError('doctype not terminated with > at position ' + p.getIndex());\n\t\t\t}\n\t\t\tp.skip(1);\n\t\t\tdomBuilder.startDTD(doctype.name, doctype.publicId, doctype.systemId, doctype.internalSubset);\n\t\t\tdomBuilder.endDTD();\n\t\t\treturn p.getIndex();\n\t\t}\n\t\tdefault:\n\t\t\treturn errorHandler.fatalError('Not well-formed XML starting with \"<!\" at position ' + start);\n\t}\n}\n\nfunction parseProcessingInstruction(source, start, domBuilder, errorHandler) {\n\tvar match = source.substring(start).match(g.PI);\n\tif (!match) {\n\t\treturn errorHandler.fatalError('Invalid processing instruction starting at position ' + start);\n\t}\n\tif (match[1].toLowerCase() === 'xml') {\n\t\tif (start > 0) {\n\t\t\treturn errorHandler.fatalError(\n\t\t\t\t'processing instruction at position ' + start + ' is an xml declaration which is only at the start of the document'\n\t\t\t);\n\t\t}\n\t\tif (!g.XMLDecl.test(source.substring(start))) {\n\t\t\treturn errorHandler.fatalError('xml declaration is not well-formed');\n\t\t}\n\t}\n\tdomBuilder.processingInstruction(match[1], match[2]);\n\treturn start + match[0].length;\n}\n\nfunction ElementAttributes() {\n\tthis.attributeNames = Object.create(null);\n}\n\nElementAttributes.prototype = {\n\tsetTagName: function (tagName) {\n\t\tif (!g.QName_exact.test(tagName)) {\n\t\t\tthrow new Error('invalid tagName:' + tagName);\n\t\t}\n\t\tthis.tagName = tagName;\n\t},\n\taddValue: function (qName, value, offset) {\n\t\tif (!g.QName_exact.test(qName)) {\n\t\t\tthrow new Error('invalid attribute:' + qName);\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = { qName: qName, value: value, offset: offset };\n\t},\n\tlength: 0,\n\tgetLocalName: function (i) {\n\t\treturn this[i].localName;\n\t},\n\tgetLocator: function (i) {\n\t\treturn this[i].locator;\n\t},\n\tgetQName: function (i) {\n\t\treturn this[i].qName;\n\t},\n\tgetURI: function (i) {\n\t\treturn this[i].uri;\n\t},\n\tgetValue: function (i) {\n\t\treturn this[i].value;\n\t},\n\t//\t,getIndex:function(uri, localName)){\n\t//\t\tif(localName){\n\t//\n\t//\t\t}else{\n\t//\t\t\tvar qName = uri\n\t//\t\t}\n\t//\t},\n\t//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n\t//\tgetType:function(uri,localName){}\n\t//\tgetType:function(i){},\n};\n\nexports.XMLReader = XMLReader;\nexports.parseUtils = parseUtils;\nexports.parseDoctypeCommentOrCData = parseDoctypeCommentOrCData;\n","'use strict';\n\nvar conventions = require('./conventions');\nvar dom = require('./dom');\nvar errors = require('./errors');\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar hasDefaultHTMLNamespace = conventions.hasDefaultHTMLNamespace;\nvar isHTMLMimeType = conventions.isHTMLMimeType;\nvar isValidMimeType = conventions.isValidMimeType;\nvar MIME_TYPE = conventions.MIME_TYPE;\nvar NAMESPACE = conventions.NAMESPACE;\nvar ParseError = errors.ParseError;\n\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to <https://www.w3.org/TR/xml11/#sec-line-ends>:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA,\n * > 2. the two-character sequence #xD #x85,\n * > 3. the single character #x85,\n * > 4. the single character #x2028,\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n * @prettierignore\n */\nfunction normalizeLineEndings(input) {\n\treturn input.replace(/\\r[\\n\\u0085]/g, '\\n').replace(/[\\r\\u0085\\u2028]/g, '\\n');\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {typeof assign} [assign]\n * The method to use instead of `conventions.assign`, which is used to copy values from\n * `options` before they are used for parsing.\n * @property {typeof DOMHandler} [domHandler]\n * For internal testing: The class for creating an instance for handling events from the SAX\n * parser.\n * *****Warning: By configuring a faulty implementation, the specified behavior can completely\n * be broken.*****.\n * @property {Function} [errorHandler]\n * DEPRECATED! use `onError` instead.\n * @property {function(level:ErrorLevel, message:string, context: DOMHandler):void}\n * [onError]\n * A function that is invoked for every error that occurs during parsing.\n *\n * If it is not provided, all errors are reported to `console.error`\n * and only `fatalError`s are thrown as a `ParseError`,\n * which prevents any further processing.\n * If the provided method throws, a `ParserError` is thrown,\n * which prevents any further processing.\n *\n * Be aware that many `warning`s are considered an error that prevents further processing in\n * most implementations.\n * @property {boolean} [locator=true]\n * Configures if the nodes created during parsing will have a `lineNumber` and a `columnNumber`\n * attribute describing their location in the XML string.\n * Default is true.\n * @property {(string) => string} [normalizeLineEndings]\n * used to replace line endings before parsing, defaults to `normalizeLineEndings`\n * @property {Object} [xmlns]\n * The XML namespaces that should be assumed when parsing.\n * The default namespace can be provided by the key that is the empty string.\n * When the `mimeType` for HTML, XHTML or SVG are passed to `parseFromString`,\n * the default namespace that will be used,\n * will be overridden according to the specification.\n * @see {@link normalizeLineEndings}\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code from a string\n * into a DOM `Document`.\n *\n * ***xmldom is different from the spec in that it allows an `options` parameter,\n * to control the behavior***.\n *\n * @class\n * @param {DOMParserOptions} [options]\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options) {\n\toptions = options || { locator: true };\n\n\t/**\n\t * The method to use instead of `conventions.assign`, which is used to copy values from\n\t * `options`\n\t * before they are used for parsing.\n\t *\n\t * @type {conventions.assign}\n\t * @private\n\t * @see {@link conventions.assign}\n\t * @readonly\n\t */\n\tthis.assign = options.assign || conventions.assign;\n\n\t/**\n\t * For internal testing: The class for creating an instance for handling events from the SAX\n\t * parser.\n\t * *****Warning: By configuring a faulty implementation, the specified behavior can completely\n\t * be broken*****.\n\t *\n\t * @type {typeof DOMHandler}\n\t * @private\n\t * @readonly\n\t */\n\tthis.domHandler = options.domHandler || DOMHandler;\n\n\t/**\n\t * A function that is invoked for every error that occurs during parsing.\n\t *\n\t * If it is not provided, all errors are reported to `console.error`\n\t * and only `fatalError`s are thrown as a `ParseError`,\n\t * which prevents any further processing.\n\t * If the provided method throws, a `ParserError` is thrown,\n\t * which prevents any further processing.\n\t *\n\t * Be aware that many `warning`s are considered an error that prevents further processing in\n\t * most implementations.\n\t *\n\t * @type {function(level:ErrorLevel, message:string, context: DOMHandler):void}\n\t * @see {@link onErrorStopParsing}\n\t * @see {@link onWarningStopParsing}\n\t */\n\tthis.onError = options.onError || options.errorHandler;\n\tif (options.errorHandler && typeof options.errorHandler !== 'function') {\n\t\tthrow new TypeError('errorHandler object is no longer supported, switch to onError!');\n\t} else if (options.errorHandler) {\n\t\toptions.errorHandler('warning', 'The `errorHandler` option has been deprecated, use `onError` instead!', this);\n\t}\n\n\t/**\n\t * used to replace line endings before parsing, defaults to `normalizeLineEndings`\n\t *\n\t * @type {(string) => string}\n\t * @readonly\n\t */\n\tthis.normalizeLineEndings = options.normalizeLineEndings || normalizeLineEndings;\n\n\t/**\n\t * Configures if the nodes created during parsing will have a `lineNumber` and a\n\t * `columnNumber`\n\t * attribute describing their location in the XML string.\n\t * Default is true.\n\t *\n\t * @type {boolean}\n\t * @readonly\n\t */\n\tthis.locator = !!options.locator;\n\n\t/**\n\t * The default namespace can be provided by the key that is the empty string.\n\t * When the `mimeType` for HTML, XHTML or SVG are passed to `parseFromString`,\n\t * the default namespace that will be used,\n\t * will be overridden according to the specification.\n\t *\n\t * @type {Readonly<Object>}\n\t * @readonly\n\t */\n\tthis.xmlns = this.assign(Object.create(null), options.xmlns);\n}\n\n/**\n * Parses `source` using the options in the way configured by the `DOMParserOptions` of `this`\n * `DOMParser`. If `mimeType` is `text/html` an HTML `Document` is created,\n * otherwise an XML `Document` is created.\n *\n * __It behaves different from the description in the living standard__:\n * - Uses the `options` passed to the `DOMParser` constructor to modify the behavior.\n * - Any unexpected input is reported to `onError` with either a `warning`,\n * `error` or `fatalError` level.\n * - Any `fatalError` throws a `ParseError` which prevents further processing.\n * - Any error thrown by `onError` is converted to a `ParseError` which prevents further\n * processing - If no `Document` was created during parsing it is reported as a `fatalError`.\n * *****Warning: By configuring a faulty DOMHandler implementation,\n * the specified behavior can completely be broken*****.\n *\n * @param {string} source\n * The XML mime type only allows string input!\n * @param {string} [mimeType='application/xml']\n * the mimeType or contentType of the document to be created determines the `type` of document\n * created (XML or HTML)\n * @returns {Document}\n * The `Document` node.\n * @throws {ParseError}\n * for any `fatalError` or anything that is thrown by `onError`\n * @throws {TypeError}\n * for any invalid `mimeType`\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString\n * @see https://html.spec.whatwg.org/#dom-domparser-parsefromstring-dev\n */\nDOMParser.prototype.parseFromString = function (source, mimeType) {\n\tif (!isValidMimeType(mimeType)) {\n\t\tthrow new TypeError('DOMParser.parseFromString: the provided mimeType \"' + mimeType + '\" is not valid.');\n\t}\n\tvar defaultNSMap = this.assign(Object.create(null), this.xmlns);\n\tvar entityMap = entities.XML_ENTITIES;\n\tvar defaultNamespace = defaultNSMap[''] || null;\n\tif (hasDefaultHTMLNamespace(mimeType)) {\n\t\tentityMap = entities.HTML_ENTITIES;\n\t\tdefaultNamespace = NAMESPACE.HTML;\n\t} else if (mimeType === MIME_TYPE.XML_SVG_IMAGE) {\n\t\tdefaultNamespace = NAMESPACE.SVG;\n\t}\n\tdefaultNSMap[''] = defaultNamespace;\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\n\tvar domBuilder = new this.domHandler({\n\t\tmimeType: mimeType,\n\t\tdefaultNamespace: defaultNamespace,\n\t\tonError: this.onError,\n\t});\n\tvar locator = this.locator ? {} : undefined;\n\tif (this.locator) {\n\t\tdomBuilder.setDocumentLocator(locator);\n\t}\n\n\tvar sax = new XMLReader();\n\tsax.errorHandler = domBuilder;\n\tsax.domBuilder = domBuilder;\n\tvar isXml = !conventions.isHTMLMimeType(mimeType);\n\tif (isXml && typeof source !== 'string') {\n\t\tsax.errorHandler.fatalError('source is not a string');\n\t}\n\tsax.parse(this.normalizeLineEndings(String(source)), defaultNSMap, entityMap);\n\tif (!domBuilder.doc.documentElement) {\n\t\tsax.errorHandler.fatalError('missing root element');\n\t}\n\treturn domBuilder.doc;\n};\n\n/**\n * @typedef DOMHandlerOptions\n * @property {string} [mimeType=MIME_TYPE.XML_APPLICATION]\n * @property {string | null} [defaultNamespace=null]\n */\n/**\n * The class that is used to handle events from the SAX parser to create the related DOM\n * elements.\n *\n * Some methods are only implemented as an empty function,\n * since they are (at least currently) not relevant for xmldom.\n *\n * @class\n * @param {DOMHandlerOptions} [options]\n * @see http://www.saxproject.org/apidoc/org/xml/sax/ext/DefaultHandler2.html\n */\nfunction DOMHandler(options) {\n\tvar opt = options || {};\n\t/**\n\t * The mime type is used to determine if the DOM handler will create an XML or HTML document.\n\t * Only if it is set to `text/html` it will create an HTML document.\n\t * It defaults to MIME_TYPE.XML_APPLICATION.\n\t *\n\t * @type {string}\n\t * @see {@link MIME_TYPE}\n\t * @readonly\n\t */\n\tthis.mimeType = opt.mimeType || MIME_TYPE.XML_APPLICATION;\n\n\t/**\n\t * The namespace to use to create an XML document.\n\t * For the following reasons this is required:\n\t * - The SAX API for `startDocument` doesn't offer any way to pass a namespace,\n\t * since at that point there is no way for the parser to know what the default namespace from\n\t * the document will be.\n\t * - When creating using `DOMImplementation.createDocument` it is required to pass a\n\t * namespace,\n\t * to determine the correct `Document.contentType`, which should match `this.mimeType`.\n\t * - When parsing an XML document with the `application/xhtml+xml` mimeType,\n\t * the HTML namespace needs to be the default namespace.\n\t *\n\t * @type {string | null}\n\t * @private\n\t * @readonly\n\t */\n\tthis.defaultNamespace = opt.defaultNamespace || null;\n\n\t/**\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis.cdata = false;\n\n\t/**\n\t * The last `Element` that was created by `startElement`.\n\t * `endElement` sets it to the `currentElement.parentNode`.\n\t *\n\t * Note: The sax parser currently sets it to white space text nodes between tags.\n\t *\n\t * @type {Element | Node | undefined}\n\t * @private\n\t */\n\tthis.currentElement = undefined;\n\n\t/**\n\t * The Document that is created as part of `startDocument`,\n\t * and returned by `DOMParser.parseFromString`.\n\t *\n\t * @type {Document | undefined}\n\t * @readonly\n\t */\n\tthis.doc = undefined;\n\n\t/**\n\t * The locator is stored as part of setDocumentLocator.\n\t * It is controlled and mutated by the SAX parser to store the current parsing position.\n\t * It is used by DOMHandler to set `columnNumber` and `lineNumber`\n\t * on the DOM nodes.\n\t *\n\t * @type {Readonly<Locator> | undefined}\n\t * @private\n\t * @readonly (the\n\t * sax parser currently sometimes set's it)\n\t */\n\tthis.locator = undefined;\n\t/**\n\t * @type {function (level:ErrorLevel ,message:string, context:DOMHandler):void}\n\t * @readonly\n\t */\n\tthis.onError = opt.onError;\n}\n\nfunction position(locator, node) {\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n\nDOMHandler.prototype = {\n\t/**\n\t * Either creates an XML or an HTML document and stores it under `this.doc`.\n\t * If it is an XML document, `this.defaultNamespace` is used to create it,\n\t * and it will not contain any `childNodes`.\n\t * If it is an HTML document, it will be created without any `childNodes`.\n\t *\n\t * @see http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n\t */\n\tstartDocument: function () {\n\t\tvar impl = new DOMImplementation();\n\t\tthis.doc = isHTMLMimeType(this.mimeType) ? impl.createHTMLDocument(false) : impl.createDocument(this.defaultNamespace, '');\n\t},\n\tstartElement: function (namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t\tvar el = doc.createElementNS(namespaceURI, qName || localName);\n\t\tvar len = attrs.length;\n\t\tappendElement(this, el);\n\t\tthis.currentElement = el;\n\n\t\tthis.locator && position(this.locator, el);\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar namespaceURI = attrs.getURI(i);\n\t\t\tvar value = attrs.getValue(i);\n\t\t\tvar qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator && position(attrs.getLocator(i), attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr);\n\t\t}\n\t},\n\tendElement: function (namespaceURI, localName, qName) {\n\t\tthis.currentElement = this.currentElement.parentNode;\n\t},\n\tstartPrefixMapping: function (prefix, uri) {},\n\tendPrefixMapping: function (prefix) {},\n\tprocessingInstruction: function (target, data) {\n\t\tvar ins = this.doc.createProcessingInstruction(target, data);\n\t\tthis.locator && position(this.locator, ins);\n\t\tappendElement(this, ins);\n\t},\n\tignorableWhitespace: function (ch, start, length) {},\n\tcharacters: function (chars, start, length) {\n\t\tchars = _toString.apply(this, arguments);\n\t\t//console.log(chars)\n\t\tif (chars) {\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif (this.currentElement) {\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t} else if (/^\\s*$/.test(chars)) {\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator, charNode);\n\t\t}\n\t},\n\tskippedEntity: function (name) {},\n\tendDocument: function () {\n\t\tthis.doc.normalize();\n\t},\n\t/**\n\t * Stores the locator to be able to set the `columnNumber` and `lineNumber`\n\t * on the created DOM nodes.\n\t *\n\t * @param {Locator} locator\n\t */\n\tsetDocumentLocator: function (locator) {\n\t\tif (locator) {\n\t\t\tlocator.lineNumber = 0;\n\t\t}\n\t\tthis.locator = locator;\n\t},\n\t//LexicalHandler\n\tcomment: function (chars, start, length) {\n\t\tchars = _toString.apply(this, arguments);\n\t\tvar comm = this.doc.createComment(chars);\n\t\tthis.locator && position(this.locator, comm);\n\t\tappendElement(this, comm);\n\t},\n\n\tstartCDATA: function () {\n\t\t//used in characters() methods\n\t\tthis.cdata = true;\n\t},\n\tendCDATA: function () {\n\t\tthis.cdata = false;\n\t},\n\n\tstartDTD: function (name, publicId, systemId, internalSubset) {\n\t\tvar impl = this.doc.implementation;\n\t\tif (impl && impl.createDocumentType) {\n\t\t\tvar dt = impl.createDocumentType(name, publicId, systemId, internalSubset);\n\t\t\tthis.locator && position(this.locator, dt);\n\t\t\tappendElement(this, dt);\n\t\t\tthis.doc.doctype = dt;\n\t\t}\n\t},\n\treportError: function (level, message) {\n\t\tif (typeof this.onError === 'function') {\n\t\t\ttry {\n\t\t\t\tthis.onError(level, message, this);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new ParseError('Reporting ' + level + ' \"' + message + '\" caused ' + e, this.locator);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error('[xmldom ' + level + ']\\t' + message, _locator(this.locator));\n\t\t}\n\t},\n\t/**\n\t * @see http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning: function (message) {\n\t\tthis.reportError('warning', message);\n\t},\n\terror: function (message) {\n\t\tthis.reportError('error', message);\n\t},\n\t/**\n\t * This function reports a fatal error and throws a ParseError.\n\t *\n\t * @param {string} message\n\t * - The message to be used for reporting and throwing the error.\n\t * @returns {never}\n\t * This function always throws an error and never returns a value.\n\t * @throws {ParseError}\n\t * Always throws a ParseError with the provided message.\n\t */\n\tfatalError: function (message) {\n\t\tthis.reportError('fatalError', message);\n\t\tthrow new ParseError(message, this.locator);\n\t},\n};\n\nfunction _locator(l) {\n\tif (l) {\n\t\treturn '\\n@#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n\t}\n}\n\nfunction _toString(chars, start, length) {\n\tif (typeof chars == 'string') {\n\t\treturn chars.substr(start, length);\n\t} else {\n\t\t//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif (chars.length >= start + length || start) {\n\t\t\treturn new java.lang.String(chars, start, length) + '';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n'endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl'.replace(\n\t/\\w+/g,\n\tfunction (key) {\n\t\tDOMHandler.prototype[key] = function () {\n\t\t\treturn null;\n\t\t};\n\t}\n);\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement(handler, node) {\n\tif (!handler.currentElement) {\n\t\thandler.doc.appendChild(node);\n\t} else {\n\t\thandler.currentElement.appendChild(node);\n\t}\n}\n\n/**\n * A method that prevents any further parsing when an `error`\n * with level `error` is reported during parsing.\n *\n * @see {@link DOMParserOptions.onError}\n * @see {@link onWarningStopParsing}\n */\nfunction onErrorStopParsing(level) {\n\tif (level === 'error') throw 'onErrorStopParsing';\n}\n\n/**\n * A method that prevents any further parsing when any `error` is reported during parsing.\n *\n * @see {@link DOMParserOptions.onError}\n * @see {@link onErrorStopParsing}\n */\nfunction onWarningStopParsing() {\n\tthrow 'onWarningStopParsing';\n}\n\nexports.__DOMHandler = DOMHandler;\nexports.DOMParser = DOMParser;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.onErrorStopParsing = onErrorStopParsing;\nexports.onWarningStopParsing = onWarningStopParsing;\n","'use strict';\nvar conventions = require('./conventions');\nexports.assign = conventions.assign;\nexports.hasDefaultHTMLNamespace = conventions.hasDefaultHTMLNamespace;\nexports.isHTMLMimeType = conventions.isHTMLMimeType;\nexports.isValidMimeType = conventions.isValidMimeType;\nexports.MIME_TYPE = conventions.MIME_TYPE;\nexports.NAMESPACE = conventions.NAMESPACE;\n\nvar errors = require('./errors');\nexports.DOMException = errors.DOMException;\nexports.DOMExceptionName = errors.DOMExceptionName;\nexports.ExceptionCode = errors.ExceptionCode;\nexports.ParseError = errors.ParseError;\n\nvar dom = require('./dom');\nexports.Attr = dom.Attr;\nexports.CDATASection = dom.CDATASection;\nexports.CharacterData = dom.CharacterData;\nexports.Comment = dom.Comment;\nexports.Document = dom.Document;\nexports.DocumentFragment = dom.DocumentFragment;\nexports.DocumentType = dom.DocumentType;\nexports.DOMImplementation = dom.DOMImplementation;\nexports.Element = dom.Element;\nexports.Entity = dom.Entity;\nexports.EntityReference = dom.EntityReference;\nexports.LiveNodeList = dom.LiveNodeList;\nexports.NamedNodeMap = dom.NamedNodeMap;\nexports.Node = dom.Node;\nexports.NodeList = dom.NodeList;\nexports.Notation = dom.Notation;\nexports.ProcessingInstruction = dom.ProcessingInstruction;\nexports.Text = dom.Text;\nexports.XMLSerializer = dom.XMLSerializer;\n\nvar domParser = require('./dom-parser');\nexports.DOMParser = domParser.DOMParser;\nexports.onErrorStopParsing = domParser.onErrorStopParsing;\nexports.onWarningStopParsing = domParser.onWarningStopParsing;\n","import { DOMParser, Element, LiveNodeList } from '@xmldom/xmldom';\nimport { ucs2decode } from './ucs2.ts';\nimport { Font, Glyph, Ligature } from './sfnt.ts';\nimport * as svgpath from 'svgpath';\n\nfunction getGlyph(glyphElem: Element, fontInfo: Font): Glyph {\n  const glyph: Partial<Glyph> = {\n    d: '',\n    unicode: []\n  };\n\n  if (glyphElem.hasAttribute('d')) {\n    glyph.d = glyphElem.getAttribute('d')!.trim();\n  } else {\n    // try nested <path>\n    const pathElem = glyphElem.getElementsByTagName('path')[0];\n\n    if (pathElem && pathElem.hasAttribute('d')) {\n      // <path> has reversed Y axis\n      glyph.d = pathElem.getAttribute('d')!\n    } else {\n      throw new Error(\"Can't find 'd' attribute of <glyph> tag.\");\n    }\n  }\n\n  if (glyphElem.getAttribute('unicode')) {\n    glyph.character = glyphElem.getAttribute('unicode')!;\n    const unicode = ucs2decode(glyph.character);\n\n    // If more than one code point is involved, the glyph is a ligature glyph\n    if (unicode.length > 1) {\n      glyph.ligature = glyph.character;\n      glyph.ligatureCodes = unicode;\n    } else {\n      glyph.unicode!.push(unicode[0]);\n    }\n  }\n\n  glyph.name = glyphElem.getAttribute('glyph-name') || undefined;\n\n  if (glyphElem.getAttribute('horiz-adv-x')) {\n    glyph.width = parseInt(glyphElem.getAttribute('horiz-adv-x')!, 10);\n  }\n\n  return glyph as Glyph;\n}\n\nfunction deduplicateGlyps(glyphs: Glyph[], ligatures: Ligature[]): Glyph[] {\n  // Result (the list of unique glyphs)\n  const result: Glyph[] = [];\n\n  glyphs.forEach(glyph => {\n    // Search for glyphs with the same properties (width and d)\n    const canonical = result.find(_glyph => _glyph.width === glyph.width && _glyph.d === glyph.d);\n\n    if (canonical) {\n      // Add the code points to the unicode array.\n      // The fields \"name\" and \"character\" are not that important so we leave them how we first enounter them and throw the rest away\n      canonical.unicode = canonical.unicode.concat(glyph.unicode);\n      glyph.canonical = canonical;\n    } else {\n      result.push(glyph);\n    }\n  });\n\n  // Update ligatures to point to the canonical version\n  ligatures.forEach(ligature => {\n    while ('canonical' in  ligature.glyph) {\n      ligature.glyph = ligature.glyph.canonical!;\n    }\n  });\n\n  return result;\n}\n\nexport function load(str: string): Font {\n  const doc = new DOMParser().parseFromString(str, 'application/xml');\n\n  const metadata = doc.getElementsByTagName('metadata')[0];\n  const fontElem = doc.getElementsByTagName('font')[0];\n\n  if (!fontElem) {\n    throw new Error(\"Can't find <font> tag. Make sure you SVG file is font, not image.\");\n  }\n\n  const fontFaceElem = fontElem.getElementsByTagName('font-face')[0];\n\n  const familyName = fontFaceElem.getAttribute('font-family') || 'fontello';\n  const subfamilyName = fontFaceElem.getAttribute('font-style') || 'Regular';\n  const id = fontElem.getAttribute('id') || (familyName + '-' + subfamilyName).replace(/[\\s\\(\\)\\[\\]<>%\\/]/g, '').slice(0, 62);\n\n  const font: Partial<Font> = {\n    id: id,\n    familyName: familyName,\n    subfamilyName: subfamilyName,\n    stretch: fontFaceElem.getAttribute('font-stretch') || 'normal',\n    ascent: 0,\n    glyphs: [],\n    ligatures: []\n  };\n\n  // Doesn't work with complex content like <strong>Copyright:></strong><em>Fontello</em>\n  if (metadata && metadata.textContent) {\n    font.metadata = metadata.textContent;\n  }\n\n  // Get <font> numeric attributes\n  const fontAttrs: { [key: string]: string } = {\n    width: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y'\n  };\n  Object.entries(fontAttrs).forEach(function ([key, val]) {\n    if (fontElem.hasAttribute(val)) {\n      (font as any)[key] = parseInt(fontElem.getAttribute(val)!, 10);\n    }\n  });\n\n  // Get <font-face> numeric attributes\n  const fontFaceAttrs: { [key: string]: string } = {\n    ascent: 'ascent',\n    descent: 'descent',\n    unitsPerEm: 'units-per-em',\n    capHeight: 'cap-height',\n    xHeight: 'x-height',\n    underlineThickness: 'underline-thickness',\n    underlinePosition: 'underline-position'\n  };\n  Object.entries(fontFaceAttrs).forEach(([key, val]) => {\n    if (fontFaceElem.hasAttribute(val)) {\n      (font as any)[key] = parseInt(fontFaceElem.getAttribute(val)!, 10);\n    }\n  });\n\n  if (fontFaceElem.hasAttribute('font-weight')) {\n    font.weightClass = fontFaceElem.getAttribute('font-weight')!;\n  }\n\n  const missingGlyphElem = fontElem.getElementsByTagName('missing-glyph')[0];\n\n  if (missingGlyphElem) {\n    font.missingGlyph = {\n      d: missingGlyphElem.getAttribute('d') || ''\n    };\n\n    if (missingGlyphElem.getAttribute('horiz-adv-x')) {\n      font.missingGlyph.width = parseInt(missingGlyphElem.getAttribute('horiz-adv-x')!, 10);\n    }\n  }\n\n  let glyphs: Glyph[] = [];\n  const ligatures: Ligature[] = [];\n\n  const glyphElements: LiveNodeList<Element> = fontElem.getElementsByTagName('glyph');\n\n  for (const glyphElement of glyphElements) {\n    const glyph = getGlyph(glyphElement, font as Font);\n\n    if ('ligature' in glyph) {\n      ligatures.push({\n        ligature: glyph.ligature!,\n        unicode: glyph.ligatureCodes!,\n        glyph: glyph\n      });\n    }\n\n    glyphs.push(glyph);\n  }\n\n  glyphs = deduplicateGlyps(glyphs, ligatures);\n\n  font.glyphs = glyphs;\n  font.ligatures = ligatures;\n\n  return font as Font;\n}\n\n\n","// Precision used to check determinant in quad and cubic solvers,\n// any number lower than this is considered to be zero.\n// `8.67e-19` is an example of real error occurring in tests.\nconst epsilon = 1e-16;\n\nexport interface PointLike {\n  x: number;\n  y: number;\n}\n\nexport type BytesArrayEight = [number, number, number, number, number, number, number, number];\n\nexport type Curve = [Point, Point, Point];\n\nexport class Point implements PointLike {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(point: PointLike): Point {\n    return new Point(this.x + point.x, this.y + point.y);\n  }\n\n  sub(point: PointLike): Point {\n    return new Point(this.x - point.x, this.y - point.y);\n  }\n\n  mul(multiplier: number): Point {\n    return new Point(this.x * multiplier, this.y * multiplier);\n  }\n\n  div(divider: number): Point {\n    return new Point(this.x / divider, this.y / divider);\n  }\n\n  sqr(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  dot(point: PointLike): number {\n    return this.x * point.x + this.y * point.y;\n  }\n}\n\nfunction calcPowerCoefficients(p1: Point, c1: Point, c2: Point, p2: Point): [Point, Point, Point, Point] {\n  // point(t) = p1*(1-t)^3 + c1*t*(1-t)^2 + c2*t^2*(1-t) + p2*t^3 = a*t^3 + b*t^2 + c*t + d\n  // for each t value, so\n  // a = (p2 - p1) + 3 * (c1 - c2)\n  // b = 3 * (p1 + c2) - 6 * c1\n  // c = 3 * (c1 - p1)\n  // d = p1\n  const a = p2.sub(p1).add(c1.sub(c2).mul(3));\n  const b = p1.add(c2).mul(3).sub(c1.mul(6));\n  const c = c1.sub(p1).mul(3);\n  const d = p1;\n  return [a, b, c, d]\n}\n\nfunction calcPowerCoefficientsQuad(p1: Point, c1: Point, p2: Point): [Point, Point, Point] {\n  // point(t) = p1*(1-t)^2 + c1*t*(1-t) + p2*t^2 = a*t^2 + b*t + c\n  // for each t value, so\n  // a = p1 + p2 - 2 * c1\n  // b = 2 * (c1 - p1)\n  // c = p1\n  const a = c1.mul(-2).add(p1).add(p2);\n  const b = c1.sub(p1).mul(2);\n  const c = p1;\n  return [a, b, c]\n}\n\nfunction calcPoint(a: Point, b: Point, c: Point, d: Point, t: number): Point {\n  // a*t^3 + b*t^2 + c*t + d = ((a*t + b)*t + c)*t + d\n  return a.mul(t).add(b).mul(t).add(c).mul(t).add(d);\n}\n\nfunction calcPointQuad(a: Point, b: Point, c: Point, t: number): Point {\n  // a*t^2 + b*t + c = (a*t + b)*t + c\n  return a.mul(t).add(b).mul(t).add(c);\n}\n\nfunction calcPointDerivative(a: Point, b: Point, c: Point, d: Point, t: number): Point {\n  // d/dt[a*t^3 + b*t^2 + c*t + d] = 3*a*t^2 + 2*b*t + c = (3*a*t + 2*b)*t + c\n  return a.mul(3 * t).add(b.mul(2)).mul(t).add(c)\n}\n\nfunction quadSolve(a: number, b: number, c: number): number[] {\n  // a*x^2 + b*x + c = 0\n  if (a === 0) {\n    return (b === 0) ? [] : [-c / b]\n  }\n  const D = b * b - 4 * a * c;\n  if (Math.abs(D) < epsilon) {\n    return [-b / (2 * a)]\n  } else if (D < 0) {\n    return []\n  }\n  const DSqrt = Math.sqrt(D);\n  return [(-b - DSqrt) / (2 * a), (-b + DSqrt) / (2 * a)]\n}\n\n/*\n * Calculate a distance between a `point` and a line segment `p1, p2`\n * (result is squared for performance reasons), see details here:\n * https://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\n */\nfunction minDistanceToLineSq(point: Point, p1: Point, p2: Point): number {\n  const p1p2 = p2.sub(p1);\n  const dot = point.sub(p1).dot(p1p2);\n  const lenSq = p1p2.sqr();\n  let param = 0;\n  let diff;\n  if (lenSq !== 0) param = dot / lenSq\n  if (param <= 0) {\n    diff = point.sub(p1)\n  } else if (param >= 1) {\n    diff = point.sub(p2)\n  } else {\n    diff = point.sub(p1.add(p1p2.mul(param)))\n  }\n  return diff.sqr()\n}\n\nfunction processSegment(a: Point, b: Point, c: Point, d: Point, t1: number, t2: number): [Point, Point, Point] {\n  // Find a single control point for given segment of cubic Bezier curve\n  // These control point is an interception of tangent lines to the boundary points\n  // Let's denote that f(t) is a vector function of parameter t that defines the cubic Bezier curve,\n  // f(t1) + f'(t1)*z1 is a parametric equation of tangent line to f(t1) with parameter z1\n  // f(t2) + f'(t2)*z2 is the same for point f(t2) and the vector equation\n  // f(t1) + f'(t1)*z1 = f(t2) + f'(t2)*z2 defines the values of parameters z1 and z2.\n  // Defining fx(t) and fy(t) as the x and y components of vector function f(t) respectively\n  // and solving the given system for z1 one could obtain that\n  //\n  //      -(fx(t2) - fx(t1))*fy'(t2) + (fy(t2) - fy(t1))*fx'(t2)\n  // z1 = ------------------------------------------------------.\n  //            -fx'(t1)*fy'(t2) + fx'(t2)*fy'(t1)\n  //\n  // Let's assign letter D to the denominator and note that if D = 0 it means that the curve actually\n  // is a line. Substituting z1 to the equation of tangent line to the point f(t1), one could obtain that\n  // cx = [fx'(t1)*(fy(t2)*fx'(t2) - fx(t2)*fy'(t2)) + fx'(t2)*(fx(t1)*fy'(t1) - fy(t1)*fx'(t1))]/D\n  // cy = [fy'(t1)*(fy(t2)*fx'(t2) - fx(t2)*fy'(t2)) + fy'(t2)*(fx(t1)*fy'(t1) - fy(t1)*fx'(t1))]/D\n  // where c = (cx, cy) is the control point of quadratic Bezier curve.\n\n  const f1 = calcPoint(a, b, c, d, t1);\n  const f2 = calcPoint(a, b, c, d, t2);\n  const f1_ = calcPointDerivative(a, b, c, d, t1);\n  const f2_ = calcPointDerivative(a, b, c, d, t2);\n\n  const D = -f1_.x * f2_.y + f2_.x * f1_.y;\n  if (Math.abs(D) < 1e-8) {\n    return [f1, f1.add(f2).div(2), f2]; // straight line segment\n  }\n  const cx = (f1_.x * (f2.y * f2_.x - f2.x * f2_.y) + f2_.x * (f1.x * f1_.y - f1.y * f1_.x)) / D;\n  const cy = (f1_.y * (f2.y * f2_.x - f2.x * f2_.y) + f2_.y * (f1.x * f1_.y - f1.y * f1_.x)) / D;\n  return [f1, new Point(cx, cy), f2];\n}\n\n/*\n * Divide cubic and quadratic curves into 10 points and 9 line segments.\n * Calculate distances between each point on cubic and nearest line segment\n * on quadratic (and vice versa), and make sure all distances are less\n * than `errorBound`.\n *\n * We need to calculate BOTH distance from all points on quadratic to any cubic,\n * and all points on cubic to any quadratic.\n *\n * If we do it only one way, it may lead to an error if the entire original curve\n * falls within errorBound (then **any** quad will erroneously treated as good):\n * https://github.com/fontello/svg2ttf/issues/105#issuecomment-842558027\n *\n *  - a,b,c,d define cubic curve (power coefficients)\n *  - tmin, tmax are boundary points on cubic curve (in 0-1 range)\n *  - p1, c1, p2 define quadratic curve (control points)\n *  - errorBound is maximum allowed distance\n */\nfunction isSegmentApproximationClose(a: Point, b: Point, c: Point, d: Point, tmin: number, tmax: number, p1: Point, c1: Point, p2: Point, errorBound: number): boolean {\n  const n = 10; // number of points\n  let t, dt;\n  const p = calcPowerCoefficientsQuad(p1, c1, p2);\n  const qa = p[0], qb = p[1], qc = p[2];\n  let i, j, distSq;\n  const errorBoundSq = errorBound * errorBound;\n  const cubicPoints = [];\n  const quadPoints = [];\n  let minDistSq;\n\n  dt = (tmax - tmin) / n;\n  for (i = 0, t = tmin; i <= n; i++, t += dt) {\n    cubicPoints.push(calcPoint(a, b, c, d, t));\n  }\n\n  dt = 1 / n;\n  for (i = 0, t = 0; i <= n; i++, t += dt) {\n    quadPoints.push(calcPointQuad(qa, qb, qc, t));\n  }\n\n  for (i = 1; i < cubicPoints.length - 1; i++) {\n    minDistSq = Infinity;\n    for (j = 0; j < quadPoints.length - 1; j++) {\n      distSq = minDistanceToLineSq(cubicPoints[i], quadPoints[j], quadPoints[j + 1]);\n      minDistSq = Math.min(minDistSq, distSq);\n    }\n    if (minDistSq > errorBoundSq) return false;\n  }\n\n  for (i = 1; i < quadPoints.length - 1; i++) {\n    minDistSq = Infinity;\n    for (j = 0; j < cubicPoints.length - 1; j++) {\n      distSq = minDistanceToLineSq(quadPoints[i], cubicPoints[j], cubicPoints[j + 1]);\n      minDistSq = Math.min(minDistSq, distSq);\n    }\n    if (minDistSq > errorBoundSq) return false;\n  }\n\n  return true;\n}\n\nfunction _isApproximationClose(a: Point, b: Point, c: Point, d: Point, quadCurves: Curve[], errorBound?: number): boolean {\n  const dt = 1 / quadCurves.length;\n  for (let i = 0; i < quadCurves.length; i++) {\n    const p1 = quadCurves[i][0];\n    const c1 = quadCurves[i][1];\n    const p2 = quadCurves[i][2];\n    if (!isSegmentApproximationClose(a, b, c, d, i * dt, (i + 1) * dt, p1, c1, p2, errorBound || 0)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction toFlatArray(quadsList: Curve[]): number[] {\n  const result: number[] = [];\n  result.push(quadsList[0][0].x);\n  result.push(quadsList[0][0].y);\n  for (let i = 0; i < quadsList.length; i++) {\n    result.push(quadsList[i][1].x);\n    result.push(quadsList[i][1].y);\n    result.push(quadsList[i][2].x);\n    result.push(quadsList[i][2].y);\n  }\n  return result;\n}\n\n/*\n * Split cubic bézier curve into two cubic curves, see details here:\n * https://math.stackexchange.com/questions/877725\n */\nfunction subdivideCubic(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number, t: number): [BytesArrayEight, BytesArrayEight] {\n  const u = 1 - t;\n  const v = t;\n\n  const bx = x1 * u + x2 * v;\n  const sx = x2 * u + x3 * v;\n  const fx = x3 * u + x4 * v;\n  const cx = bx * u + sx * v;\n  const ex = sx * u + fx * v;\n  const dx = cx * u + ex * v;\n\n  const by = y1 * u + y2 * v;\n  const sy = y2 * u + y3 * v;\n  const fy = y3 * u + y4 * v;\n  const cy = by * u + sy * v;\n  const ey = sy * u + fy * v;\n  const dy = cy * u + ey * v;\n\n  return [\n    [x1, y1, bx, by, cx, cy, dx, dy],\n    [dx, dy, ex, ey, fx, fy, x4, y4]\n  ];\n}\n\nfunction byNumber(x: number, y: number): number {\n  return x - y;\n}\n\n/*\n * Find inflection points on a cubic curve, algorithm is similar to this one:\n * http://www.caffeineowl.com/graphics/2d/vectorial/cubic-inflexion.html\n */\nfunction solveInflections(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number): number[] {\n  const p = -(x4 * (y1 - 2 * y2 + y3)) + x3 * (2 * y1 - 3 * y2 + y4) +\n    x1 * (y2 - 2 * y3 + y4) - x2 * (y1 - 3 * y3 + 2 * y4);\n  const q = x4 * (y1 - y2) + 3 * x3 * (-y1 + y2) + x2 * (2 * y1 - 3 * y3 + y4) - x1 * (2 * y2 - 3 * y3 + y4);\n  const r = x3 * (y1 - y2) + x1 * (y2 - y3) + x2 * (-y1 + y3);\n\n  return quadSolve(p, q, r).filter(function(t) {\n    return t > 1e-8 && t < 1 - 1e-8;\n  }).sort(byNumber);\n} // +\n\n/*\n * Approximate cubic Bezier curve defined with base points p1, p2 and control points c1, c2 with\n * with a few quadratic Bezier curves.\n * The function uses tangent method to find quadratic approximation of cubic curve segment and\n * simplified Hausdorff distance to determine number of segments that is enough to make error small.\n * In general the method is the same as described here: https://fontforge.github.io/bezier.html.\n */\nfunction _cubicToQuad(p1x: number, p1y: number, c1x: number, c1y: number, c2x: number, c2y: number, p2x: number, p2y: number, errorBound?: number) {\n  const p1 = new Point(p1x, p1y);\n  const c1 = new Point(c1x, c1y);\n  const c2 = new Point(c2x, c2y);\n  const p2 = new Point(p2x, p2y);\n  const [a, b, c, d] = calcPowerCoefficients(p1, c1, c2, p2);\n\n  let approximation: any[] = [];\n  for (let i = 1; i <= 8; i++) {\n    approximation = [];\n    for (let j = 0; j < 1; j += (1 / i)) {\n      approximation.push(processSegment(a, b, c, d, j, j + (1 / i)));\n    }\n    if (i === 1 &&\n      (approximation[0][1].sub(p1).dot(c1.sub(p1)) < 0 ||\n        approximation[0][1].sub(p2).dot(c2.sub(p2)) < 0)) {\n      // approximation concave, while the curve is convex (or vice versa)\n      continue;\n    }\n    if (_isApproximationClose(a, b, c, d, approximation, errorBound)) {\n      break;\n    }\n  }\n  return toFlatArray(approximation);\n}\n\n/*\n * If this curve has any inflection points, split the curve and call\n * _cubicToQuad function on each resulting curve.\n */\nexport function cubicToQuad(p1x: number, p1y: number, c1x: number, c1y: number, c2x: number, c2y: number, p2x: number, p2y: number, errorBound?: number): number[] {\n  const inflections = solveInflections(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n\n  if (!inflections.length) {\n    return _cubicToQuad(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, errorBound);\n  }\n\n  let result: number[] = [];\n  let curve = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  let prevPoint = 0;\n  let quad: number[];\n  let split;\n\n  for (let inflectionIdx = 0; inflectionIdx < inflections.length; inflectionIdx++) {\n    split = subdivideCubic(\n      curve[0], curve[1], curve[2], curve[3],\n      curve[4], curve[5], curve[6], curve[7],\n      // we make a new curve, so adjust inflection point accordingly\n      1 - (1 - inflections[inflectionIdx]) / (1 - prevPoint)\n    );\n\n    quad = _cubicToQuad(\n      split[0][0], split[0][1], split[0][2], split[0][3],\n      split[0][4], split[0][5], split[0][6], split[0][7],\n      errorBound\n    );\n\n    result = result.concat(quad.slice(0, -2));\n    curve = split[1];\n    prevPoint = inflections[inflectionIdx];\n  }\n\n  quad = _cubicToQuad(\n    curve[0], curve[1], curve[2], curve[3],\n    curve[4], curve[5], curve[6], curve[7],\n    errorBound\n  );\n\n  return result.concat(quad);\n}\n","export function round(value: number, precision = 10000): number {\n  return Math.round(value * precision) / precision;\n}","import { SVGPathData } from 'svg-pathdata';\nimport { Point } from '../svg-to-ttf/lib/sfnt.ts';\nimport { cubicToQuad } from '../svg-to-ttf/lib/ttf/cubic-quad.ts';\nimport { Segment, SegmentH, SegmentL, SegmentM, SegmentQ, SegmentS, SegmentV, SegmentZ } from '../types';\nimport { round } from '../utils/round.ts';\n\nexport function pathToSegments(pathData: SVGPathData, accuracy = 0.3): Segment[] {\n  pathData = pathData.toAbs().aToC().normalizeST();\n  let lastX = 0;\n  let lastY = 0;\n  let contourStartX = 0;\n  let contourStartY = 0;\n  const segments: Segment[] = [];\n\n  for (let i = 0; i < pathData.commands.length; i++) {\n    const command = pathData.commands[i];\n\n    switch (command.type) {\n      case SVGPathData.MOVE_TO: {\n        lastX = command.x;\n        lastY = command.y;\n        contourStartX = lastX;\n        contourStartY = lastY;\n\n        segments.push(['M', command.x, command.y] as SegmentM);\n        break;\n      }\n      case SVGPathData.VERT_LINE_TO: {\n        lastY = command.y;\n        segments.push(['V', command.y] as SegmentV);\n        break;\n      }\n      case SVGPathData.HORIZ_LINE_TO: {\n        lastX = command.x;\n        segments.push(['H', command.x] as SegmentH);\n        break;\n      }\n      case SVGPathData.LINE_TO: {\n        lastX = command.x;\n        lastY = command.y;\n        segments.push(['L', command.x, command.y] as SegmentL);\n        break;\n      }\n      case SVGPathData.CURVE_TO: {\n        const quadCurves = cubicToQuad(\n          lastX, lastY,\n          command.x1, command.y1,\n          command.x2, command.y2,\n          command.x, command.y,\n          accuracy,\n        );\n        lastX = command.x;\n        lastY = command.y;\n\n        for (let i = 2; i < quadCurves.length; i += 4) {\n          segments.push(['Q', quadCurves[i], quadCurves[i + 1], quadCurves[i + 2], quadCurves[i + 3]]);\n\n          lastX = quadCurves[i + 2];\n          lastY = quadCurves[i + 3];\n        }\n\n        break;\n      }\n      case SVGPathData.QUAD_TO: {\n        segments.push(['Q', command.x, command.y, command.x1, command.y1] as SegmentQ);\n        lastX = command.x1;\n        lastY = command.y1;\n        break;\n      }\n      case SVGPathData.CLOSE_PATH: {\n        lastX = contourStartX;\n        lastY = contourStartY;\n        segments.push(['Z'] as SegmentZ);\n        break;\n      }\n      default:\n        throw new Error(`Type ${command.type} not implemented`);\n    }\n  }\n\n  return segments;\n}\n\nexport function svgPathToContour(pathData: SVGPathData, accuracy = 0.3): Point[][] {\n  pathData = pathData.toAbs().aToC().normalizeST();\n  let lastX = 0;\n  let lastY = 0;\n  let contourStartX = 0;\n  let contourStartY = 0;\n  const segments: Segment[] = [];\n\n  const contours: Point[][] = [];\n  let contour: Point[] = [];\n\n\n  for (let i = 0; i < pathData.commands.length; i++) {\n    const command = pathData.commands[i];\n\n    if (i === 0 || command.type === SVGPathData.MOVE_TO) {\n      contour = [];\n      contours.push(contour);\n    }\n\n    switch (command.type) {\n      case SVGPathData.MOVE_TO: {\n        segments.push(['M', command.x, command.y] as SegmentM);\n        contour.push({ x: command.x, y: command.y, onCurve: true });\n\n        lastX = command.x;\n        lastY = command.y;\n        contourStartX = lastX;\n        contourStartY = lastY;\n        break;\n      }\n      case SVGPathData.VERT_LINE_TO: {\n        segments.push(['V', command.y] as SegmentV);\n        contour.push({ x: lastX, y: command.y, onCurve: true });\n\n        lastY = command.y;\n        break;\n      }\n      case SVGPathData.HORIZ_LINE_TO: {\n        segments.push(['H', command.x] as SegmentH);\n        contour.push({ x: command.x, y: lastY, onCurve: true });\n\n        lastX = command.x;\n        break;\n      }\n      case SVGPathData.LINE_TO: {\n        segments.push(['L', command.x, command.y] as SegmentL);\n        contour.push({ x: command.x, y: command.y, onCurve: true });\n\n        lastX = command.x;\n        lastY = command.y;\n        break;\n      }\n      case SVGPathData.CURVE_TO: {\n        const quadCurves = cubicToQuad(\n          lastX, lastY,\n          command.x1, command.y1,\n          command.x2, command.y2,\n          command.x, command.y,\n          accuracy,\n        );\n        lastX = command.x;\n        lastY = command.y;\n\n        for (let i = 2; i < quadCurves.length; i += 4) {\n          segments.push(['Q', quadCurves[i], quadCurves[i + 1], quadCurves[i + 2], quadCurves[i + 3]]);\n\n          contour.push({ x: round(quadCurves[i]), y: round(quadCurves[i + 1]), onCurve: false });\n          contour.push({ x: round(quadCurves[i + 2]), y: round(quadCurves[i + 3]), onCurve: true });\n\n          lastX = quadCurves[i + 2];\n          lastY = quadCurves[i + 3];\n        }\n\n        break;\n      }\n      case SVGPathData.QUAD_TO: {\n        segments.push(['Q', command.x1, command.y1, command.x, command.y] as SegmentQ);\n\n        contour.push({ x: command.x1, y: command.y1, onCurve: false });\n        contour.push({ x: command.x, y: command.y, onCurve: true });\n\n        lastX = command.x1;\n        lastY = command.y1;\n        break;\n      }\n      case SVGPathData.CLOSE_PATH: {\n        lastX = contourStartX;\n        lastY = contourStartY;\n        segments.push(['Z'] as SegmentZ);\n        break;\n      }\n      default:\n        throw new Error(`Type ${command.type} not implemented`);\n    }\n  }\n\n  return contours;\n}\n\n// export function svgPathToContour(pathData: SVGPathData, accuracy = 0.3): Point[][] {\n//   const segments = pathToSegments(pathData, accuracy);\n//   const resContours: Point[][] = [];\n//   let resContour: Point[] = [];\n//\n//   let lastX = 0;\n//   let lastY = 0;\n//   let contourStartX = 0;\n//   let contourStartY = 0;\n//\n//   const contours: Point[] = [];\n//   for (let i = 0; i < segments.length; i++) {\n//     const segment = segments[i];\n//\n//     // Start new contour\n//     if (i === 0 || segment[0] === 'M') {\n//       resContour = [];\n//       resContours.push(resContour);\n//     }\n//     const name = segment[0];\n//\n//\n//     if (name === 'Q') {\n//       resContour.push({ x: segment[1], y: segment[2], onCurve: false });\n//     }\n//\n//     if (name === 'H') {\n//       resContour.push({ x: segment[1], y: lastY, onCurve: true });\n//     } else if (name === 'V') {\n//       resContour.push({ x: lastX, y: segment[1], onCurve: true });\n//     } else if (name !== 'Z') {\n//       resContour.push({ x: segment[segment.length - 2] as number, y: segment[segment.length - 1] as number, onCurve: true });\n//     }\n//\n//   }\n//\n//   return [contours];\n// }","import { SVGPathData } from 'svg-pathdata';\nimport * as sfnt from './lib/sfnt.ts';\nimport { ucs2encode } from './lib/ucs2.ts';\nimport { generateTTF } from './lib/ttf.ts';\nimport ByteBuffer from 'microbuffer';\nimport { load } from './lib/svg.ts';\nimport { svgPathToContour } from '../svg-helpers/svg-path-to-contour.ts';\n\nconst VERSION_RE = /^(Version )?(\\d+[.]\\d+)$/i;\n\ninterface Options {\n  id?: string;\n  familyname?: string;\n  copyright?: string;\n  description?: string;\n  url?: string;\n  subfamilyname?: string;\n  fullname?: string;\n  version?: string;\n  ts?: string;\n}\n\nexport function svg2ttf(svgString: string, options?: Options): ByteBuffer {\n  const font = new sfnt.Font();\n  const svgFont = load(svgString);\n\n  options = options || {};\n\n  font.id = options.id || svgFont.id;\n  font.familyName = options.familyname || svgFont.familyName || svgFont.id;\n  font.copyright = options.copyright || svgFont.metadata || '';\n  font.description = options.description || 'Generated by svg2ttf from Fontello project.';\n  font.url = options.url || 'http://fontello.com';\n  font.sfntNames.push({ id: 2, value: options.subfamilyname || svgFont.subfamilyName || 'Regular' });\n  font.sfntNames.push({ id: 4, value: options.fullname || svgFont.id });\n\n  let versionString = options.version || 'Version 1.0';\n\n  if (typeof versionString !== 'string') {\n    throw new Error('svg2ttf: version option should be a string');\n  }\n  if (!VERSION_RE.test(versionString)) {\n    throw new Error('svg2ttf: invalid option, version - \"' + options.version + '\"');\n  }\n\n  versionString = 'Version ' + versionString.match(VERSION_RE)![2];\n  font.sfntNames.push({ id: 5, value: versionString });\n  font.sfntNames.push({ id: 6, value: (options.fullname || svgFont.id).replace(/[\\s\\(\\)\\[\\]<>%\\/]/g, '').slice(0, 62) });\n\n  if (typeof options.ts !== 'undefined') {\n    font.createdDate = font.modifiedDate = new Date(parseInt(options.ts, 10) * 1000);\n  }\n\n  font.unitsPerEm = svgFont.unitsPerEm || 1000;\n  font.horizOriginX = svgFont.horizOriginX || 0;\n  font.horizOriginY = svgFont.horizOriginY || 0;\n  font.vertOriginX = svgFont.vertOriginX || 0;\n  font.vertOriginY = svgFont.vertOriginY || 0;\n  font.width = svgFont.width || svgFont.unitsPerEm;\n  font.height = svgFont.height || svgFont.unitsPerEm;\n  font.descent = !isNaN(svgFont.descent) ? svgFont.descent : -font.vertOriginY;\n  font.ascent = svgFont.ascent || (font.unitsPerEm - font.vertOriginY);\n  font.capHeight = svgFont.capHeight || 0;\n  font.xHeight = svgFont.xHeight || 0;\n\n  if (typeof svgFont.weightClass !== 'undefined') {\n    const wght = parseInt(svgFont.weightClass as string, 10);\n\n    if (!isNaN(wght)) {\n      font.weightClass = wght\n    }\n    else {\n      if (svgFont.weightClass === 'normal') font.weightClass = 400;\n      if (svgFont.weightClass === 'bold') font.weightClass = 700;\n    }\n  }\n\n  if (svgFont.underlinePosition != null) {\n    font.underlinePosition = svgFont.underlinePosition;\n  }\n  if (svgFont.underlineThickness != null) {\n    font.underlineThickness = svgFont.underlineThickness;\n  }\n\n  const glyphs: sfnt.Glyph[] = font.glyphs;\n  const codePoints: { [key: number]: sfnt.Glyph } = font.codePoints;\n  const ligatures: { ligature: string; unicode: number[]; glyph: sfnt.Glyph }[] = font.ligatures;\n\n  function addCodePoint(codePoint: number, glyph: sfnt.Glyph): boolean {\n    if (codePoints[codePoint]) {\n      return false;\n    }\n    codePoints[codePoint] = glyph;\n    return true;\n  }\n\n  svgFont.glyphs.forEach(svgGlyph => {\n    const glyph = new sfnt.Glyph();\n\n    glyph.name = svgGlyph.name;\n    glyph.codes = svgGlyph.ligatureCodes || svgGlyph.unicode;\n    glyph.d = svgGlyph.d;\n    glyph.height = !isNaN(svgGlyph.height) ? svgGlyph.height : font.height;\n    glyph.width = !isNaN(svgGlyph.width) ? svgGlyph.width : font.width;\n    glyphs.push(glyph);\n\n    (svgGlyph as any).sfntGlyph = glyph;\n\n    svgGlyph.unicode.forEach(codePoint => {\n      addCodePoint(codePoint, glyph);\n    });\n  });\n\n  let missingGlyph: sfnt.Glyph;\n\n  if (svgFont.missingGlyph) {\n    missingGlyph = new sfnt.Glyph();\n    missingGlyph.d = svgFont.missingGlyph.d!;\n    missingGlyph.height = (!isNaN(svgFont.missingGlyph.height!) ? svgFont.missingGlyph.height : font.height)!;\n    missingGlyph.width = (!isNaN(svgFont.missingGlyph.width!) ? svgFont.missingGlyph.width : font.width)!;\n  } else {\n    missingGlyph = glyphs.find(glyph => glyph.name === '.notdef')!;\n  }\n  if (!missingGlyph) {\n    missingGlyph = new sfnt.Glyph();\n  }\n\n  svgFont.ligatures.forEach(svgLigature => {\n    const ligature = {\n      ligature: svgLigature.ligature,\n      unicode: svgLigature.unicode,\n      glyph: (svgLigature.glyph as any).sfntGlyph\n    };\n\n    ligature.unicode.forEach(charPoint => {\n      const glyph = new sfnt.Glyph();\n      const added = addCodePoint(charPoint, glyph);\n\n      if (added) {\n        glyph.name = ucs2encode([charPoint]);\n        glyphs.push(glyph);\n      }\n    });\n    ligatures.push(ligature);\n  });\n\n  if (glyphs.indexOf(missingGlyph) !== -1) {\n    glyphs.splice(glyphs.indexOf(missingGlyph), 1);\n  }\n  glyphs.unshift(missingGlyph);\n\n  let nextID = 0;\n\n  glyphs.forEach(glyph => {\n    glyph.id = nextID;\n    nextID++;\n  });\n\n  glyphs.forEach(glyph => {\n    const glyphSize = Math.max(glyph.width, glyph.height);\n    const accuracy = (glyphSize > 500) ? 0.3 : glyphSize * 0.0006;\n\n    const svgPath = new SVGPathData(glyph.d);\n    const sfntContours = svgPathToContour(svgPath, accuracy);\n\n    glyph.contours = sfntContours.map(sfntContour => {\n      const contour = new sfnt.Contour();\n\n      contour.points = sfntContour.map(sfntPoint => {\n        const point = new sfnt.Point();\n\n        point.x = sfntPoint.x;\n        point.y = sfntPoint.y;\n        point.onCurve = sfntPoint.onCurve;\n        return point;\n      });\n\n      return contour;\n    });\n  });\n\n  return generateTTF(font);\n}\n","import { Buffer } from 'node:buffer';\nimport { SymbolMetadata } from '../../types/types.ts';\nimport { generateFontSvg } from '../font-svg/font-svg.ts';\nimport { AppConfig } from '../../types';\nimport { svg2ttf } from '../../svg-to-ttf'\n\nexport async function generateFontTtfBySvg(fontSvg: string) {\n  const ttfFont = svg2ttf(fontSvg);\n\n  return Buffer.from(ttfFont.buffer);\n}\n\nexport async function generateFontTtf(config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]): Promise<Buffer> {\n  const fontSvg = await generateFontSvg(config, files);\n\n  return generateFontTtfBySvg(fontSvg);\n}","/*\n    Author: Viktor Semykin <thesame.ml@gmail.com>\n\n    Written for fontello.com project.\n*/\n\n'use strict'\n\n/**\n * Offsets in EOT file structure. Refer to EOTPrefix in OpenTypeUtilities.cpp\n */\nvar EOT_OFFSET = {\n  LENGTH: 0,\n  FONT_LENGTH: 4,\n  VERSION: 8,\n  CHARSET: 26,\n  MAGIC: 34,\n  FONT_PANOSE: 16,\n  ITALIC: 27,\n  WEIGHT: 28,\n  UNICODE_RANGE: 36,\n  CODEPAGE_RANGE: 52,\n  CHECKSUM_ADJUSTMENT: 60\n}\n\n/**\n * Offsets in different SFNT (TTF) structures. See OpenTypeUtilities.cpp\n */\nvar SFNT_OFFSET = {\n  // sfntHeader:\n  NUMTABLES: 4,\n\n  // TableDirectoryEntry\n  TABLE_TAG: 0,\n  TABLE_OFFSET: 8,\n  TABLE_LENGTH: 12,\n\n  // OS2Table\n  OS2_WEIGHT: 4,\n  OS2_FONT_PANOSE: 32,\n  OS2_UNICODE_RANGE: 42,\n  OS2_FS_SELECTION: 62,\n  OS2_CODEPAGE_RANGE: 78,\n\n  // headTable\n  HEAD_CHECKSUM_ADJUSTMENT: 8,\n\n  // nameTable\n  NAMETABLE_FORMAT: 0,\n  NAMETABLE_COUNT: 2,\n  NAMETABLE_STRING_OFFSET: 4,\n\n  // nameRecord\n  NAME_PLATFORM_ID: 0,\n  NAME_ENCODING_ID: 2,\n  NAME_LANGUAGE_ID: 4,\n  NAME_NAME_ID: 6,\n  NAME_LENGTH: 8,\n  NAME_OFFSET: 10\n}\n\n/**\n * Sizes of structures\n */\nvar SIZEOF = {\n  SFNT_TABLE_ENTRY: 16,\n  SFNT_HEADER: 12,\n  SFNT_NAMETABLE: 6,\n  SFNT_NAMETABLE_ENTRY: 12,\n  EOT_PREFIX: 82\n}\n\n/**\n * Magic numbers\n */\nvar MAGIC = {\n  EOT_VERSION: 0x00020001,\n  EOT_MAGIC: 0x504c,\n  EOT_CHARSET: 1,\n  LANGUAGE_ENGLISH: 0x0409\n}\n\n/**\n * Utility function to convert buffer of utf16be chars to buffer of utf16le\n * chars prefixed with length and suffixed with zero\n */\nfunction strbuf (str) {\n  var arr = Buffer.alloc(str.length + 4)\n\n  arr.writeUint16LE(str.length, 0)\n\n  for (var i = 0; i < str.length; i += 2) {\n    arr.writeUint16LE(str.readUint16BE(i), i + 2)\n  }\n\n  arr.writeUint16LE(0, arr.length - 2)\n\n  return arr\n}\n\n// Takes TTF font on input and returns Uint8Array with EOT font\n//\n// Params:\n//\n// - arr(Uint8Array)\n//\nfunction ttf2eot (arr) {\n  arr = Buffer.from(arr.buffer, arr.byteOffset, arr.length)\n\n  var out = Buffer.alloc(SIZEOF.EOT_PREFIX, 0)\n  var i, j\n\n  out.writeUint32LE(arr.length, EOT_OFFSET.FONT_LENGTH)\n  out.writeUint32LE(MAGIC.EOT_VERSION, EOT_OFFSET.VERSION)\n  out.writeUint8(MAGIC.EOT_CHARSET, EOT_OFFSET.CHARSET)\n  out.writeUint16LE(MAGIC.EOT_MAGIC, EOT_OFFSET.MAGIC)\n\n  var familyName = Buffer.of(0)\n  var subfamilyName = Buffer.of(0)\n  var fullName = Buffer.of(0)\n  var versionString = Buffer.of(0)\n\n  var haveOS2 = false\n  var haveName = false\n  var haveHead = false\n\n  var numTables = arr.readUint16BE(SFNT_OFFSET.NUMTABLES)\n\n  for (i = 0; i < numTables; ++i) {\n    var data = arr.subarray(SIZEOF.SFNT_HEADER + i * SIZEOF.SFNT_TABLE_ENTRY)\n    var tableEntry = {\n      tag: String.fromCharCode.apply(null, data.subarray(SFNT_OFFSET.TABLE_TAG, SFNT_OFFSET.TABLE_TAG + 4)),\n      offset: data.readUint32BE(SFNT_OFFSET.TABLE_OFFSET),\n      length: data.readUint32BE(SFNT_OFFSET.TABLE_LENGTH)\n    }\n\n    var table = arr.subarray(tableEntry.offset, tableEntry.offset + tableEntry.length)\n\n    if (tableEntry.tag === 'OS/2') {\n      haveOS2 = true\n      var OS2Version = table.readUint16BE()\n\n      for (j = 0; j < 10; ++j) {\n        out.writeUint8(table.readUint8(SFNT_OFFSET.OS2_FONT_PANOSE + j), EOT_OFFSET.FONT_PANOSE + j)\n      }\n\n      out.writeUint8(table.readUint16BE(SFNT_OFFSET.OS2_FS_SELECTION) & 0x01, EOT_OFFSET.ITALIC)\n      out.writeUint32LE(table.readUint16BE(SFNT_OFFSET.OS2_WEIGHT), EOT_OFFSET.WEIGHT)\n\n      for (j = 0; j < 4; ++j) {\n        out.writeUint32LE(table.readUint32BE(SFNT_OFFSET.OS2_UNICODE_RANGE + j * 4),\n          EOT_OFFSET.UNICODE_RANGE + j * 4)\n      }\n\n      if (OS2Version >= 1) {\n        for (j = 0; j < 2; ++j) {\n          out.writeUint32LE(table.readUint32BE(SFNT_OFFSET.OS2_CODEPAGE_RANGE + j * 4),\n            EOT_OFFSET.CODEPAGE_RANGE + j * 4)\n        }\n      }\n\n    } else if (tableEntry.tag === 'head') {\n\n      haveHead = true\n      out.writeUint32LE(table.readUint32BE(SFNT_OFFSET.HEAD_CHECKSUM_ADJUSTMENT), EOT_OFFSET.CHECKSUM_ADJUSTMENT)\n\n    } else if (tableEntry.tag === 'name') {\n\n      haveName = true\n\n      var nameTable = {\n        format: table.readUint16BE(SFNT_OFFSET.NAMETABLE_FORMAT),\n        count: table.readUint16BE(SFNT_OFFSET.NAMETABLE_COUNT),\n        stringOffset: table.readUint16BE(SFNT_OFFSET.NAMETABLE_STRING_OFFSET)\n      }\n\n      for (j = 0; j < nameTable.count; ++j) {\n        var nameRecord = table.subarray(SIZEOF.SFNT_NAMETABLE + j * SIZEOF.SFNT_NAMETABLE_ENTRY)\n        var name = {\n          platformID: nameRecord.readUint16BE(SFNT_OFFSET.NAME_PLATFORM_ID),\n          encodingID: nameRecord.readUint16BE(SFNT_OFFSET.NAME_ENCODING_ID),\n          languageID: nameRecord.readUint16BE(SFNT_OFFSET.NAME_LANGUAGE_ID),\n          nameID: nameRecord.readUint16BE(SFNT_OFFSET.NAME_NAME_ID),\n          length: nameRecord.readUint16BE(SFNT_OFFSET.NAME_LENGTH),\n          offset: nameRecord.readUint16BE(SFNT_OFFSET.NAME_OFFSET)\n        }\n\n        if (name.platformID === 3 && name.encodingID === 1 && name.languageID === MAGIC.LANGUAGE_ENGLISH) {\n          var s = strbuf(table.subarray(\n            nameTable.stringOffset + name.offset,\n            nameTable.stringOffset + name.offset + name.length))\n\n          switch (name.nameID) {\n            case 1:\n              familyName = s\n              break\n            case 2:\n              subfamilyName = s\n              break\n            case 4:\n              fullName = s\n              break\n            case 5:\n              versionString = s\n              break\n          }\n        }\n      }\n    }\n    if (haveOS2 && haveName && haveHead) { break }\n  }\n\n  if (!(haveOS2 && haveName && haveHead)) {\n    throw new Error('Required section not found')\n  }\n\n  // Create final buffer with the the same array type as input one.\n  var eot = Buffer.concat([\n    out,\n    familyName,\n    subfamilyName,\n    versionString,\n    fullName,\n    Buffer.from([0, 0]),\n    arr\n  ])\n\n  eot.writeUint32LE(eot.length, EOT_OFFSET.LENGTH) // Calculate overall length\n\n  return new Uint8Array(eot.buffer, eot.byteOffset, eot.length)\n}\n\nmodule.exports = ttf2eot\n","import { SymbolMetadata } from '../../types/types.ts';\nimport ttf2eot from 'ttf2eot';\nimport { Buffer } from 'node:buffer';\nimport { generateFontTtf } from '../font-ttf/font-ttf.js';\nimport { AppConfig } from '../../types/app-config.ts';\n\nexport async function generateFontEotByTtf(fontTtf: Buffer): Promise<Buffer> {\n  return ttf2eot(fontTtf);\n}\n\nexport async function generateFontEot(config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]): Promise<Buffer> {\n  const fontTtf = await generateFontTtf(config, files);\n\n  return await generateFontEotByTtf(fontTtf);\n}","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","/*\n    Author: Viktor Semykin <thesame.ml@gmail.com>\n\n    Written for fontello.com project.\n*/\n\n'use strict';\n\n\nvar deflate = require('pako/lib/deflate.js').deflate;\n\n\nfunction ulong(t) {\n  /* eslint-disable no-bitwise */\n  t &= 0xffffffff;\n  if (t < 0) {\n    t += 0x100000000;\n  }\n  return t;\n}\n\nfunction longAlign(n) {\n  /* eslint-disable no-bitwise */\n  return (n + 3) & ~3;\n}\n\nfunction calc_checksum(buf) {\n  var sum = 0;\n  var nlongs = buf.length / 4;\n\n  for (var i = 0; i < nlongs; ++i) {\n    var t = buf.readUint32BE(i * 4);\n\n    sum = ulong(sum + t);\n  }\n  return sum;\n}\n\nvar WOFF_OFFSET = {\n  MAGIC: 0,\n  FLAVOR: 4,\n  SIZE: 8,\n  NUM_TABLES: 12,\n  RESERVED: 14,\n  SFNT_SIZE: 16,\n  VERSION_MAJ: 20,\n  VERSION_MIN: 22,\n  META_OFFSET: 24,\n  META_LENGTH: 28,\n  META_ORIG_LENGTH: 32,\n  PRIV_OFFSET: 36,\n  PRIV_LENGTH: 40\n};\n\nvar WOFF_ENTRY_OFFSET = {\n  TAG: 0,\n  OFFSET: 4,\n  COMPR_LENGTH: 8,\n  LENGTH: 12,\n  CHECKSUM: 16\n};\n\nvar SFNT_OFFSET = {\n  TAG: 0,\n  CHECKSUM: 4,\n  OFFSET: 8,\n  LENGTH: 12\n};\n\nvar SFNT_ENTRY_OFFSET = {\n  FLAVOR: 0,\n  VERSION_MAJ: 4,\n  VERSION_MIN: 6,\n  CHECKSUM_ADJUSTMENT: 8\n};\n\nvar MAGIC = {\n  WOFF: 0x774F4646,\n  CHECKSUM_ADJUSTMENT: 0xB1B0AFBA\n};\n\nvar SIZEOF = {\n  WOFF_HEADER: 44,\n  WOFF_ENTRY: 20,\n  SFNT_HEADER: 12,\n  SFNT_TABLE_ENTRY: 16\n};\n\nfunction woffAppendMetadata(src, metadata) {\n\n  var zdata =  deflate(metadata);\n\n  src.writeUint32BE(src.length + zdata.length, WOFF_OFFSET.SIZE);\n  src.writeUint32BE(src.length, WOFF_OFFSET.META_OFFSET);\n  src.writeUint32BE(zdata.length, WOFF_OFFSET.META_LENGTH);\n  src.writeUint32BE(metadata.length, WOFF_OFFSET.META_ORIG_LENGTH);\n\n  return Buffer.concat([ src, zdata ]);\n}\n\nfunction ttf2woff(arr, options) {\n  arr = Buffer.from(arr.buffer, arr.byteOffset, arr.length);\n\n  options = options || {};\n\n  var version = {\n    maj: 0,\n    min: 1\n  };\n  var numTables = arr.readUint16BE(4);\n  //var sfntVersion = arr.readUint32BE(0);\n  var flavor = 0x10000;\n\n  var woffHeader = Buffer.alloc(SIZEOF.WOFF_HEADER);\n\n  woffHeader.writeUint32BE(MAGIC.WOFF, WOFF_OFFSET.MAGIC);\n  woffHeader.writeUint16BE(numTables, WOFF_OFFSET.NUM_TABLES);\n  woffHeader.writeUint16BE(0, WOFF_OFFSET.RESERVED);\n  woffHeader.writeUint32BE(0, WOFF_OFFSET.SFNT_SIZE);\n  woffHeader.writeUint32BE(0, WOFF_OFFSET.META_OFFSET);\n  woffHeader.writeUint32BE(0, WOFF_OFFSET.META_LENGTH);\n  woffHeader.writeUint32BE(0, WOFF_OFFSET.META_ORIG_LENGTH);\n  woffHeader.writeUint32BE(0, WOFF_OFFSET.PRIV_OFFSET);\n  woffHeader.writeUint32BE(0, WOFF_OFFSET.PRIV_LENGTH);\n\n  var entries = [];\n\n  var i, tableEntry;\n\n  for (i = 0; i < numTables; ++i) {\n    var data = arr.subarray(SIZEOF.SFNT_HEADER + i * SIZEOF.SFNT_TABLE_ENTRY);\n\n    tableEntry = {\n      Tag: data.subarray(SFNT_OFFSET.TAG, SFNT_OFFSET.TAG + 4),\n      checkSum: data.readUint32BE(SFNT_OFFSET.CHECKSUM),\n      Offset: data.readUint32BE(SFNT_OFFSET.OFFSET),\n      Length: data.readUint32BE(SFNT_OFFSET.LENGTH)\n    };\n    entries.push (tableEntry);\n  }\n  entries = entries.sort(function (a, b) {\n    var aStr = String.fromCharCode.apply(null, a.Tag);\n    var bStr = String.fromCharCode.apply(null, b.Tag);\n\n    return aStr === bStr ? 0 : aStr < bStr ? -1 : 1;\n  });\n\n  var offset = SIZEOF.WOFF_HEADER + numTables * SIZEOF.WOFF_ENTRY;\n  var woffSize = offset;\n  var sfntSize = SIZEOF.SFNT_HEADER + numTables * SIZEOF.SFNT_TABLE_ENTRY;\n\n  var tableBuf = Buffer.alloc(numTables * SIZEOF.WOFF_ENTRY);\n\n  for (i = 0; i < numTables; ++i) {\n    tableEntry = entries[i];\n\n    if (String.fromCharCode.apply(null, tableEntry.Tag) !== 'head') {\n      var algntable = arr.subarray(tableEntry.Offset, tableEntry.Offset + longAlign(tableEntry.Length));\n\n      if (calc_checksum(algntable) !== tableEntry.checkSum) {\n        throw 'Checksum error in ' + String.fromCharCode.apply(null, tableEntry.Tag);\n      }\n    }\n\n    tableBuf.writeUint32BE(tableEntry.Tag.readUint32BE(0), i * SIZEOF.WOFF_ENTRY + WOFF_ENTRY_OFFSET.TAG);\n    tableBuf.writeUint32BE(tableEntry.Length, i * SIZEOF.WOFF_ENTRY + WOFF_ENTRY_OFFSET.LENGTH);\n    tableBuf.writeUint32BE(tableEntry.checkSum, i * SIZEOF.WOFF_ENTRY + WOFF_ENTRY_OFFSET.CHECKSUM);\n    sfntSize += longAlign(tableEntry.Length);\n  }\n\n  var sfntOffset = SIZEOF.SFNT_HEADER + entries.length * SIZEOF.SFNT_TABLE_ENTRY;\n  var csum = calc_checksum(arr.subarray(0, SIZEOF.SFNT_HEADER));\n\n  for (i = 0; i < entries.length; ++i) {\n    tableEntry = entries[i];\n\n    var b = Buffer.alloc(SIZEOF.SFNT_TABLE_ENTRY);\n\n    b.writeUint32BE(tableEntry.Tag.readUint32BE(0), SFNT_OFFSET.TAG);\n    b.writeUint32BE(tableEntry.checkSum, SFNT_OFFSET.CHECKSUM);\n    b.writeUint32BE(sfntOffset, SFNT_OFFSET.OFFSET);\n    b.writeUint32BE(tableEntry.Length, SFNT_OFFSET.LENGTH);\n    sfntOffset += longAlign(tableEntry.Length);\n    csum += calc_checksum(b);\n    csum += tableEntry.checkSum;\n  }\n\n  var checksumAdjustment = ulong(MAGIC.CHECKSUM_ADJUSTMENT - csum);\n\n  var len, woffDataChains = [];\n\n  for (i = 0; i < entries.length; ++i) {\n    tableEntry = entries[i];\n\n    var sfntData = arr.subarray(tableEntry.Offset, tableEntry.Offset + tableEntry.Length);\n\n    if (String.fromCharCode.apply(null, tableEntry.Tag) === 'head') {\n      version.maj = sfntData.readUint16BE(SFNT_ENTRY_OFFSET.VERSION_MAJ);\n      version.min = sfntData.readUint16BE(SFNT_ENTRY_OFFSET.VERSION_MIN);\n      flavor = sfntData.readUint32BE(SFNT_ENTRY_OFFSET.FLAVOR);\n      sfntData.writeUint32BE(checksumAdjustment, SFNT_ENTRY_OFFSET.CHECKSUM_ADJUSTMENT);\n    }\n\n    var res = deflate(sfntData);\n\n    var compLength;\n\n    // We should use compression only if it really save space (standard requirement).\n    // Also, data should be aligned to long (with zeros?).\n    compLength = Math.min(res.length, sfntData.length);\n    len = longAlign(compLength);\n\n    var woffData = Buffer.alloc(len, 0);\n\n    if (res.length >= sfntData.length) {\n      woffData.set(sfntData);\n    } else {\n      woffData.set(res);\n    }\n\n    tableBuf.writeUint32BE(offset, i * SIZEOF.WOFF_ENTRY + WOFF_ENTRY_OFFSET.OFFSET);\n\n    offset += woffData.length;\n    woffSize += woffData.length;\n\n    tableBuf.writeUint32BE(compLength, i * SIZEOF.WOFF_ENTRY + WOFF_ENTRY_OFFSET.COMPR_LENGTH);\n\n    woffDataChains.push(woffData);\n  }\n\n  woffHeader.writeUint32BE(woffSize, WOFF_OFFSET.SIZE);\n  woffHeader.writeUint32BE(sfntSize, WOFF_OFFSET.SFNT_SIZE);\n  woffHeader.writeUint16BE(version.maj, WOFF_OFFSET.VERSION_MAJ);\n  woffHeader.writeUint16BE(version.min, WOFF_OFFSET.VERSION_MIN);\n  woffHeader.writeUint32BE(flavor, WOFF_OFFSET.FLAVOR);\n\n  var out = Buffer.alloc(woffSize);\n  var pos = 0;\n\n  out.set(woffHeader, pos);\n  pos += woffHeader.length;\n\n  out.set(tableBuf, pos);\n  pos += tableBuf.length;\n\n  for (i = 0; i < woffDataChains.length; i++) {\n    out.set(woffDataChains[i], pos);\n    pos += woffDataChains[i].length;\n  }\n\n  if (options.metadata) {\n    out = woffAppendMetadata(out, options.metadata);\n  }\n\n  return new Uint8Array(out.buffer, out.byteOffset, out.length);\n}\n\nmodule.exports = ttf2woff;\n","import { SymbolMetadata } from '../../types/types.ts';\nimport ttf2woff from 'ttf2woff';\nimport { Buffer } from 'node:buffer';\nimport { generateFontTtf } from '../font-ttf/font-ttf.js';\nimport { AppConfig } from '../../types/app-config.ts';\n\nexport async function generateFontWoffByTtf(fontTtf: Buffer): Promise<Buffer> {\n  return ttf2woff(fontTtf);\n}\n\nexport async function generateFontWoff(config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]): Promise<Buffer> {\n  const fontTtf = await generateFontTtf(config, files);\n\n  return await generateFontWoffByTtf(fontTtf);\n}","var Module=typeof Module!==\"undefined\"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;var toLog=e;err(\"exiting due to exception: \"+toLog)}var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString()}if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};readAsync=function readAsync(filename,onload,onerror){var ret=tryParseAsDataURI(filename);if(ret){onload(ret)}if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);nodeFS[\"readFile\"](filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}quit_=function(status,toThrow){if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"t\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"v\"];addOnInit(Module[\"asm\"][\"u\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.includes(\"unsigned\");registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return Emval.toHandle(v)}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _exit(status){exit(status)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,\"base64\");return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmLibraryArg={\"f\":___cxa_allocate_exception,\"e\":___cxa_throw,\"n\":__embind_register_bigint,\"i\":__embind_register_bool,\"r\":__embind_register_emval,\"g\":__embind_register_float,\"s\":__embind_register_function,\"b\":__embind_register_integer,\"a\":__embind_register_memory_view,\"d\":__embind_register_std_string,\"c\":__embind_register_std_wstring,\"j\":__embind_register_void,\"l\":__emval_decref,\"m\":__emval_incref,\"h\":__emval_take_value,\"q\":_abort,\"o\":_emscripten_memcpy_big,\"p\":_emscripten_resize_heap,\"k\":_exit};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){EXITSTATUS=status;if(keepRuntimeAlive()){}else{exitRuntime()}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n","'use strict'\n\nconst em_module = require('./build/compress_binding.js')\n\nconst runtimeInit = new Promise(resolve => {\n  em_module.onRuntimeInitialized = resolve\n})\n\nmodule.exports = async function compress (buffer) {\n  await runtimeInit\n  const result = em_module.compress(buffer)\n  if (result === false) throw new Error('ConvertTTFToWOFF2 failed')\n  return result\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;var toLog=e;err(\"exiting due to exception: \"+toLog)}var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString()}if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};readAsync=function readAsync(filename,onload,onerror){var ret=tryParseAsDataURI(filename);if(ret){onload(ret)}if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);nodeFS[\"readFile\"](filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}quit_=function(status,toThrow){if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"s\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"u\"];addOnInit(Module[\"asm\"][\"t\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.includes(\"unsigned\");registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return Emval.toHandle(v)}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,\"base64\");return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmLibraryArg={\"k\":___cxa_allocate_exception,\"j\":___cxa_throw,\"n\":__embind_register_bigint,\"h\":__embind_register_bool,\"q\":__embind_register_emval,\"f\":__embind_register_float,\"r\":__embind_register_function,\"b\":__embind_register_integer,\"a\":__embind_register_memory_view,\"d\":__embind_register_std_string,\"c\":__embind_register_std_wstring,\"i\":__embind_register_void,\"l\":__emval_decref,\"m\":__emval_incref,\"g\":__emval_take_value,\"e\":_abort,\"o\":_emscripten_memcpy_big,\"p\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n","'use strict'\n\nconst em_module = require('./build/decompress_binding.js')\n\nconst runtimeInit = new Promise(resolve => {\n  em_module.onRuntimeInitialized = resolve\n})\n\nmodule.exports = async function decompress (buffer) {\n  await runtimeInit\n  const result = em_module.decompress(buffer)\n  if (result === false) throw new Error('ConvertWOFF2ToTTF failed')\n  return result\n}\n","'use strict'\n\nexports.compress = require('./compress')\nexports.decompress = require('./decompress')\n","import { SymbolMetadata } from '../../types/types.ts';\nimport wawoff from 'wawoff2';\nimport { Buffer } from 'node:buffer';\nimport { generateFontTtf } from '../font-ttf/font-ttf.js';\nimport { AppConfig } from '../../types/app-config.ts';\n\nexport async function generateFontWoff2ByTtf(fontTtf: Buffer): Promise<Uint8Array> {\n  return wawoff.compress(fontTtf);\n}\n\nexport async function generateFontWoff2(config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]): Promise<Uint8Array> {\n  const fontTtf = await generateFontTtf(config, files);\n\n  return await generateFontWoff2ByTtf(fontTtf);\n}","import { SymbolMetadata } from '../../types/types.ts';\nimport { slugify } from '../../utils/slugify.js';\nimport { join } from 'node:path';\n\nconst COMMON_STYLES = `\n.icon {\n  font-family: \"{{fontName}}\", sans-serif;\n  font-weight: 500;\n  font-size: 1rem;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  line-height: 1;\n  display: var(--icon-display, inline-block);\n  speak: none;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n.icon-1x {\n  font-size: 1em\n}\n.icon-2x {\n  font-size: 2em\n}\n.icon-3x {\n  font-size: 3em\n}\n.icon-4x {\n  font-size: 4em\n}\n.icon-5x {\n  font-size: 5em\n}\n.icon-6x {\n  font-size: 6em\n}\n.icon-7x {\n  font-size: 7em\n}\n.icon-8x {\n  font-size: 8em\n}\n.icon-9x {\n  font-size: 9em\n}\n.icon-10x {\n  font-size: 10em\n}\n.icon-2xs {\n  font-size: .625em;\n  line-height: .1em;\n  vertical-align: .225em\n}\n.icon-xs {\n  font-size: .75em;\n  line-height: .08333em;\n  vertical-align: .125em\n}\n.icon-sm {\n  font-size: .875em;\n  line-height: .07143em;\n  vertical-align: .05357em\n}\n.icon-lg {\n  font-size: 1.25em;\n  line-height: .05em;\n  vertical-align: -.075em\n}\n.icon-xl {\n  font-size: 1.5em;\n  line-height: .04167em;\n  vertical-align: -.125em\n}\n.icon-2xl {\n  font-size: 2em;\n  line-height: .03125em;\n  vertical-align: -.1875em\n}\n.icon-fw {\n  text-align: center;\n  width: 1.25em\n}\n\n.icon-beat {\n  animation-name: icon-motion-beat;\n  animation-delay: var(--icon-animation-delay, 0s);\n  animation-direction: var(--icon-animation-direction, normal);\n  animation-duration: var(--icon-animation-duration, 1s);\n  animation-iteration-count: var(--icon-animation-iteration-count, infinite);\n  animation-timing-function: var(--icon-animation-timing, ease-in-out)\n}\n\n.icon-bounce {\n  animation-name: icon-motion-bounce;\n  animation-delay: var(--icon-animation-delay, 0s);\n  animation-direction: var(--icon-animation-direction, normal);\n  animation-duration: var(--icon-animation-duration, 1s);\n  animation-iteration-count: var(--icon-animation-iteration-count, infinite);\n  animation-timing-function: var(--icon-animation-timing, cubic-bezier(.28,.84,.42,1));\n}\n\n.icon-fade {\n  animation-name: icon-motion-fade;\n  animation-iteration-count: var(--icon-animation-iteration-count, infinite);\n  animation-timing-function: var(--icon-animation-timing, cubic-bezier(.4,0,.6,1));\n}\n\n.icon-beat-fade,\n.icon-fade {\n  animation-delay: var(--icon-animation-delay,0s);\n  animation-direction: var(--icon-animation-direction,normal);\n  animation-duration: var(--icon-animation-duration,1s);\n}\n\n.icon-beat-fade {\n  animation-name: icon-motion-beat-fade;\n  animation-iteration-count: var(--icon-animation-iteration-count,infinite);\n  animation-timing-function: var(--icon-animation-timing,cubic-bezier(.4,0,.6,1));\n}\n\n.icon-flip {\n  animation-name: icon-motion-flip;\n  animation-delay: var(--icon-animation-delay,0s);\n  animation-direction: var(--icon-animation-direction,normal);\n  animation-duration: var(--icon-animation-duration,1s);\n  animation-iteration-count: var(--icon-animation-iteration-count,infinite);\n  animation-timing-function: var(--icon-animation-timing,ease-in-out);\n}\n\n.icon-shake {\n  animation-name: icon-motion-shake;\n  animation-duration: var(--icon-animation-duration,1s);\n  animation-iteration-count: var(--icon-animation-iteration-count,infinite);\n  animation-timing-function: var(--icon-animation-timing,linear);\n}\n\n.icon-shake,\n.icon-spin {\n  animation-delay: var(--icon-animation-delay,0s);\n  animation-direction: var(--icon-animation-direction,normal);\n}\n\n.icon-spin {\n  animation-name: icon-motion-spin;\n  animation-duration: var(--icon-animation-duration,2s);\n  animation-iteration-count: var(--icon-animation-iteration-count,infinite);\n  animation-timing-function: var(--icon-animation-timing,linear);\n}\n\n.icon-spin-reverse {\n  --icon-animation-direction: reverse;\n}\n\n.icon-pulse,\n.icon-spin-pulse {\n  animation-name: icon-motion-spin;\n  animation-direction: var(--icon-animation-direction, normal);\n  animation-duration: var(--icon-animation-duration, 1s);\n  animation-iteration-count: var(--icon-animation-iteration-count, infinite);\n  animation-timing-function: var(--icon-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion:reduce) {\n  .icon-beat, .icon-beat-fade, .icon-bounce, .icon-fade, .icon-flip, .icon-pulse, .icon-shake, .icon-spin, .icon-spin-pulse {\n    animation-delay: -1ms;\n    animation-duration: 1ms;\n    animation-iteration-count: 1;\n    transition-delay: 0s;\n    transition-duration: 0s\n  }\n}\n\n@keyframes icon-motion-beat {\n  0%,90% {\n    transform: scale(1)\n  }\n\n  45% {\n    transform: scale(var(--icon-beat-scale,1.25))\n  }\n}\n\n@keyframes icon-motion-bounce {\n  0% {\n    transform: scale(1) translateY(0)\n  }\n\n  10% {\n    transform: scale(var(--icon-bounce-start-scale-x,1.1),var(--icon-bounce-start-scale-y,.9)) translateY(0)\n  }\n\n  30% {\n    transform: scale(var(--icon-bounce-jump-scale-x,.9),var(--icon-bounce-jump-scale-y,1.1)) translateY(var(--icon-bounce-height,-.5em))\n  }\n\n  50% {\n    transform: scale(var(--icon-bounce-land-scale-x,1.05),var(--icon-bounce-land-scale-y,.95)) translateY(0)\n  }\n\n  57% {\n    transform: scale(1) translateY(var(--icon-bounce-rebound,-.125em))\n  }\n\n  64% {\n    transform: scale(1) translateY(0)\n  }\n\n  to {\n    transform: scale(1) translateY(0)\n  }\n}\n\n@keyframes icon-motion-fade {\n  50% {\n    opacity: var(--icon-fade-opacity,.4)\n  }\n}\n\n@keyframes icon-motion-beat-fade {\n  0%,to {\n    opacity: var(--icon-beat-fade-opacity,.4);\n    transform: scale(1)\n  }\n\n  50% {\n    opacity: 1;\n    transform: scale(var(--icon-beat-fade-scale,1.125))\n  }\n}\n\n@keyframes icon-motion-flip {\n  50% {\n    transform: rotate3d(var(--icon-flip-x,0),var(--icon-flip-y,1),var(--icon-flip-z,0),var(--icon-flip-angle,-180deg))\n  }\n}\n\n@keyframes icon-motion-shake {\n  0% {\n    transform: rotate(-15deg)\n  }\n\n  4% {\n    transform: rotate(15deg)\n  }\n\n  8%,24% {\n    transform: rotate(-18deg)\n  }\n\n  12%,28% {\n    transform: rotate(18deg)\n  }\n\n  16% {\n    transform: rotate(-22deg)\n  }\n\n  20% {\n    transform: rotate(22deg)\n  }\n\n  32% {\n    transform: rotate(-12deg)\n  }\n\n  36% {\n    transform: rotate(12deg)\n  }\n\n  40%,to {\n    transform: rotate(0deg)\n  }\n}\n\n@keyframes icon-motion-spin {\n  0% {\n    transform: rotate(0deg)\n  }\n\n  to {\n    transform: rotate(1turn)\n  }\n}\n`\n\nfunction getFontFace(type: string, _fontName: string, fontUrl: string): string {\n  switch (type) {\n    case 'eot':\n      return `url(\"${fontUrl}#iefix\") format(\"embedded-opentype\")`;\n    case 'woff2':\n      return `url(\"${fontUrl}\") format(\"woff2\")`;\n    case 'woff':\n      return `url(\"${fontUrl}\") format(\"woff\")`;\n    case 'ttf':\n      return `url(\"${fontUrl}\") format(\"truetype\")`;\n    case 'svg':\n      return `url(\"${fontUrl}\") format(\"svg\")`;\n    default:\n      throw new Error(`Unsupported type \"${type}\"`);\n  }\n}\n\nexport function generateStyleCss(fontName: string, prefix: string, types: string[], files: SymbolMetadata[], url = '/') {\n  const fontSlug = slugify(fontName);\n\n  let output = '@font-face {\\n'\n  output += `  font-family: \"${fontName}\";\\n`;\n  output += '  src: ';\n\n  for (let i = 0; i < types.length; i++) {\n    const type = types[i];\n    const fontUrl = getFontFace(type, fontName, join(url, `${fontSlug}.${type}`));\n    output += i === 0 ? fontUrl : `     ${fontUrl}`;\n    output += i === types.length - 1 ? ';\\n' : ',\\n'\n  }\n\n  output += '}\\n';\n\n  output += COMMON_STYLES.replace('{{fontName}}', fontName) + '\\n'\n\n  for (const file of files) {\n    output += `i.${prefix}-${file.name}:before {\\n`;\n    output += `  content: \"\\\\${file.code.toString(16)}\";\\n`;\n    output += '}\\n\\n'\n  }\n\n\n  return output;\n}","import { AppConfig } from './types/app-config.ts';\n\nexport const DEFAULT_CONFIG: Omit<AppConfig, 'input' | 'output'> = {\n  name: 'IconFont',\n  prefix: 'icon',\n  types: ['ttf'],\n  port: 9000,\n  fontUrl: './',\n}","import { Command } from 'commander';\nimport { loadConfig, mergeConfig, searchConfig } from '../utils/read-config.js';\nimport fs from 'node:fs/promises';\nimport path from 'node:path';\nimport { generateFontSvg } from '../generators/font-svg/font-svg.js';\nimport { generateFontTtfBySvg } from '../generators/font-ttf/font-ttf.js';\nimport { slugify } from '../utils/slugify.js';\nimport { generateFontEotByTtf } from '../generators/font-eot/font-eot.js';\nimport { generateFontWoffByTtf } from '../generators/font-woff/font-woff.js';\nimport { generateFontWoff2ByTtf } from '../generators/font-woff2/font-woff2.js';\nimport { generateStyleCss } from '../generators/style-css/style-css.js';\nimport { Logger } from '../utils/logger.js';\nimport { DEFAULT_CONFIG } from '../default-config.ts';\nimport { readFiles } from '../utils/read-files.ts';\nimport { AppConfigKeys } from '../types/app-config.ts';\n\nexport function createGenerateCommand(): Command {\n  const subprogram = new Command();\n\n  subprogram\n    .name('generate')\n    .alias('g')\n    .alias('gen')\n    .description('Generate icon font')\n    .action(async (args: any, command: Command) => {\n      const start = Date.now();\n\n      const { config: configFilePath, cwd, ...configArgs } = args;\n      const configFile = configFilePath ? await loadConfig(configFilePath) : await searchConfig(process.cwd());\n      const requiredFields: AppConfigKeys[] = ['input', 'output', 'name', 'prefix', 'types', 'port']\n      const config = mergeConfig(requiredFields, configArgs, configFile, DEFAULT_CONFIG);\n\n      await fs.rm(config.output, { recursive: true, force: true });\n      await fs.mkdir(config.output, { recursive: true });\n\n      const slug = slugify(config.name);\n      const files = await readFiles(config.input);\n      const fontSvg = await generateFontSvg(config, files);\n      const fontTtf = await generateFontTtfBySvg(fontSvg);\n\n      for (const type of config.types) {\n        const filename = path.join(config.output, `${slug}.${type}`);\n\n        switch (type) {\n          case 'svg':\n            await fs.writeFile(filename, fontSvg, 'utf8');\n            break;\n          case 'ttf':\n            await fs.writeFile(filename, fontTtf);\n            break;\n          case 'eot':\n            const fontEot = await generateFontEotByTtf(fontTtf);\n            await fs.writeFile(filename, fontEot);\n            break;\n          case 'woff':\n            const fontWoff = await generateFontWoffByTtf(fontTtf);\n            await fs.writeFile(filename, fontWoff);\n            break;\n          case 'woff2':\n            const fontWoff2 = await generateFontWoff2ByTtf(fontTtf);\n            await fs.writeFile(filename, fontWoff2);\n            break;\n        }\n        Logger.created(filename);\n      }\n\n      const styleCss = generateStyleCss(config.name, config.prefix, config.types, files, config.fontUrl);\n      const filenameCss = path.join(config.output, `${slug}.css`);\n      await fs.writeFile(filenameCss, styleCss, 'utf8');\n      Logger.created(filenameCss);\n\n      Logger.done(Date.now() - start, files.length);\n    });\n\n  return subprogram;\n}","import { SymbolMetadata } from '../../types/types.ts';\nimport { LOGO_ICON } from '../../utils/constants.ts';\n\nconst HEAD = `\n<head>\n  <meta charset=\"UTF-8\">\n  <title>{{caption}}</title>\n  <link rel=\"shortcut icon\" type=\"image/svg+xml\" href=\"/favicon.svg\" />\n  <style>\n    html {\n      --border-radius: 8px;\n      --preview-bg: rgba(2, 6, 23, 0.7);\n      --label-bg: #0c4a6e;\n\n      color: #e2e8f0;\n      background: #0f172a;\n    }\n    body {\n      font-family: \"Ubuntu Sans\", Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;\n      font-weight: 300;\n      font-size: 16px;\n      margin: 0;\n      text-align: center;\n    }\n    .caption {\n      display: flex;\n      align-content: center;\n      justify-content: center;\n      gap: 16px;\n    }\n    .caption svg {\n      width: 36px;\n      height: auto;\n    }\n    .buttons-container {\n      width: auto;\n      max-width: 1280px;\n      margin: 0 auto;\n      padding: 10px 20px;\n    }\n    .preview {\n      width: 110px;\n      height: 130px;\n      margin: 10px;\n      display: inline-block;\n      border: none;\n      background-color: transparent;\n      color: inherit;\n      outline: none;\n      padding: 0;\n      border-radius: var(--border-radius);\n      position: relative;\n    }\n    .preview .inner {\n      display: inline-block;\n      width: 100%;\n      text-align: center;\n      background: var(--preview-bg);\n      border-radius: var(--border-radius) var(--border-radius) 0 0;\n    }\n    .preview .inner i {\n      line-height: 100px;\n      font-size: 36px;\n    }\n    .label {\n      display: inline-block;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 5px;\n      font-size: 11px;\n      font-family: Monaco, monospace;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      background: var(--label-bg);\n      border-radius: 0 0 var(--border-radius) var(--border-radius);\n    }\n    [aria-label] {\n      cursor: pointer;\n      position: relative;\n    }\n    [aria-label]::after {\n      width: 120px;\n      background-color: rgba(28, 28, 30, 0.9);\n      border-radius: 5px;\n      border: .5px solid rgba(28, 28, 30, 1);\n      margin-bottom: 16px;\n      box-shadow: 0 0 .1875rem rgba(0, 0, 0, .3);\n      color: #f0f0f0;\n      content: attr(aria-label);\n      font-size: 12px;\n      line-height: 1;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      font-style: normal;\n      font-weight: 500;\n      padding: 10px;\n      text-indent: 0;\n      text-shadow: none;\n      white-space: nowrap;\n      z-index: 50;\n    }\n    [aria-label]::before {\n      content: \"\";\n      z-index: 49;\n      border: 8px solid transparent;\n      border-top-color: rgba(28, 28, 30, 1);\n      height: 0;\n      width: 0;\n      display: block;\n    }\n    [aria-label]::after,\n    [aria-label]::before {\n      bottom: 100%;\n      box-sizing: border-box;\n      opacity: 0;\n      pointer-events: none;\n      position: absolute;\n      transition: all .2s ease-in-out 0s;\n      transition-delay: 0s;\n      left: 50%;\n      transform: translate(-50%, 10px);\n      transform-origin: top;\n    }\n    [aria-label]:hover::after,\n    [aria-label]:hover::before {\n      opacity: 1;\n      transform: translate(-50%, 4px);\n    }\n  </style>\n\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"/style.css\"/>\n\n  <script type=\"application/javascript\">\n    function onClickCallback(button) {\n      navigator.clipboard.writeText(button.dataset.text).then(() => {\n        const label = button.getAttribute('aria-label');\n        button.setAttribute('aria-label', 'Copied ✔');\n\n        let timeout;\n        const back = () => {\n          clearTimeout(timeout);\n          button.removeEventListener('mouseout', back);\n          setTimeout(() => button.setAttribute('aria-label', label), 200);\n        };\n\n        timeout = setTimeout(() => button.setAttribute('aria-label', label), 5000);\n        button.addEventListener('mouseout', back);\n      });\n    }\n  </script>\n\n  <script type=\"application/javascript\">\n    let health = 'unknown';\n    async function checkHealth() {\n      try {\n        const res = await fetch('/healthcheck', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n        if (!res.ok) {\n          health = 'failed';\n        }\n\n        const data = await res.json();\n        // Reload by server command\n        if (data.status === 'reload') {\n          return window.location.reload(true);\n        } \n        // If \"ok\" after failed then reload. \n        else if (data.status === 'ok') {\n          if (health === 'failed') {\n            return window.location.reload(true);\n          } else {\n            health = 'healthy';\n          }\n        }\n      } catch {\n        health = 'failed';\n      }\n    }\n\n    setInterval(checkHealth, 1000);\n  </script>\n</head>\n`;\n\nexport function generateIndexHtml(caption: string, prefix: string, files: SymbolMetadata[]): string {\n  let output = '<!DOCTYPE html>\\n';\n  output += '<html lang=\"en\">\\n';\n  output += HEAD.replace('{{caption}}', caption);\n  output += '<body>\\n';\n  output += `<h1 class=\"caption\">\\n`;\n  output += LOGO_ICON + '\\n';\n  output += `<span>${caption}</span>\\n`;\n  output += `</h1>\\n`;\n\n  output += '<div class=\"buttons-container\">\\n';\n\n  for (const file of files) {\n    output += `\n      <button type=\"button\" class=\"preview\" data-text=\"${prefix} ${prefix}-${file.name}\" aria-label=\"Copy to clipboard\" onclick=\"onClickCallback(this)\">\n        <span class=\"inner\">\n          <i class=\"${prefix} ${prefix}-${file.name}\"></i>\n        </span>\n        <br>\n        <span class=\"label\">${file.name}</span>\n      </button>\n    `;\n  }\n\n  output += '</div>\\n</body>\\n</html>';\n  return output;\n}","export function generateLogoSvg(): string {\n  return `\n<svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  <rect width=\"32\" height=\"32\" rx=\"4\" ry=\"4\" fill-rule=\"evenodd\" stroke-width=\"0\" style=\"paint-order:fill markers stroke\"/>\n  <g transform=\"matrix(1.00242 0 0 1.00242 .0471958 -.0616379)\" stroke-width=\"1.23732\">\n    <circle cx=\"15.9174\" cy=\"7.02139\" r=\"2.31378\" fill=\"#16d600\"/>\n    <circle cx=\"6.58493\" cy=\"16.0229\" r=\"2.31378\" fill=\"#fff\"/>\n    <circle cx=\"15.9174\" cy=\"25.0243\" r=\"2.31378\" fill=\"#0159ea\"/>\n    <path d=\"m4.26496 4.70142h4.63993v4.63993h-4.63993z\" fill=\"#0159ea\"/>\n    <path d=\"m22.9299 13.7029h4.63993v4.63993h-4.63993z\" fill=\"#16d600\"/>\n    <path d=\"m13.2757 18.3428 2.63548-4.63993 2.64786 4.63993z\" fill=\"#fff\"/>\n    <path d=\"m22.9299 22.7044h4.63993v4.63993h-4.63993z\" fill=\"#fff\"/>\n    <path d=\"m22.6143 9.34135 2.63548-4.63993 2.63548 4.63993z\" fill=\"#0159ea\"/>\n    <path d=\"m3.94326 27.3443 2.63548-4.63993 2.64785 4.63993z\" fill=\"#16d600\"/>\n  </g>\n</svg>\n  `;\n}","import http from 'node:http';\nimport { SymbolMetadata } from '../types/types.ts';\nimport { slugify } from '../utils/slugify.js';\nimport { generateIndexHtml, generateLogoSvg } from '../generators';\nimport { generateStyleCss } from '../generators/style-css/style-css.js';\nimport { generateFontSvg } from '../generators/font-svg/font-svg.js';\nimport { generateFontTtf } from '../generators/font-ttf/font-ttf.js';\nimport { generateFontWoff } from '../generators/font-woff/font-woff.js';\nimport { generateFontWoff2 } from '../generators/font-woff2/font-woff2.js';\nimport { generateFontEot } from '../generators/font-eot/font-eot.js';\nimport { Logger } from '../utils/logger.js';\nimport { LOGO_ICON } from '../utils/constants.ts';\nimport { AppConfig } from '../types/app-config.ts';\n\nasync function indexHandler(_req: http.IncomingMessage, res: http.ServerResponse, fontName: string, prefix: string, files: SymbolMetadata[]) {\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.write(generateIndexHtml(fontName, prefix, files));\n  res.end();\n}\n\nasync function logoHandler(_req: http.IncomingMessage, res: http.ServerResponse) {\n  res.writeHead(200, { 'Content-Type': 'image/svg+xml' });\n  res.end(generateLogoSvg());\n}\n\nasync function stylesCssHandler(_req: http.IncomingMessage, res: http.ServerResponse, config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]) {\n  res.writeHead(200, { 'Content-Type': 'text/css' });\n  res.write(generateStyleCss(config.name, config.prefix, config.types, files, '/'));\n  res.end();\n}\n\nasync function faviconHandler(_req: http.IncomingMessage, res: http.ServerResponse) {\n  res.writeHead(200, { 'Content-Type': 'image/svg+xml' });\n  res.write(LOGO_ICON);\n  res.end();\n}\n\nasync function svgFontHandler(_req: http.IncomingMessage, res: http.ServerResponse, config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]) {\n  res.writeHead(200, {\n    'Content-Type': 'font/svg+xml',\n    'Server': 'Dev Server',\n  });\n  res.write(await generateFontSvg(config, files));\n  res.end();\n}\n\nasync function ttfFontHandler(_req: http.IncomingMessage, res: http.ServerResponse, config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]) {\n  res.writeHead(200, {\n    'Content-Type': 'application/x-font-ttf',\n    'Server': 'Dev Server',\n  });\n  res.write(await generateFontTtf(config, files));\n  res.end();\n}\n\nasync function woffFontHandler(_req: http.IncomingMessage, res: http.ServerResponse, config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]) {\n  res.writeHead(200, {\n    'Content-Type': 'font/woff',\n    'Server': 'Dev Server',\n  });\n  res.write(await generateFontWoff(config, files));\n  res.end();\n}\n\nasync function woff2FontHandler(_req: http.IncomingMessage, res: http.ServerResponse, config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]) {\n  res.writeHead(200, {\n    'Content-Type': 'font/woff2',\n    'Server': 'Dev Server',\n  });\n  res.write(await generateFontWoff2(config, files));\n  res.end();\n}\n\nasync function eotFontHandler(_req: http.IncomingMessage, res: http.ServerResponse, config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]) {\n  res.writeHead(200, {\n    'Content-Type': 'application/vnd.ms-fontobject',\n    'Server': 'Dev Server',\n  });\n  res.write(await generateFontEot(config, files));\n  res.end();\n}\n\nasync function error404Handler(_req: http.IncomingMessage, res: http.ServerResponse) {\n  res.writeHead(404);\n  res.end('Not Found');\n}\n\nexport async function handleRoute(path: string, req: http.IncomingMessage, res: http.ServerResponse, config: Omit<AppConfig, 'output'>, files: SymbolMetadata[]) {\n  const slug = slugify(config.name);\n  Logger.route(req.method || 'GET', req.url || '/');\n\n  try {\n    switch (path) {\n      case '/':\n      case '/index.html':\n        return await indexHandler(req, res, config.name, config.prefix, files);\n      case '/logo.svg':\n        return await logoHandler(req, res);\n      case '/favicon.svg':\n        return await faviconHandler(req, res);\n      case '/style.css':\n        return await stylesCssHandler(req, res, config, files);\n      case `/${slug}.svg`:\n        return await svgFontHandler(req, res, config, files);\n      case `/${slug}.ttf`:\n        return await ttfFontHandler(req, res, config, files);\n      case `/${slug}.woff`:\n        return await woffFontHandler(req, res, config, files);\n      case `/${slug}.woff2`:\n        return await woff2FontHandler(req, res, config, files);\n      case `/${slug}.eot`:\n        return await eotFontHandler(req, res, config, files);\n      default:\n        return await error404Handler(req, res);\n    }\n  } catch (error: any) {\n    console.error(error);\n  }\n}","import EventEmitter from 'node:events';\nimport { watch } from 'node:fs';\nimport { Logger } from '../utils/logger.js';\n\nexport class Watcher extends EventEmitter {\n  private _timer: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(filePath: string) {\n    super();\n    watch(filePath, { persistent: true, recursive: false, encoding: 'utf8' }, this.change.bind(this));\n  }\n\n  private change(_: any, file: any) {\n    if (this._timer !== null) {\n      return;\n    }\n\n    this._timer = setTimeout(() => {\n      Logger.changes(file);\n      this.emit('change');\n      this._timer = null;\n    }, 100);\n  }\n}","import http from 'node:http';\nimport url from 'node:url';\nimport path from 'node:path';\nimport { handleRoute } from './router.js';\nimport { Watcher } from './watcher.js';\n\nimport { readFiles } from '../utils/read-files.ts';\nimport { AppConfig } from '../types/app-config.ts';\n\nexport function createServer(config: Omit<AppConfig, 'output'>): http.Server {\n  let shouldReload = false;\n  const watcher = new Watcher(config.input);\n\n  watcher.on('change', () => {\n    shouldReload = true;\n  });\n\n  return http.createServer(async function server(this: http.Server, req, res) {\n    const files = await readFiles(config.input);\n    const parsedUrl = req.url && new url.URL(`http://localhost:${req.socket.localPort}${req.url}`) || null;\n    if (!parsedUrl) {\n      throw new Error(`URL not parsable`);\n    }\n\n    let routePath = path.normalize(parsedUrl.pathname).replace(/^(\\.\\.[\\/\\\\])+/, '');\n\n    if (routePath === '/healthcheck') {\n      res.writeHead(200, { 'Content-Type': 'application/json' });\n      res.end(JSON.stringify({\n        status: shouldReload ? 'reload' : 'ok',\n      }));\n    } else {\n      if (routePath === '/' || routePath === '/index.html') {\n        shouldReload = false;\n      }\n\n      await handleRoute(routePath, req, res, config, files);\n    }\n  });\n}\n","import http from 'node:http';\n\nexport function scanAvailablePort(port: number, callback: (error: Error | null, port?: number) => void, attempt = 5): void {\n  if (attempt === 0) {\n    return callback(new Error('no free ports'));\n  }\n  const server = http.createServer();\n\n  let debounce: ReturnType<typeof setTimeout> | null = null;\n\n  server.once('listening', () => {\n    debounce = setTimeout(() => {\n      server.close();\n      callback(null, port);\n    }, 300);\n\n  });\n\n  server.once('error', (error: any) => {\n    if (debounce !== null) {\n      clearTimeout(debounce);\n    }\n\n    if (error.code !== 'EADDRINUSE') {\n      return callback(error);\n    }\n    server.close();\n    scanAvailablePort(port + 1, callback, attempt - 1);\n  });\n\n  server.listen(port);\n}","import { Command } from 'commander';\nimport { loadConfig, mergeConfig, searchConfig } from '../utils/read-config.ts';\nimport { DEFAULT_CONFIG } from '../default-config.ts';\nimport { createServer } from '../server/server.ts';\nimport { Logger } from '../utils/logger.ts';\nimport { scanAvailablePort } from '../server/scan-available-port.ts';\nimport { AppConfig, AppConfigKeys } from '../types/app-config.ts';\n\nexport function createDemoCommand(): Command {\n  const subprogram = new Command();\n  subprogram\n    .name('demo')\n    .alias('serve')\n    .alias('d')\n    .description('run web server with the icon font demo')\n    .action(async (args: Omit<AppConfig, 'output'> & { config?: string, cwd?: string }) => {\n      const { config: configFilePath, cwd, ...configArgs } = args;\n      const configFile = configFilePath ? await loadConfig(configFilePath) : await searchConfig(process.cwd());\n      const requiredFields: AppConfigKeys[] = ['input', 'name', 'prefix', 'types', 'fontUrl', 'port']\n      const config = mergeConfig(requiredFields, configArgs, configFile, DEFAULT_CONFIG);\n\n      const server = createServer(config);\n\n      scanAvailablePort(config.port, (error, port) => {\n        if (error || !port) {\n          console.error(error);\n          return process.exit(1);\n        }\n\n        server.listen(port);\n        Logger.serverListen(port)\n      });\n    });\n\n  return subprogram;\n}","import { Command } from 'commander';\nimport { cosmiconfig } from 'cosmiconfig';\nimport { createGenerateCommand } from './cli/generate.js';\nimport { createDemoCommand } from './cli/demo.js';\n\nconst Program = new Command();\n\nProgram.name(__APP_NAME__)\n  .version(__APP_VERSION__, '-v, --version', 'output the current version')\n  .description(__APP_DESCRIPTION__)\n  .allowUnknownOption()\n  .configureHelp({\n    showGlobalOptions: false,\n    sortSubcommands: false,\n    sortOptions: false,\n  })\n  .addCommand(createGenerateCommand())\n  .addCommand(createDemoCommand());\n\n(async () => {\n  Program.commands.forEach(cmd => {\n    const commandName = cmd.name();\n    const isDemo = commandName === 'demo';\n    const isGen = commandName === 'generate';\n\n    isDemo && cmd.option('-p, --port <number>', 'local port for demo server');\n    cmd.option('-c, --config <value>', 'use specified config file');\n    cmd.option('-i, --input <value>', 'the directory where the source files of the svg icons are located');\n    isGen && cmd.option('-o, --output <value>', 'the directory where the generated files will be sent');\n    cmd.option('-n, --name <value>', 'your font name, used for generated fonts and files');\n    cmd.option('-t, --types <values...>', 'fonts files extension to generate');\n    cmd.option('    --cwd <value>', 'pass specified current working directory ', process.cwd());\n    isGen && cmd.option('    --font-url <value>', 'this address is set in the @font-face CSS file');\n    cmd.option('    --prefix <value>', 'CSS classname prefix for icons');\n  });\n\n  await Program.parseAsync(process.argv);\n})();\n\n\n\n"],"names":["exitCode","code","message","CommanderError","error","InvalidArgumentError","require$$0","Argument$3","name","description","value","previous","fn","values","arg","humanReadableArgName","nameOutput","argument","Argument","Help$3","cmd","visibleCommands","helpCommand","a","b","getSortKey","option","visibleOptions","helpOption","removeShort","removeLong","globalOptions","ancestorCmd","args","helper","max","command","cmdName","ancestorCmdNames","extraInfo","choice","extraDescripton","termWidth","helpWidth","itemIndentWidth","itemSeparatorWidth","formatItem","term","fullText","formatList","textArray","output","commandDescription","argumentList","optionList","globalOptionList","commandList","str","width","indent","minColumnWidth","indents","manualIndent","columnWidth","leadingStr","columnText","indentString","breaks","regex","lines","line","i","help","Help","Option$3","flags","optionFlags","splitOptionFlags","names","impliedOptionValues","newImplied","mandatory","hide","camelcase","DualOptions$1","options","key","optionKey","preset","negativeValue","word","shortFlag","longFlag","flagParts","Option","DualOptions","maxDistance","editDistance","d","j","cost","suggestSimilar","candidates","searchingOptions","candidate","similar","bestDistance","minSimilarity","distance","length","suggestSimilar_1","EventEmitter","childProcess","require$$1","path","require$$2","fs","require$$3","process","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","Command","write","sourceCommand","result","nameAndArgs","actionOptsOrExecDesc","execOpts","desc","opts","configuration","displayHelp","displaySuggestion","defaultValue","detail","previousArgument","enableOrNameAndArgs","helpName","helpArgs","helpDescription","deprecatedDescription","event","listener","allowedValues","err","expectedArgsCount","actionArgs","target","invalidArgumentMessage","matchingOption","matchingFlag","knownBy","alreadyUsed","existingCmd","newCmd","oname","positiveLongFlag","handleOptionValue","val","invalidValueMessage","valueSource","oldValue","config","def","m","parseArg","combine","allowUnknown","allowExcess","positional","passThrough","storeAsProperties","source","argv","parseOptions","execArgv","userArgs","subcommand","launchWithNode","sourceExt","findFile","baseDir","baseName","localBin","foundExt","ext","executableFile","executableDir","resolvedScriptPath","localFile","legacyName","proc","incrementNodeInspectorPort","signal","exitCallback","executableDirMessage","executableMissing","wrappedError","commandName","operands","unknown","subCommand","promiseChain","subcommandName","_a","_b","myParseArg","parsedValue","processedArgs","declaredArg","index","processed","v","promise","hooks","hookedCommand","callback","hookDetail","hook","parsed","checkForUnknownOptions","commandEvent","anOption","definedNonDefaultOptions","conflictingAndDefined","defined","dest","maybeOption","activeVariadicOption","len","combinedOptions","errorOptions","dualHelper","hasCustomOptionValue","impliedKey","conflictingOption","findBestOptionFromValue","optionValue","negativeOption","positiveOption","getErrorMessage","bestOption","flag","suggestion","candidateFlags","moreFlags","receivedArgs","expected","s","unknownName","candidateNames","versionOption","argsDescription","alias","matchingCommand","aliases","filename","contextOptions","context","deprecatedCallback","helpInformation","position","text","helpEvent","helpStr","debugOption","debugHost","debugPort","match","commander","program","createCommand","createArgument","createOption","InvalidOptionArgumentError","Module","resolveFrom","fromDir","moduleId","silent","fromFile","resolveFileName","resolveFromModule","callsites","_prepareStackTrace","_","stack","callsitesModule","parentModule","filepath","stacks","seenVal","parentFilepath","parentPath","cwd","filePath","oldModule","parent","require","isArrayish","obj","util","errorEx","properties","errorExError","ErrorEXError","newMessage","modifier","overwrittenStack","stackDescriptor","stackGetter","stackValue","newstack","lineCount","errorEx_1","hexify","char","h","parseError","e","txt","badToken","errIdx","msg","start","end","slice","JSONParseError","er","caller","metadata","n","kIndent","kNewline","formatRE","emptyRE","parseJson","reviver","parseText","stripBOM","newline","isEmptyArray","jsonParseEvenBetterErrors","exports","LF","CR","LinesAndColumns","string","offsets","offset","column","location","nextOffset","x","create","picocolors_browserModule","jsTokens","token","identifier","isIdentifierChar","isIdentifierName","isIdentifierStart","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","isFirst","cp","trail","keyword","isKeyword","isReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isStrictReservedWord","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","inModule","_identifier","_keyword","lib","picocolors","helperValidatorIdentifier","isColorSupported","compose","f","g","buildDefs","colors","defsOn","defsOff","getDefs","enabled","sometimesKeywords","NEWLINE$1","BRACKET","tokenize","JSX_TAG","getTokenType","highlight","defs","highlighted","type","deprecationWarningShown","NEWLINE","getMarkerLines","loc","startLoc","endLoc","linesAbove","linesBelow","startLine","startColumn","endLine","endColumn","lineDiff","markerLines","lineNumber","sourceLength","codeFrameColumns","rawLines","shouldHighlight","hasColumns","numberMaxWidth","frame","number","gutter","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","colNumber","deprecationError","fallback","JSONError","indexMatch","jsonError","codeFrame","parseJson_1","isNothing","subject","isObject","toArray","sequence","extend","sourceKeys","repeat","count","cycle","isNegativeZero","common","formatError","exception","compact","where","YAMLException","reason","mark","getLine","buffer","lineStart","lineEnd","maxLineLength","head","tail","maxHalfLength","padStart","makeSnippet","re","lineStarts","lineEnds","foundLineNo","lineNoLength","snippet","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","map","style","Type","tag","data","compileList","schema","currentType","newIndex","previousType","previousIndex","compileMap","collectType","Schema","definition","implicit","explicit","seq","failsafe","resolveYamlNull","constructYamlNull","isNull","object","_null","resolveYamlBoolean","constructYamlBoolean","isBoolean","bool","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","hasDigits","ch","constructYamlInteger","sign","isInteger","int","YAML_FLOAT_PATTERN","resolveYamlFloat","constructYamlFloat","SCIENTIFIC_WITHOUT_DOT","representYamlFloat","res","isFloat","float","json","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","constructYamlTimestamp","year","month","day","hour","minute","second","fraction","delta","tz_hour","tz_minute","date","representYamlTimestamp","timestamp","resolveYamlMerge","merge","BASE64_MAP","resolveYamlBinary","idx","bitlen","constructYamlBinary","tailbits","input","bits","representYamlBinary","isBinary","binary","_hasOwnProperty","_toString","resolveYamlOmap","objectKeys","pair","pairKey","pairHasKey","constructYamlOmap","omap","resolveYamlPairs","keys","constructYamlPairs","pairs","resolveYamlSet","constructYamlSet","_default","DEFAULT_SCHEMA","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","simpleEscapeCheck","simpleEscapeMap","State","generateError","state","throwError","throwWarning","directiveHandlers","major","minor","handle","prefix","captureSegment","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLineStart","startPos","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","readNext","_pos","_tag","_anchor","terminator","isPair","isExplicitPair","isMapping","composeNode","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","isVerbatim","isNamed","tagHandle","tagName","readAnchorProperty","readAlias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","typeList","blockIndent","readDocument","documentStart","directiveName","directiveArgs","hasDirectives","loadDocuments","nullpos","loadAll","iterator","documents","load","loader","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","compileStyleMap","encodeHex","character","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","spaces","ind","next","generateNextLine","level","testImplicitResolving","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","isPlainSafeFirst","isPlainSafeLast","codePointAt","first","needIndentIndicator","leadingSpaceRe","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","lineWidth","testAmbiguousType","quotingType","forceQuotes","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","testAmbiguity","blockHeader","dropEndingNewline","foldString","escapeString","indentIndicator","clip","keep","chomp","lineRe","nextLF","foldLine","prevMoreIndented","moreIndented","breakRe","curr","escapeSeq","writeFlowSequence","writeNode","writeBlockSequence","writeFlowMapping","objectKeyList","objectKey","objectValue","pairBuffer","writeBlockMapping","explicitPair","detectType","block","isblockseq","tagStr","objectOrArray","duplicateIndex","duplicate","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump","dumper","renamed","from","to","jsYaml","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","__importDefault","this","mod","fs_1","promises_1","path_1","url_1","importFresh","loadJsSync","loadJs","href","requireError","loadJson","content","yaml","loadYaml","typescript","loadTsSync","compiledFilepath","resolveTsConfig","loadTs","transpiledContent","directory","fileName","defaults","loaders_1","getDefaultSearchPlaces","moduleName","getDefaultSearchPlacesSync","os","homedir","tmpdir","env","macos","library","windows","appData","localAppData","linux","username","envPaths","envPathsModule","__createBinding","o","k","k2","__setModuleDefault","__importStar","emplace","cached","getPropertyByPath","removeUndefinedValuesFromObject","isDirectory","isDirectorySync","ExplorerBase_1","env_paths_1","os_1","util_js_1","ExplorerBase","__privateAdd","_ExplorerBase_instances","_loadingMetaConfig","__publicField","__privateMethod","validateConfig_fn","__privateSet","__privateGet","packageProp","containingFilePath","imports","importStack","fileDirectory","importPath","fullPath","dir","globalConfigPlaces","place","startDir","stopDir","currentDir","parentDir","extension","getExtensionDescription","objToString","isPlainObject","newValue","mergeAll","Explorer_1","defaults_1","ExplorerBase_js_1","merge_1","Explorer","_Explorer_instances","readConfiguration_fn","dirs","getDirs_fn","firstDirIter","search","nextDirIter","contents","loadConfigFileWithImports_fn","loadedContent","loadConfiguration_fn","ownContent","importPaths","newImportStack","importedConfigs","loadedContents","fileExists_fn","packageFile","ExplorerSync_1","ExplorerSync","_ExplorerSync_instances","Explorer_js_1","ExplorerSync_js_1","util_1","identity","getUserDefinedOptionsFromMetaConfig","metaConfig","overrideOptions","getResolvedSearchPlaces","toolDefinedSearchPlaces","userConfiguredOptions","userConfiguredSearchPlaces","mergeOptionsBase","userDefinedConfig","validateOptions","mergeOptions","mergeOptionsSync","cosmiconfig","normalizedOptions","explorer","cosmiconfigSync","explorerSync","Logger","port","method","url","file","dirname","basename","extname","color","duration","Seeker","searchConfig","loadConfig","mergeConfig","required","_configs","configs","populateMetadata","SYMBOL_SIZE","SHAPE_SIZE","START_UNICODE","LOGO_ICON","testExpression","compareFiles","fileA","fileB","hasUnicodeA","hasUnicodeB","fileA_","fileB_","readFiles","files","readdir","acc","id","unicode","join","StreamDirectoryReader","Readable","__viteBrowserExternal_stream","__viteBrowserExternal_string_decoder","sax","strict","opt","SAXParser","SAXStream","createStream","buffers","parser","clearBuffers","S","rootNS","emit","F","newf","checkBufferLength","maxAllowed","maxActual","l","closeText","emitNode","flushBuffers","Stream","streamWraps","ev","me","SD","chunk","handler","CDATA","DOCTYPE","XML_NAMESPACE","XMLNS_NAMESPACE","nameStart","nameBody","entityStart","entityBody","isQuote","isAttribEnd","isMatch","notMatch","nodeType","textopts","strictFail","newTag","qname","attribute","qualName","local","attrib","qn","openTag","selfClosing","p","nv","uri","closeTag","t","closeTo","close","parseEntity","entity","entityLC","num","numStr","beginWhiteSpace","charAt","starti","pad","returnState","parsedEntity","stringFromCharCode","floor","fromCodePoint","MAX_SIZE","codeUnits","highSurrogate","lowSurrogate","codePoint","WSP","encodeSVGPath","commands","SVGPathData","rotate","y","rad","assertNumbers","numbers","PI","annotateArcCommand","x1","y1","rX","rY","x1_","y1_","testValue","c_ScaleTemp","c_Scale","cx_","cy_","cRot","intersectionUnitCircleLine","termSqr","DEG","lerp","arcAt","x2","phiDeg","bezierRoot","x0","x3","x01","x12","x23","pqFormula","bezierAt","c0","c1","c2","c3","q","PRECISION","discriminantX4","root","a2c","arc","y0","phiMin","phiMax","deltaPhi","partCount","prevX","prevY","phiStart","phiEnd","y2","transform","xTemp","yTemp","ROUND","roundVal","rf","TO_ABS","INFO","TO_REL","NORMALIZE_HVZ","normalizeZ","normalizeH","normalizeV","pathStartX","pathStartY","NORMALIZE_ST","prevCurveC2X","prevCurveC2Y","prevQuadCX","prevQuadCY","QT_TO_C","prevQuadX1","prevQuadY1","prevXAbs","prevYAbs","pathStartXAbs","pathStartYAbs","SANITIZE","EPS","abs","skip","x1Rel","y1Rel","xRel","yRel","x2Rel","y2Rel","MATRIX","origX1","origX2","comRel","sqr","det","xRot","sinRot","cosRot","xCurve","yCurve","A","B","C","A1","B1","C1","newXRot","newSinRot","newCosRot","ROTATE","sin","cos","TRANSLATE","dX","dY","SCALE","SKEW_X","SKEW_Y","X_AXIS_SYMMETRY","xOffset","Y_AXIS_SYMMETRY","yOffset","A_TO_C","ANNOTATE_ARCS","CLONE","CALCULATE_BOUNDS","clone","toAbs","qtToC","normST","fixX","absX","fixY","absY","xDerivRoots","derivRoot","yDerivRoots","xRotRad","x90","y90","normalizeXiEta","xi","eta","phi","SVGPathDataTransformer","TransformableSVG","eps","isWhiteSpace","isDigit","SVGPathDataParser","finishCommand","isAArcFlag","isEndingDigit","COMMAND_ARG_COUNTS","parsedCommands","cT","_SVGPathData","boundsTransform","transformFunction","newCommands","transformedCommand","svgRectToPath","attributes","height","rx","ry","svgLineToPath","svgCircleToPath","cx","cy","r","StreamPrepareTransformer","Transform","pathData","minX","maxX","minY","maxY","currentSize","transformations","transformation","matched","transformType","rest","viewBox","_encoding","parents","transforms","paths","pushTransform","_newTransformations","applyTransformAndPush","svgPathData","meta","Buffer","svg","slugify","encodeHtml","codePoints","StreamSvgFontTransformer","fontName","symbolSize","slug","size","generateFontSvg","_iconsInfo","resolve","reject","filesReadStream","prepareStream","svgFontStream","writeStream","Writable","Font","advWidth","cur","minValue","minRsb","glyph","xMin","yMin","xMax","yMax","sumWidth","maxWidth","maxExtent","Glyph","hasPoints","contour","point","Contour","Point$2","ucs2decode","counter","extra","ucs2encode","TYPED_OK","createArray","MicroBuffer","isInherited","littleEndian","buf","hi","lo","microbuffer","Point$1","Point","isInLine","p1","p2","accuracy","simplify","contours","pPrev","pNext","interpolate","resContour","roundPoints","removeClosingReturnPoints","toRelative","prevPoint","resContours","createScript","ByteBuffer","createScriptList","scripts","header","tableLengths","script","table","createFeatureList","createLigatureCoverage","font","ligatureGroups","glyphCount","group","createLigatureTable","ligature","allCodePoints","createLigatureSet","ligatures","ligatureTables","createLigatureList","sets","setLengths","item","coverage","tableOffset","setOffset","coverageOffset","createLookupList","groupedLigatures","_codePoint","ligA","ligB","createGSUB","scriptList","featureList","lookupList","lists","list","getFirstCharIndex","getLastCharIndex","createOS2Table","maxContext","getIDByUnicode","getSegments","bounds","segment","unicodeNum","getCodePoints","bufferForTable","format","fieldWidth","LANGUAGE","writer","createFormat0Table","createFormat4Table","segments","glyphIndexArrays","glyphIndexArray","segCount","glyphIndexArrayLength","glyphIndex","maxExponent","searchRange","glyphId","createFormat12Table","createCMapTable","singleByteTable","twoByteTable","fourByteTable","tableHeaders","tables","getFlags","compactFlags","prevFlag","firstRepeat","getCoords","coordName","compactCoords","coords","coord","glyphDataSize","tableSize","createGlyfTable","endPtsOfContours","ttfContours","dateToUInt64","startDate","createHeadTable","createHHeadTable","createHtmxTable","isShortFormat","createLocaTable","getMaxPoints","ctr","getMaxContours","createMaxpTable","Str","byteArray","TTF_NAMES","getStrings","getNames","sfntName","orderFields","field","createNameTable","offsetPosition","nameOffset","actualStringDataOffset","pascalString","bytes","createPostTable","TABLES","createGSUBTable","CONST","ulong","calc_checksum","sum","nlongs","leftBytes","leftRes","generateTTF","utils.simplify","utils.interpolate","utils.roundPoints","utils.removeClosingReturnPoints","utils.toRelative","headerSize","bufSize","entrySelector","rangeShift","utils.identifier","headOffset","find","predicate","ac","hasOwn","freeze","oc","assign","HTML_BOOLEAN_ATTRIBUTES","isHTMLBooleanAttribute","HTML_VOID_ELEMENTS","isHTMLVoidElement","HTML_RAW_TEXT_ELEMENTS","isHTMLRawTextElement","isHTMLEscapableRawTextElement","isHTMLMimeType","mimeType","MIME_TYPE","hasDefaultHTMLNamespace","_MIME_TYPES","isValidMimeType","NAMESPACE","conventions","extendError","constructor","writableName","DOMExceptionName","DOMExceptionNames","isValidDomExceptionCode","endsWithError","DOMException","messageOrCode","nameOrMessage","ExceptionCode","entries","ParseError","locator","errors","detectUnicodeSupport","RegExpImpl","UNICODE_SUPPORT","chars","regexp","chars_without","reg","self","part","isStr","regg","UNICODE_REPLACEMENT_CHARACTER","Char","_SChar","SChar_s","S_OPT","NameStartChar","NameStartChar_s","NameChar","Name","Nmtoken","EntityRef","CharRef","Reference","PEReference","EntityValue","AttValue","NCNameStartChar","NCNameChar","NCName","QName","QName_exact","QName_group","SystemLiteral","PubidChar","PubidLiteral","COMMENT_START","COMMENT_END","Comment","PCDATA","Mixed","_children_quantity","children","contentspec","ELEMENTDECL_START","elementdecl","NotationType","Enumeration","EnumeratedType","AttType","DefaultDecl","AttDef","ATTLIST_DECL_START","AttlistDecl","SYSTEM","PUBLIC","ExternalID","ExternalID_match","NDataDecl","EntityDef","ENTITY_DECL_START","GEDecl","PEDef","PEDecl","EntityDecl","PublicID","NotationDecl","Eq","VersionNum","VersionInfo","EncName","EncodingDecl","SDDecl","XMLDecl","DOCTYPE_DECL_START","CDATA_START","CDATA_END","CDStart","CDEnd","CData","CDSect","grammar","PDC","checkSymbol","symbol","notEmptyString","splitOnASCIIWhitespace","orderedSetReducer","current","element","toOrderedSet","arrayIncludes","validateQualifiedName","qualifiedName","validateAndExtract","namespace","localName","splitResult","copy","src","_extends","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","DocumentPosition","parentChain","node","chain","commonAncestor","docGUID","doc","NodeList","nodeFilter","serializeToString","LiveNodeList","refresh","_updateLiveList","inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","attr","lastIndex","namespaceURI","DOMImplementation","feature","version","doctype","contentType","Document","publicId","systemId","internalSubset","DocumentType","title","htmlNode","headNode","titleNode","Node","rootNode","other","otherNode","newChild","refChild","_insertBefore","oldChild","assertPreReplacementValidityInDocument","_removeChild","deep","cloneNode","child","node1","node2","attr1","attr2","Attr","chain1","chain2","ca","_xmlEncoder","_visitNode","ns","remove","_onUpdateChild","childNodes","parentNode","oldPreviousSibling","oldNextSibling","hasValidParentNodeType","hasInsertableNodeType","isDocTypeNode","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","_inDocumentAssertion","newFirst","newLast","pre","removed","importedNode","importNode","rtv","Element","attrs","DocumentFragment","Text","CDATASection","ProcessingInstruction","EntityReference","validated","old","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","isHTMLDocument","lowerQualifiedName","nodeQualifiedName","matchingQName","CharacterData","newText","newNode","Notation","Entity","XMLSerializer","nodeSerializeToString","refNode","visibleNamespaces","needNamespaceDefine","isHTML","addSerializedAttribute","nodeName","prefixedNodeName","defaultNS","ai","nsi","canCloseTag","pubid","sysid","attrs2","getTextContent","dom","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","XMLReader","defaultNSMap","entityMap","domBuilder","_copy","parse","ENTITY_REG","defaultNSMapCopy","errorHandler","fixedFromCharCode","surrogate1","surrogate2","entityReplacer","complete","appendText","xt","linePattern","parseStack","unclosedTags","tagStart","fromSource","tagNameRaw","tagNameMatch","currentTagName","tagNameLower","localNSMap","parseProcessingInstruction","parseDoctypeCommentOrCData","ElementAttributes","currentNSMap","parseElementStartPart","locator2","copyLocator","appendElement","parseHtmlSpecialContent","addAttribute","startIndex","attrName","qName","nsp","nsPrefix","elStartEnd","isEscapableRaw","elEndStart","parseUtils","skipBlanks","blanks","substringFromIndex","substringStartsWith","getMatch","expr","parseDoctypeInternalSubset","parsePI","intSubsetStart","comment","cdata","entities","normalizeLineEndings","DOMParser","DOMHandler","defaultNamespace","isXml","impl","ins","charNode","comm","dt","_locator","onErrorStopParsing","onWarningStopParsing","domParser","getGlyph","glyphElem","fontInfo","pathElem","deduplicateGlyps","glyphs","canonical","_glyph","fontElem","fontFaceElem","familyName","subfamilyName","missingGlyphElem","glyphElements","glyphElement","epsilon","multiplier","divider","calcPowerCoefficients","calcPowerCoefficientsQuad","calcPoint","calcPointQuad","calcPointDerivative","quadSolve","D","DSqrt","minDistanceToLineSq","p1p2","dot","lenSq","param","diff","processSegment","t1","t2","f1","f2","f1_","f2_","isSegmentApproximationClose","tmin","tmax","errorBound","qa","qb","qc","distSq","errorBoundSq","cubicPoints","quadPoints","minDistSq","_isApproximationClose","quadCurves","toFlatArray","quadsList","subdivideCubic","y3","x4","y4","u","bx","sx","fx","ex","dx","by","sy","fy","ey","dy","byNumber","solveInflections","_cubicToQuad","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","approximation","cubicToQuad","inflections","curve","quad","split","inflectionIdx","round","precision","svgPathToContour","lastX","lastY","contourStartX","contourStartY","VERSION_RE","svg2ttf","svgString","sfnt.Font","svgFont","versionString","wght","addCodePoint","svgGlyph","sfnt.Glyph","missingGlyph","svgLigature","charPoint","nextID","glyphSize","svgPath","sfntContours","sfntContour","sfnt.Contour","sfntPoint","sfnt.Point","generateFontTtfBySvg","fontSvg","ttfFont","generateFontTtf","EOT_OFFSET","SFNT_OFFSET","SIZEOF","MAGIC","strbuf","arr","ttf2eot","out","fullName","haveOS2","haveName","haveHead","numTables","tableEntry","OS2Version","nameTable","nameRecord","eot","ttf2eot_1","generateFontEotByTtf","fontTtf","generateFontEot","_has","sources","fnTyped","src_offs","dest_offs","chunks","fnUntyped","on","utils","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","zero","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH","MAX_MATCH","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","d_code","dist","put_short","w","send_bits","send_code","tree","bi_reverse","bi_flush","gen_bitlen","max_code","stree","has_stree","xbits","overflow","gen_codes","bl_count","next_code","tr_static_init","init_block","bi_windup","copy_block","smaller","depth","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lx","build_tree","scan_tree","prevlen","curlen","nextlen","max_count","min_count","send_tree","build_bl_tree","max_blindex","send_all_trees","lcodes","dcodes","blcodes","rank","detect_data_type","black_mask","static_init_done","_tr_init","_tr_stored_block","stored_len","last","_tr_align","_tr_flush_block","opt_lenb","static_lenb","_tr_tally","trees","adler32","adler","s1","s2","adler32_1","makeTable","crcTable","crc32","crc","crc32_1","messages","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_OK","Z_STREAM_END","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_DEFAULT_STRATEGY","Z_DEFLATED","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","strm","errorCode","flush_pending","flush_block_only","put_byte","putShortMSB","read_buf","longest_match","cur_match","chain_length","scan","best_len","nice_match","limit","_win","wmask","strend","scan_end1","scan_end","fill_window","_w_size","more","deflate_stored","flush","max_block_size","max_start","deflate_fast","hash_head","bflush","deflate_slow","max_insert","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","lm_init","DeflateState","deflateResetKeep","deflateReset","ret","deflateSetHeader","deflateInit2","windowBits","memLevel","strategy","wrap","deflateInit","deflate","old_flush","beg","level_flags","bstate","deflateEnd","status","deflateSetDictionary","dictionary","dictLength","avail","tmpDict","deflate_1","STR_APPLY_OK","STR_APPLY_UIA_OK","_utf8len","strings","m_pos","str_len","buf_len","buf2binstring","c_len","utf16buf","ZStream","zstream","zlib_deflate","toString","Z_SYNC_FLUSH","Deflate","dict","mode","chunkSize","_mode","deflator","deflateRaw","gzip","longAlign","WOFF_OFFSET","WOFF_ENTRY_OFFSET","SFNT_ENTRY_OFFSET","woffAppendMetadata","zdata","ttf2woff","flavor","woffHeader","aStr","bStr","woffSize","sfntSize","tableBuf","algntable","sfntOffset","csum","checksumAdjustment","woffDataChains","sfntData","compLength","woffData","ttf2woff_1","generateFontWoffByTtf","generateFontWoff","moduleOverrides","quit_","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","scriptDirectory","locateFile","read_","readAsync","readBinary","logExceptionOnExit","ExitStatus","toLog","nodeFS","nodePath","tryParseAsDataURI","assert","onload","onerror","module","keepRuntimeAlive","xhr","intArrayToString","wasmBinary","noExitRuntime","abort","wasmMemory","ABORT","condition","UTF8Decoder","UTF8ArrayToString","heap","maxBytesToRead","endIdx","endPtr","u0","u1","u2","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","stringToUTF8","outPtr","lengthBytesUTF8","UTF16Decoder","UTF16ToString","maxIdx","HEAPU16","codeUnit","HEAP16","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","HEAP32","stringToUTF32","trailSurrogate","lengthBytesUTF32","alignUp","multiple","HEAP8","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferAndViews","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","what","dataURIPrefix","isDataURI","isFileURI","wasmBinaryFile","getBinary","getBinaryPromise","response","createWasm","info","asmLibraryArg","receiveInstance","instance","receiveInstantiationResult","instantiateArrayBuffer","receiver","instantiateAsync","callbacks","getWasmTableEntry","wasmTableMirror","funcPtr","___cxa_allocate_exception","_malloc","ExceptionInfo","excPtr","destructor","refcount","caught","rethrown","___cxa_throw","__embind_register_bigint","primitiveType","minRange","maxRange","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","body","baseErrorType","errorName","errorClass","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","rawType","registeredInstance","__embind_register_bool","trueValue","falseValue","shift","wt","destructors","pointer","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","Emval","simpleReadValueFromPointer","__embind_register_emval","rv","_embind_repr","floatReadValueFromPointer","__embind_register_float","new_","dummy","runDestructors","del","craftInvokerFunction","humanName","argTypes","classType","cppInvokerFunc","cppTargetFunc","argCount","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFunction","ensureOverloadTable","proto","methodName","prevFunc","exposePublicSymbol","numArguments","heap32VectorToArray","firstElement","array","replacePublicSymbol","dynCallLegacy","sig","dynCall","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_function","rawArgTypesAddr","rawInvoker","invokerArgsArray","integerReadValueFromPointer","signed","__embind_register_integer","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","maxRead","stringSegment","getLength","valueIsOfTypeString","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_void","__emval_incref","requireRegisteredType","__emval_take_value","_abort","_emscripten_memcpy_big","emscripten_realloc_buffer","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","newSize","replacement","_exit","exit","chr","decodeBase64","keyStr","chr1","chr2","chr3","enc1","enc2","enc3","enc4","intArrayFromBase64","decoded","calledRun","runCaller","run","doRun","procExit","em_module","runtimeInit","compress","decompress","wawoff2","generateFontWoff2ByTtf","wawoff","generateFontWoff2","COMMON_STYLES","getFontFace","_fontName","fontUrl","generateStyleCss","fontSlug","DEFAULT_CONFIG","createGenerateCommand","subprogram","configFilePath","configArgs","configFile","fontEot","fontWoff","fontWoff2","styleCss","filenameCss","HEAD","generateIndexHtml","caption","generateLogoSvg","indexHandler","_req","logoHandler","stylesCssHandler","faviconHandler","svgFontHandler","ttfFontHandler","woffFontHandler","woff2FontHandler","eotFontHandler","error404Handler","handleRoute","req","Watcher","watch","createServer","shouldReload","http","parsedUrl","routePath","scanAvailablePort","attempt","server","debounce","createDemoCommand","Program","isDemo","isGen"],"mappings":"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,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,MAAM,IAAI,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,MAAM,KAAK,MAAM,MAAM,GAAG,IAAI,GAC/oEC,IAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,MAAM,GAAG,GAAG,IAAI,OAAO,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,65,66,67,68,69,70,71,82,98,99,100,101,102,103,104,105,112,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129]}